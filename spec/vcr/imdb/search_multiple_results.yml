---
http_interactions:
- request:
    method: get
    uri: http://www.imdb.com/find?q=the%20big%20lebowski&ref_=nv_sr_fn&s=all
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 29 Jul 2017 12:09:30 GMT
      Server:
      - Server
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Type:
      - text/html;charset=UTF-8
      Content-Language:
      - en-US
      Vary:
      - Accept-Encoding,User-Agent
      Set-Cookie:
      - session-id-time=2132050171; Domain=.imdb.com; Expires=Thu, 16-Aug-2085 15:23:38
        GMT; Path=/
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 16-Aug-2085
        15:23:38 GMT; Path=/
      - uu=BCYu_RVhLm8IQbc4X5gAgVWuVXUriK2ET0vc400PhbTVPGBPnJdzYrDZguQaU8yEZFRizPrNTzvh%0D%0AAyNsdR1Xcdv92iifk2z3M2FRy8l6PzjAnvbbcajs8c-aR_tKktMcPPazZUq1jydMd4LbQ-QhQTLM%0D%0AWh-aECoB-TSoB3rhB-jud9JRZvoGTALvvvx4_j1dLGBwvhEQT4KrDOMdfyft7tmQFkzb9gEJm7oJ%0D%0Asodr7wRtXhcioaWlX2SnkVj0DUManxIv2n8XE6QwG1XVte0vchhxsQ%0D%0A;
        Domain=.imdb.com; Expires=Thu, 16-Aug-2085 15:23:38 GMT; Path=/
      P3p:
      - policyref="http://i.imdb.com/images/p3p.xml",CP="CAO DSP LAW CUR ADM IVAo
        IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM
        CNT STA HEA PRE LOC GOV OTC "
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 29 Jul 2017 12:09:31 GMT
recorded_with: VCR 3.0.3
