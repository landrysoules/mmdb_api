---
http_interactions:
- request:
    method: get
    uri: http://www.imdb.com/find?q=the%20big%20lebowski&ref_=nv_sr_fn&s=all
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 01 Jul 2017 15:15:10 GMT
      Server:
      - Server
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Type:
      - text/html;charset=UTF-8
      Content-Language:
      - en-US
      Vary:
      - Accept-Encoding,User-Agent
      Set-Cookie:
      - session-id-time=2129642111; Domain=.imdb.com; Expires=Thu, 19-Jul-2085 18:29:18
        GMT; Path=/
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Thu, 19-Jul-2085
        18:29:18 GMT; Path=/
      - uu=BCYoyZ7iRwnDPBb_SDGboa-Au_03m6of4sNvTunMoxQ-b8vJsPZuM3oEy-fiTEMIjT0DXbN-TYrZ%0D%0Aj_J_b2yHKByOaiDyj50YdlMWhPYQnM3MznvTZP93gakeF1M1D49IgTh1fGHOLwoCx8AbooQtOW4m%0D%0AVkYNpunXWv3i54f3Mmx0WobGKb1bPuzmKQY51Mn1G0JyjyDi8M_cIg-oWnsNMNvisGCW0gylnlKH%0D%0AVhECk-bIDcvF5Ah7dMUNkCAqrYsV36FhD-u2ADQmsS7q3DP1JthhEA%0D%0A;
        Domain=.imdb.com; Expires=Thu, 19-Jul-2085 18:29:18 GMT; Path=/
      P3p:
      - policyref="http://i.imdb.com/images/p3p.xml",CP="CAO DSP LAW CUR ADM IVAo
        IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM
        CNT STA HEA PRE LOC GOV OTC "
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 01 Jul 2017 15:15:11 GMT
recorded_with: VCR 3.0.3
