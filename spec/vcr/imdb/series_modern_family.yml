---
http_interactions:
- request:
    method: get
    uri: http://www.imdb.com/title/tt1442437/?ref_=fn_al_tt_1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 03 Sep 2017 16:13:16 GMT
      Server:
      - Server
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Type:
      - text/html;charset=UTF-8
      Content-Language:
      - en-US
      Vary:
      - Accept-Encoding,User-Agent
      Set-Cookie:
      - session-id-time=2135175195; Domain=.imdb.com; Expires=Fri, 21-Sep-2085 19:27:23
        GMT; Path=/
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Fri, 21-Sep-2085
        19:27:23 GMT; Path=/
      - uu=BCYtQhDoHwhwy2CpGJaLseemzBAJdVxcTfoafzQNy6UXY_zQmKT4ZfiTWds8JtoVJICPZuI00M6W%0D%0AbA_q_8FtCt5DR4jjBLUTGQDSBqmTiEml-jgagYlJJQltjQXk4uIRslBNXIQilQgKXK3-igdB1cux%0D%0AueuTkVahso5ln9pdvGqJbwcQqkNq85Pn7BkdUo6yqcbEyEHcY8pLYwmdPcQXnYSPy4DNSYIGUPUQ%0D%0ACBSsxW13NBs1K6c4bO9hDzJsfDkFpRL2bYHbor97bNbyHHikWZnekg%0D%0A;
        Domain=.imdb.com; Expires=Fri, 21-Sep-2085 19:27:23 GMT; Path=/
      P3p:
      - policyref="http://i.imdb.com/images/p3p.xml",CP="CAO DSP LAW CUR ADM IVAo
        IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM
        CNT STA HEA PRE LOC GOV OTC "
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        








<!DOCTYPE html>
<html
xmlns:og="http://ogp.me/ns#"
xmlns:fb="http://www.facebook.com/2008/fbml">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <meta name="apple-itunes-app" content="app-id=342792525, app-argument=imdb:///title/tt1442437?src=mdot">
            <script type="text/javascript">var ue_t0=window.ue_t0||+new Date();</script>
            <script type="text/javascript">
                var ue_mid = "A1EVAM02EL8SFB"; 
                var ue_sn = "www.imdb.com";  
                var ue_furl = "fls-na.amazon.com";
                var ue_sid = "000-0000000-0000000";
                var ue_id = "1PA8DRJEF15AQ27MWJHY";
                (function(e){var c=e;var a=c.ue||{};a.main_scope="mainscopecsm";a.q=[];a.t0=c.ue_t0||+new Date();a.d=g;function g(h){return +new Date()-(h?0:a.t0)}function d(h){return function(){a.q.push({n:h,a:arguments,t:a.d()})}}function b(m,l,h,j,i){var k={m:m,f:l,l:h,c:""+j,err:i,fromOnError:1,args:arguments};c.ueLogError(k);return false}b.skipTrace=1;e.onerror=b;function f(){c.uex("ld")}if(e.addEventListener){e.addEventListener("load",f,false)}else{if(e.attachEvent){e.attachEvent("onload",f)}}a.tag=d("tag");a.log=d("log");a.reset=d("rst");c.ue_csm=c;c.ue=a;c.ueLogError=d("err");c.ues=d("ues");c.uet=d("uet");c.uex=d("uex");c.uet("ue")})(window);(function(e,d){var a=e.ue||{};function c(g){if(!g){return}var f=d.head||d.getElementsByTagName("head")[0]||d.documentElement,h=d.createElement("script");h.async="async";h.src=g;f.insertBefore(h,f.firstChild)}function b(){var k=e.ue_cdn||"z-ecx.images-amazon.com",g=e.ue_cdns||"images-na.ssl-images-amazon.com",j="/images/G/01/csminstrumentation/",h=e.ue_file||"ue-full-11e51f253e8ad9d145f4ed644b40f692._V1_.js",f,i;if(h.indexOf("NSTRUMENTATION_FIL")>=0){return}if("ue_https" in e){f=e.ue_https}else{f=e.location&&e.location.protocol=="https:"?1:0}i=f?"https://":"http://";i+=f?g:k;i+=j;i+=h;c(i)}if(!e.ue_inline){if(a.loadUEFull){a.loadUEFull()}else{b()}}a.uels=c;e.ue=a})(window,document);
                if (!('CS' in window)) { window.CS = {}; }
                    window.CS.loginLocation = "https://www.imdb.com/registration/signin?u=%2Ftitle%2Ftt1442437%2F%3Fref_%3Dfn_al_tt_1";
            </script>
 

        
        <script type="text/javascript">var IMDbTimer={starttime: new Date().getTime(),pt:'java'};</script>

<script>
    if (typeof uet == 'function') {
      uet("bb", "LoadTitle", {wb: 1});
    }
</script>
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_title"] = new Date().getTime(); })(IMDbTimer);</script>
        <title>Modern Family (TV Series 2009– ) - IMDb</title>
  <script>(function(t){ (t.events = t.events || {})["csm_head_post_title"] = new Date().getTime(); })(IMDbTimer);</script>
<script>
    if (typeof uet == 'function') {
      uet("be", "LoadTitle", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "LoadTitle", {wb: 1});
    }
</script>
        
            <link rel="canonical" href="http://www.imdb.com/title/tt1442437/" />
            <meta property="og:url" content="http://www.imdb.com/title/tt1442437/" />

<script>
    if (typeof uet == 'function') {
      uet("bb", "LoadIcons", {wb: 1});
    }
</script>
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_icon"] = new Date().getTime(); })(IMDbTimer);</script>
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/safari-favicon-517611381._CB522736552_.svg" mask rel="icon" sizes="any">
        <link rel="icon" type="image/ico" href="http://ia.media-imdb.com/images/G/01/imdb/images/favicon-2165806970._CB522736556_.ico" />
        <meta name="theme-color" content="#000000" />
        <link rel="shortcut icon" type="image/x-icon" href="http://ia.media-imdb.com/images/G/01/imdb/images/desktop-favicon-2165806970._CB522736561_.ico" />
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-4151659188._CB522736129_.png" rel="apple-touch-icon"> 
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-76x76-53536248._CB522736233_.png" rel="apple-touch-icon" sizes="76x76"> 
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-120x120-2442878471._CB522736253_.png" rel="apple-touch-icon" sizes="120x120"> 
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-152x152-1475823641._CB522736557_.png" rel="apple-touch-icon" sizes="152x152">            
        <link rel="search" type="application/opensearchdescription+xml" href="http://ia.media-imdb.com/images/G/01/imdb/images/imdbsearch-3349468880._CB522736605_.xml" title="IMDb" />
  <script>(function(t){ (t.events = t.events || {})["csm_head_post_icon"] = new Date().getTime(); })(IMDbTimer);</script>
<script>
    if (typeof uet == 'function') {
      uet("be", "LoadIcons", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "LoadIcons", {wb: 1});
    }
</script>
        
        <meta property="pageId" content="tt1442437" />
        <meta property="pageType" content="title" />
        <meta property="subpageType" content="main" />


        <link rel='image_src' href="https://images-na.ssl-images-amazon.com/images/M/MV5BNzRjOTE1ZTEtMTkwYy00MDQ4LTkxMmYtNzgxMWFlY2YyZjU2XkEyXkFqcGdeQXVyMzAzNTY3MDM@._V1_UY1200_CR90,0,630,1200_AL_.jpg">
        <meta property='og:image' content="https://images-na.ssl-images-amazon.com/images/M/MV5BNzRjOTE1ZTEtMTkwYy00MDQ4LTkxMmYtNzgxMWFlY2YyZjU2XkEyXkFqcGdeQXVyMzAzNTY3MDM@._V1_UY1200_CR90,0,630,1200_AL_.jpg" />

        <meta property='og:type' content="video.tv_show" />
    <meta property='fb:app_id' content='115109575169727' />

    <meta property='og:title' content="Modern Family (TV Series 2009– )" />
    <meta property='og:site_name' content='IMDb' />
    <meta name="title" content="Modern Family (TV Series 2009– ) - IMDb" />
        <meta name="description" content="Created by Steven Levitan, Christopher Lloyd.  With Ed O'Neill, Sofía Vergara, Julie Bowen, Ty Burrell. Three different, but related families face trials and tribulations in their own uniquely comedic ways." />
        <meta property="og:description" content="Created by Steven Levitan, Christopher Lloyd.  With Ed O'Neill, Sofía Vergara, Julie Bowen, Ty Burrell. Three different, but related families face trials and tribulations in their own uniquely comedic ways." />
        <meta name="keywords" content="Reviews, Showtimes, DVDs, Photos, Message Boards, User Ratings, Synopsis, Trailers, Credits" />
        <meta name="request_id" content="1PA8DRJEF15AQ27MWJHY" />

<script>
    if (typeof uet == 'function') {
      uet("bb", "LoadCSS", {wb: 1});
    }
</script>
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_css"] = new Date().getTime(); })(IMDbTimer);</script>
<!-- h=ics-c42xl-1a-38f4434e.us-east-1 -->

            <link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/collections/title-flat-v2-3883865263._CB517252283_.css" />
        <noscript>
            <link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/wheel/nojs-2827156349._CB522739048_.css">
        </noscript>
  <script>(function(t){ (t.events = t.events || {})["csm_head_post_css"] = new Date().getTime(); })(IMDbTimer);</script>
<script>
    if (typeof uet == 'function') {
      uet("be", "LoadCSS", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "LoadCSS", {wb: 1});
    }
</script>

<script>
    if (typeof uet == 'function') {
      uet("bb", "LoadJS", {wb: 1});
    }
</script>
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_ads"] = new Date().getTime(); })(IMDbTimer);</script>
        
        <script  type="text/javascript">
            // ensures js doesn't die if ads service fails.  
            // Note that we need to define the js here, since ad js is being rendered inline after this.
            (function(f) {
                // Fallback javascript, when the ad Service call fails.  
                
                if((window.csm == null || window.generic == null || window.consoleLog == null)) {
                    if (window.console && console.log) {
                        console.log("one or more of window.csm, window.generic or window.consoleLog has been stubbed...");
                    }
                }
                
                window.csm = window.csm || { measure:f, record:f, duration:f, listen:f, metrics:{} };
                window.generic = window.generic || { monitoring: { start_timing: f, stop_timing: f } };
                window.consoleLog = window.consoleLog || f;
            })(function() {});
        </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_head_delivery_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "LoadJS", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "LoadJS", {wb: 1});
    }
</script>
        </head>
    <body id="styleguide-v2" class="fixed">
<script>
    if (typeof uet == 'function') {
      uet("bb");
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_body_delivery_started');
    }
  </script>
        <div id="wrapper">
            <div id="root" class="redesign">
<script>
    if (typeof uet == 'function') {
      uet("ns");
    }
</script>
<div id="nb20" class="navbarSprite">
<div id="supertab">	
	<!-- no content received for slot: top_ad -->
	
</div>
  <div id="navbar" class="navbarSprite">
<noscript>
  <link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/site/consumer-navbar-no-js-3652782989._CB522736526_.css" />
</noscript>
<!--[if IE]><link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/site/consumer-navbar-ie-2133976414._CB522736582_.css"><![endif]-->
<span id="home_img_holder">
<a href="/?ref_=nv_home"
title="Home" class="navbarSprite" id="home_img" ></a>  <span class="alt_logo">
    <a href="/?ref_=nv_home"
title="Home" >IMDb</a>
  </span>
</span>
<form
 method="get"
 action="/find"
 class="nav-searchbar-inner"
 id="navbar-form"

>
  <div id="nb_search">
    <noscript><div id="more_if_no_javascript"><a href="/search/">More</a></div></noscript>
    <button id="navbar-submit-button" class="primary btn" type="submit"><div class="magnifyingglass navbarSprite"></div></button>
    <input type="hidden" name="ref_" value="nv_sr_fn" />
    <input type="text" autocomplete="off" value="" name="q" id="navbar-query" placeholder="Find Movies, TV shows, Celebrities and more...">
    <div class="quicksearch_dropdown_wrapper">
      <select name="s" id="quicksearch" class="quicksearch_dropdown navbarSprite"
              onchange="jumpMenu(this); suggestionsearch_dropdown_choice(this);">
        <option value="all" >All</option>
        <option value="tt" >Titles</option>
        <option value="ep" >TV Episodes</option>
        <option value="nm" >Names</option>
        <option value="co" >Companies</option>
        <option value="kw" >Keywords</option>
        <option value="ch" >Characters</option>
        <option value="qu" >Quotes</option>
        <option value="bi" >Bios</option>
        <option value="pl" >Plots</option>
      </select>
    </div>
    <div id="navbar-suggestionsearch"></div>
  </div>
</form>
<div id="megaMenu">
    <ul id="consumer_main_nav" class="main_nav">
        <li class="spacer"></li>
        <li class="css_nav_item" id="navTitleMenu">
            <p class="navCategory">
                <a href="/movies-in-theaters/?ref_=nv_tp_inth_1"
>Movies</a>,
                <a href="/chart/toptv/?ref_=nv_tp_tv250_2"
>TV</a><br />
                & <a href="/showtimes/?ref_=nv_tp_sh_3"
>Showtimes</a></p>
            <span class="downArrow"></span>
            <div id="navMenu1" class="sub_nav">
                <div id="titleAd"></div>
                <div class="subNavListContainer">
                    <h5>MOVIES</h5>
                    <ul>
                        <li><a href="/movies-in-theaters/?ref_=nv_mv_inth_1"
>In Theaters</a></li>
                        <li><a href="/showtimes/?ref_=nv_mv_sh_2"
>Showtimes & Tickets</a></li>
                        <li><a href="/trailers/?ref_=nv_mv_tr_3"
>Latest Trailers</a></li>
                        <li><a href="/movies-coming-soon/?ref_=nv_mv_cs_4"
>Coming Soon</a></li>
                        <li><a href="/calendar/?ref_=nv_mv_cal_5"
>Release Calendar</a></li>
                        <li><a href="/chart/top?ref_=nv_mv_250_6"
>Top Rated Movies</a></li>
                        <li><a href="/india/top-rated-indian-movies?ref_=nv_mv_250_in_7"
>Top Rated Indian Movies</a></li>
                        <li><a href="/chart/moviemeter?ref_=nv_mv_mpm_8"
>Most Popular Movies</a></li>
                    </ul>
                    <h5>CHARTS & TRENDS</h5>
                    <ul>
                        <li><a href="/chart/?ref_=nv_ch_cht_1"
>Box Office</a></li>
                        <li><a href="/search/title?count=100&groups=oscar_best_picture_winners&sort=year,desc&ref_=nv_ch_osc_2"
>Oscar Winners</a></li>
                        <li><a href="/genre/?ref_=nv_ch_gr_3"
>Most Popular by Genre</a></li>
                    </ul>
                </div>
                <div class="subNavListContainer">
                    <h5>TV & VIDEO</h5>
                    <ul>
                        <li><a href="/tv/?ref_=nv_tvv_tv_1"
>IMDb TV</a></li>
                        <li><a href="/tvgrid/?ref_=nv_tvv_ls_2"
>On Tonight</a></li>
                        <li><a href="/chart/toptv/?ref_=nv_tvv_250_3"
>Top Rated TV Shows</a></li>
                        <li><a href="/chart/tvmeter?ref_=nv_tvv_mptv_4"
>Most Popular TV Shows</a></li>
                        <li><a href="/sections/dvd/?ref_=nv_tvv_dvd_5"
>DVD & Blu-Ray</a></li>
                    </ul>
                    <h5>SPECIAL FEATURES</h5>
                    <ul>
                        <li><a href="/amazon-originals/?ref_=nv_sf_ams_1"
>Amazon Originals</a></li>
                        <li><a href="/streaming/?ref_=nv_sf_st_2"
>Streaming</a></li>
                        <li><a href="/scary-good/?ref_=nv_sf_scg_3"
>Scary Good</a></li>
                        <li><a href="/imdbpicks/?ref_=nv_sf_picks_4"
>IMDb Picks</a></li>
                        <li><a href="/superheroes/?ref_=nv_sf_supr_5"
>Superheroes</a></li>
                    </ul>
                </div>
            </div>
        </li>
        <li class="spacer"></li>
        <li class="css_nav_item" id="navNameMenu">
            <p class="navCategory">
                <a href="/search/name?gender=male,female&ref_=nv_tp_cel_1"
>Celebs</a>,
                <a href="/awards-central/?ref_=nv_tp_awrd_2"
>Events</a><br />
                & <a href="/gallery/rg784964352?ref_=nv_tp_ph_3"
>Photos</a></p>
            <span class="downArrow"></span>
            <div id="navMenu2" class="sub_nav">
                <div id="nameAd"></div>
                <div class="subNavListContainer">
                    <h5>CELEBS</h5>
                    <ul>
                            <li><a href="/search/name?birth_monthday=09-03&refine=birth_monthday&ref_=nv_cel_brn_1"
>Born Today</a></li>
                        <li><a href="/news/celebrity?ref_=nv_cel_nw_2"
>Celebrity News</a></li>
                        <li><a href="/search/name?gender=male,female&ref_=nv_cel_m_3"
>Most Popular Celebs</a></li>
                    </ul>
                    <h5>PHOTOS</h5>
                    <ul>
                        <li><a href="/gallery/rg1859820288?ref_=nv_ph_ls_1"
>Latest Stills</a></li>
                        <li><a href="/gallery/rg1624939264?ref_=nv_ph_lp_2"
>Latest Posters</a></li>
                        <li><a href="/gallery/rg1641716480?ref_=nv_ph_lv_3"
>Photos We Love</a></li>
                    </ul>
                </div>
                <div class="subNavListContainer">
                    <h5>EVENTS</h5>
                    <ul>
                        <li><a href="/awards-central/?ref_=nv_ev_awrd_1"
>Awards Central</a></li>
                        <li><a href="/festival-central/?ref_=nv_ev_fc_2"
>Festival Central</a></li>
                        <li><a href="/oscars/?ref_=nv_ev_acd_3"
>Oscars</a></li>
                        <li><a href="/golden-globes/?ref_=nv_ev_gg_4"
>Golden Globes</a></li>
                        <li><a href="/sundance/?ref_=nv_ev_sun_5"
>Sundance</a></li>
                        <li><a href="/cannes/?ref_=nv_ev_can_6"
>Cannes</a></li>
                        <li><a href="/comic-con/?ref_=nv_ev_comic_7"
>Comic-Con</a></li>
                        <li><a href="/emmys/?ref_=nv_ev_rte_8"
>Emmy Awards</a></li>
                        <li><a href="/venice/?ref_=nv_ev_venice_9"
>Venice Film Festival</a></li>
                        <li><a href="/toronto/?ref_=nv_ev_tor_10"
>Toronto Film Festival</a></li>
                        <li><a href="/festival-central/tribeca?ref_=nv_ev_trb_11"
>Tribeca</a></li>
                        <li><a href="/event/all/?ref_=nv_ev_all_12"
>All Events</a></li>
                    </ul>
                </div>
            </div>
        </li>
        <li class="spacer"></li>
        <li class="css_nav_item" id="navNewsMenu">
            <p class="navCategory">
                <a href="/news/top?ref_=nv_tp_nw_1"
>News</a> &<br />
                <a href="/czone/?ref_=nv_cm_cz_2"
>Community</a>
            </p>
            <span class="downArrow"></span>
            <div id="navMenu3" class="sub_nav">
                <div id="latestHeadlines">
                    <div class="subNavListContainer">
                        <h5>LATEST HEADLINES</h5>
    <ul>
                <li itemprop="headline">
<a href="/news/ni61471529/?ref_=nv_nw_tn_1"
> Walter Becker, Steely Dan Guitarist, Dies at 67
</a><br />
                        <span class="time">1 hours ago</span>
                </li>
                <li itemprop="headline">
<a href="/news/ni61471075/?ref_=nv_nw_tn_2"
> Claire Foy Crowned Britannia Artist of the Year
</a><br />
                        <span class="time">8 hours ago</span>
                </li>
                <li itemprop="headline">
<a href="/news/ni61470787/?ref_=nv_nw_tn_3"
> From ‘Lady Bird’ to ‘Battle of the Sexes,’ Best Actress Race Takes Shape in Telluride
</a><br />
                        <span class="time">12 hours ago</span>
                </li>
    </ul>
                    </div>
                </div>
                <div class="subNavListContainer">
                    <h5>NEWS</h5>
                    <ul>
                        <li><a href="/news/top?ref_=nv_nw_tp_1"
>Top News</a></li>
                        <li><a href="/news/movie?ref_=nv_nw_mv_2"
>Movie News</a></li>
                        <li><a href="/news/tv?ref_=nv_nw_tv_3"
>TV News</a></li>
                        <li><a href="/news/celebrity?ref_=nv_nw_cel_4"
>Celebrity News</a></li>
                        <li><a href="/news/indie?ref_=nv_nw_ind_5"
>Indie News</a></li>
                    </ul>
                    <h5>COMMUNITY</h5>
                    <ul>
                        <li><a href="/czone/?ref_=nv_cm_cz_2"
>Contributor Zone</a></li>
                        <li><a href="/poll/?ref_=nv_cm_pl_3"
>Polls</a></li>
                    </ul>
                </div>
            </div>
        </li>
        <li class="spacer"></li>
        <li class="css_nav_item" id="navWatchlistMenu">
<p class="navCategory singleLine watchlist">
    <a href="/list/watchlist?ref_=nv_wl_all_0"
>Watchlist</a>
</p>
<span class="downArrow"></span>
<div id="navMenu4" class="sub_nav">
    <h5>
            YOUR WATCHLIST
    </h5>
    <ul id="navWatchlist">
    </ul>
    <script>
    if (!('imdb' in window)) { window.imdb = {}; }
    window.imdb.watchlistTeaserData = [
                {
                        href : "/list/watchlist",
                src : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/watchlist_slot1_logged_out-1670046337._CB522736556_.jpg"
                },
                {
                    href : "/search/title?count=100&title_type=feature,tv_series",
                src : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/watchlist_slot2_popular-4090757197._CB522736562_.jpg"
                },
                {
                    href : "/chart/top",
                src : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/watchlist_slot3_top250-575799966._CB522736596_.jpg"
                }
    ];
    </script>
</div>
        </li>
        <li class="spacer"></li>
    </ul>
<script>
if (!('imdb' in window)) { window.imdb = {}; }
window.imdb.navbarAdSlots = {
    titleAd : {
    },
    nameAd : {
    }
}
</script>
</div>
<div id="nb_extra">
    <ul id="nb_extra_nav" class="main_nav">
        <li class="css_nav_item" id="navProMenu">
            <p class="navCategory">
<a href="http://pro.imdb.com/signup/index.html?rf=cons_nb_hm&ref_=cons_nb_hm"
> <img alt="IMDbPro Menu" src="http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_logo_nb-3000473826._CB530713470_.png" />
</a>            </p>
            <span class="downArrow"></span>
            <div id="navMenuPro" class="imdb-pro-ad sub_nav">
<a href="http://pro.imdb.com/signup/index.html?rf=cons_nb_hm&ref_=cons_nb_hm"
class="imdp-pro-ad__link" > <div id="proAd" class="imdb-pro-ad__image">
<img alt="Go to IMDbPro" height="180" width="174"
src="http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_menu_user-4091932618._CB530713443_.png"
srcset="http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_menu_user-4091932618._CB530713443_.png 1x,
http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_menu_user_2x-2074318947._CB530713441_.png 2x" />
</div>
<section class="imdb-pro-ad__content">
<h1 class="imdb-pro-ad__title">The leading information resource for the entertainment industry</h1>
<p class="imdb-pro-ad__line">Find industry contacts &amp; talent representation</p>
<p class="imdb-pro-ad__line">Manage your photos, credits, &amp; more</p>
<p class="imdb-pro-ad__line">Showcase yourself on IMDb &amp; Amazon</p>
<span role="button" class="imdb-pro-ad__button">Go to IMDbPro</a>
</section>
</a>            </div>
        </li>
        <li class="spacer"><span class="ghost">|</span></li>
        <li>
            <a href="/help/?ref_=nb_hlp"
>Help</a>
        </li>
        <li class="social">

    <a href="/offsite/?page-action=fol_fb&token=BCYleiIBFMG09DnyyuuIUviKpijHA1RUCXvgvTNFsTQUMqtHojS4c9Q-deid0EWRK73eA-xBxR9i%0D%0A9LfnP4TJdkp3_LJh4sh4JaGX87zQhWdwo23wygaAQi_6p-wtV7DNd12lAKZhAu65D28Yoi7SH2wr%0D%0AL5HFoda6WvNZlFCcskzexP3nFiVZciDExCECZeAeBrLUkVvGYQpNBrXlbMPfQ4Cn_g%0D%0A&ref_=tt_nv_fol_fb"
title="Follow IMDb on Facebook" target="_blank" itemprop='url'> <span class="desktop-sprite follow-facebook" ></span>
</a>
    <a href="/offsite/?page-action=fol_tw&token=BCYpn9ETUZpZF7X91gPT3dL1CDczHB0JNbBtQMcNhXR6rIW7A72aYgEg065EAZoUT88BUQfp5Aeq%0D%0AxEmv71uaD3q73MrlTU-b-bUrdlmDgXpXHvD0Wwug5BA0fjVuKK3kKxy3fjSsgFePfZ43NDtn1D5c%0D%0AHqnRl9X6ut2mgmFOIqlrjfYvmm969g1t7osSsyopWXyspmIi5MkYE2h4KPCzzpIhaA%0D%0A&ref_=tt_nv_fol_tw"
title="Follow IMDb on Twitter" target="_blank" itemprop='url'> <span class="desktop-sprite follow-twitter" ></span>
</a>
    <a href="/offsite/?page-action=fol_inst&token=BCYmtKQZfOP1GXQQeag8_YtUiNPEjvzR4xFo3N_O12zySekm9dyFDkPADMWDciNhuBEUduo-j3R2%0D%0AmDbcYiZJ69rbI4o_QLXioS5wOuNhXKOeZmUb2ORbrSD7Kke0aCSlzetpTlF0MY_gEi_Cmd9uhqIC%0D%0AYiW9rdi4nrXgiB3Vmoyadj2kV4HqfNyxvmdHQzX_fBESYTn4U9BbU8LX2JOdai5rMg%0D%0A&ref_=tt_nv_fol_inst"
title="Follow IMDb on Instagram" target="_blank" itemprop='url'> <span class="desktop-sprite follow-instagram" ></span>
</a>
        </li>
    </ul>
</div>
<div id="nb_personal">
    <ul id="consumer_user_nav" class="main_nav">

            <li class="css_nav_menu no_arrow" id="navUserMenu">
            <p class="navCategory singleLine">
                <a id="facebook-signin-link" href="https://graph.facebook.com/v2.8/oauth/authorize?client_id=127059960673829&scope=email%2Cuser_about_me%2Cuser_birthday&state=eyI0OWU2YyI6ImRhMjkiLCJ1IjoiaHR0cHM6Ly93d3cuaW1kYi5jb20vP3JlZl89bnZfZmJfbGdpbiIsIm1hbnVhbExpbmsiOiJmYWxzZSJ9&redirect_uri=https%3A%2F%2Fwww.imdb.com%2Fregistration%2Ffacebookhandler%2F" class="signin-button">
                <span class="facebook-logo"></span>
                <span class="signin-facebook-text">Sign in with Facebook</span></a>
                <a href="https://www.imdb.com/registration/signin?u=/title/tt1442437/%3Fref_%3Dfn_al_tt_1&ref_=nv_usr_lgin_1"
rel="login" class="signin-other-options-text" id="nblogin" >Other Sign in options</a>
                </p>
        </li>
    </ul>
</div>
  </div>
</div>
	
	<!-- no content received for slot: navstrip -->
	
	
	<!-- no content received for slot: injected_navstrip -->
	
<script>
    if (typeof uet == 'function') {
      uet("ne");
    }
</script>
              

                    <div id="pagecontent" class="pagecontent" itemscope itemtype="http://schema.org/TVSeries">
	
	<!-- no content received for slot: injected_billboard -->
	


    
    
    

    
    
    

    
    
    

	
	<!-- no content received for slot: navboard -->
	


    
    
    

    
    
    

<div id="content-2-wide" class="flatland">
    <div id="main_top" class="main">

    
    
    

    
    
    


    
    
    

            <div class="title-overview">


  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleOverviewWidget_started');
    }
  </script>
        <div id="title-overview-widget" class="heroic-overview">
            <div class="message_box">
                <div id="star-ratings-widget-error" class="hidden error">
                    <h2>There was an error trying to load your rating for this title.</h2>
                    <p>Some parts of this page won't work property. Please reload or try later.</p>
                </div>
            </div>
            <div class="vital">                
      <div id="quicklinksBar" class="subnav">
  <div id="quicklinksMainSection">
         <a href="/title/tt1442437/fullcredits?ref_=tt_ql_1"
class="quicklink" >FULL CAST AND CREW</a> <span class="ghost">|</span>
         <a href="/title/tt1442437/trivia?ref_=tt_ql_2"
class="quicklink" >TRIVIA</a> <span class="ghost">|</span>
         <a href="/title/tt1442437/reviews?ref_=tt_ql_3"
class="quicklink" >USER REVIEWS</a> <span class="ghost">|</span>
      <a href="http://pro.imdb.com/title/tt1442437?rf=cons_tt_contact&ref_=cons_tt_contact"
class="quicklink" >IMDbPro</a>
        <span class="ghost">|</span>
        <span class="show_more quicklink">
            MORE<span class="titleOverviewSprite quicklinksArrowUp"></span>
        </span>
        <span class="show_less quicklink" style="display:none">
           LESS<span class="titleOverviewSprite quicklinksArrowDown"></span>
        </span>
  </div>

    <span class="titleOverviewShareButton launch-share-popover quicklink">SHARE</span>
    <div id="share-popover">
        <a class="close-popover" href="#">X</a>
        <h4>Share</h4>
        
    
    
    <a onclick="window.open(&quot;http://www.facebook.com/sharer.php?u=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1442437%2F%3Fref_%3Dext_shr_fb_tt&quot;, 'newWindow', 'width=626,height=436'); return false;"
       href="http://www.facebook.com/sharer.php?u=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1442437%2F%3Fref_%3Dext_shr_fb_tt"
       title="Share on Facebook"
       class="facebook"
       target="_blank"><div class="option facebook">
                            <span class="titlePageSprite share_facebook"></span>
                            <div>Facebook</div>
                        </div></a>
    
    
    <a onclick="window.open(&quot;http://twitter.com/intent/tweet?text=Modern%20Family%20(TV%20Series%20(2009%E2%80%93%20))%20-%20imdb.com%2Ftitle%2Ftt1442437%2F%3Fref_%3Dext_shr_tw_tt&quot;, 'newWindow', 'width=815,height=436'); return false;"
       href="http://twitter.com/intent/tweet?text=Modern%20Family%20(TV%20Series%20(2009%E2%80%93%20))%20-%20imdb.com%2Ftitle%2Ftt1442437%2F%3Fref_%3Dext_shr_tw_tt"
       title="Share on Twitter"
       class="twitter"
       target="_blank"><div class="option twitter">
                            <span class="titlePageSprite share_twitter"></span>
                            <div>Twitter</div>
                        </div></a>
    <a href="mailto:?subject=IMDb%3A%20Modern%20Family%20(TV%20Series%20(2009%E2%80%93%20))&body=IMDb%3A%20Modern%20Family%20(TV%20Series%20(2009%E2%80%93%20))%0AThree%20different%2C%20but%20related%20families%20face%20trials%20and%20tribulations%20in%20their%20own%20uniquely%20comedic%20ways.%0Ahttp%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1442437%2F%3Fref_%3Dext_shr_eml_tt" 
       title="Share by e-mail"
       class=""><div class='option email'>
                    <span class='titlePageSprite share_email'></span>
                    <div>E-mail</div>
                    </div></a>
     <a href="#" class="open-checkin-popover">
        <div class="option checkin">
            <span class="titlePageSprite share_checkin"></span>
            <div>Check in</div>
        </div>
     </a>     
            
    </div>
    
        <div id="share-checkin">
<div class="add_to_checkins" data-const="tt1442437" data-lcn="title-maindetails">
<span class="btn2_wrapper"><a onclick='' class="btn2 large btn2_text_on disabled checkins_action_btn"><span class="btn2_glyph">0</span><span class="btn2_text">Check in</span></a></span>    <div class="popup checkin-dialog">
        <a class="small disabled close btn">X</a>
        <span class="beta">Beta</span>
        <span class="title">I'm Watching This!</span>
        <div class="body">
            <div class="info">Keep track of everything you watch; tell your friends.
            </div>
            <div class="small message_box">
                <div class="hidden error"><h2>Error</h2> Please try again!</div>
                <div class="hidden success"><h2>Added to Your Check-Ins.</h2> <a href="/list/checkins">View</a></div>
            </div>
            <textarea data-msg="Enter a comment..."></textarea>
            <div class="share">
                <button class="large primary btn"><span>Check in</span></button>
<!--
                    Check-ins are more fun when<br>
                    you <a href="/register/sharing">enable Facebook sharing</a>!
-->
            </div>
        </div>
    </div>
    <input type="hidden" name="49e6c" value="da29">
</div>
        </div>

   <div class="quicklinkSection" id="full_subnav" style="display:none">           
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">DETAILS</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/fullcredits?ref_=tt_ql_dt_1"
class="quicklink" >Full Cast and Crew</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/releaseinfo?ref_=tt_ql_dt_2"
class="quicklink" >Release Dates</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/officialsites?ref_=tt_ql_dt_3"
class="quicklink" >Official Sites</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/business?ref_=tt_ql_dt_4"
class="quicklink quicklinkGray" >Box Office/Business</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/companycredits?ref_=tt_ql_dt_5"
class="quicklink" >Company Credits</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/locations?ref_=tt_ql_dt_6"
class="quicklink" >Filming Locations</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/technical?ref_=tt_ql_dt_7"
class="quicklink" >Technical Specs</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/literature?ref_=tt_ql_dt_8"
class="quicklink" >Literature</a>                </div>
    </div>
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">TV</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/episodes?ref_=tt_ql_tv_1"
class="quicklink" >Episode List</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/epcast?ref_=tt_ql_tv_2"
class="quicklink" >Episode Cast</a>                </div>
      <div class="quicklinkSectionItem">
<a href="/title/tt1442437/eprate?ref_=tt_ql_tv_3"
class="quicklink" >Rated Episodes</a>         <br /> - by <a href="/title/tt1442437/epdate?ref_=tt_ql_tv_4"
class="quicklink" >date</a> /
<a href="/title/tt1442437/epvote?ref_=tt_ql_tv_5"
class="quicklink" >vote</a>      </div>
    </div>
               </div>
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">STORYLINE</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/taglines?ref_=tt_ql_stry_1"
class="quicklink" >Taglines</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/plotsummary?ref_=tt_ql_stry_2"
class="quicklink" >Plot Summary</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/synopsis?ref_=tt_ql_stry_3"
class="quicklink quicklinkGray" >Synopsis</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/keywords?ref_=tt_ql_stry_4"
class="quicklink" >Plot Keywords</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/parentalguide?ref_=tt_ql_stry_5"
class="quicklink" >Parents Guide</a>                </div>
    </div>
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">RELATED ITEMS</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/news?ref_=tt_ql_rel_1"
class="quicklink" >NewsDesk</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/externalsites?ref_=tt_ql_rel_2"
class="quicklink" >External Sites</a>                </div>
    </div>
               </div>
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">OPINION</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/awards?ref_=tt_ql_op_1"
class="quicklink" >Awards</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/faq?ref_=tt_ql_op_2"
class="quicklink" >FAQ</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/reviews?ref_=tt_ql_op_3"
class="quicklink" >User Reviews</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/ratings?ref_=tt_ql_op_4"
class="quicklink" >User Ratings</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/externalreviews?ref_=tt_ql_op_5"
class="quicklink" >External Reviews</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/criticreviews?ref_=tt_ql_op_6"
class="quicklink quicklinkGray" >Metacritic Reviews</a>                </div>
    </div>
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">PHOTO & VIDEO</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/mediaindex?ref_=tt_ql_pv_1"
class="quicklink" >Photo Gallery</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/videogallery?ref_=tt_ql_pv_2"
class="quicklink" >Trailers and Videos</a>                </div>
    </div>
               </div>
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">DID YOU KNOW?</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/trivia?ref_=tt_ql_trv_1"
class="quicklink" >Trivia</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/goofs?ref_=tt_ql_trv_2"
class="quicklink" >Goofs</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/crazycredits?ref_=tt_ql_trv_3"
class="quicklink" >Crazy Credits</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/quotes?ref_=tt_ql_trv_4"
class="quicklink" >Quotes</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/alternateversions?ref_=tt_ql_trv_5"
class="quicklink quicklinkGray" >Alternate Versions</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/movieconnections?ref_=tt_ql_trv_6"
class="quicklink" >Connections</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1442437/soundtrack?ref_=tt_ql_trv_7"
class="quicklink" >Soundtracks</a>                </div>
    </div>
               </div>
   </div>
      </div>  
         
                <div class="title_block">
                    <div class="title_bar_wrapper">

    <div class="ratings_wrapper">
        <div class="imdbRating" itemtype="http://schema.org/AggregateRating" itemscope="" itemprop="aggregateRating">
                <div class="ratingValue">
<strong title="8.5 based on 274,156 user ratings"><span itemprop="ratingValue">8.5</span></strong><span class="grey">/</span><span class="grey" itemprop="bestRating">10</span>                </div>
                <a href="/title/tt1442437/ratings?ref_=tt_ov_rt"
><span class="small" itemprop="ratingCount">274,156</span></a>
                    <div class="hiddenImportant">
                            <span itemprop="reviewCount">158 user</span>
                            <span itemprop="reviewCount">71 critic</span>
                    </div>
        </div>

  <div id="star-rating-widget" class="star-rating-widget" data-tconst="tt1442437" data-rating="0" data-user=""
  data-auth="" data-tracking-tag="title-maindetails" data-rating-share-enabled="false" data-title="Modern Family"
  data-rating-next-share-time="2000-01-01T00:00:00.000Z" data-rating-share-treatment="C">
    <div class="star-rating-button">
      <button>
        <span class="star-rating-star no-rating"></span>
            <span class="star-rating-text">Rate This</span>
      </button>
    </div>
  </div>
    </div>
    <div class="titleBar">
        <div class="primary_ribbon">
            <div class="ribbonize" data-tconst="tt1442437" data-caller-name="title"></div>
            <div class="wlb_dropdown_btn" data-tconst="tt1442437" data-size="large" data-caller-name="title" data-type="primary"></div>
            <div class="wlb_dropdown_list" style="display:none"></div>
        </div>

        <div class="title_wrapper">
<h1 itemprop="name" class="">Modern Family&nbsp;            </h1>
            <div class="subtext">
                    <time itemprop="duration" datetime="PT22M">
                        22min
                    </time>
<span class="ghost">|</span>
<a href="/genre/Comedy?ref_=tt_ov_inf"
><span class="itemprop" itemprop="genre">Comedy</span></a>, 
<a href="/genre/Romance?ref_=tt_ov_inf"
><span class="itemprop" itemprop="genre">Romance</span></a>

<span class="ghost">|</span>
<a href="/title/tt1442437/releaseinfo?ref_=tt_ov_inf"
title="See more release dates" >TV Series (2009– )
</a>            </div>
        </div>
    </div>
                    </div>
                </div>

    <div class="button_panel navigation_panel">
<a href="/title/tt1442437/episodes?ref_=tt_ov_epl"
class="bp_item np_episode_guide np_right_arrow" > <div class="bp_content">
<div class="bp_description">
<div class="bp_heading">Episode Guide</div>
<span class="bp_sub_heading">192 episodes</span>
</div>
</div>
</a>    </div>


                
                    <div class="slate_wrapper">
    <div class="poster">
<a href="/title/tt1442437/mediaviewer/rm4040375552?ref_=tt_ov_i"
> <img alt="Modern Family Poster" title="Modern Family Poster"
src="https://images-na.ssl-images-amazon.com/images/M/MV5BNzRjOTE1ZTEtMTkwYy00MDQ4LTkxMmYtNzgxMWFlY2YyZjU2XkEyXkFqcGdeQXVyMzAzNTY3MDM@._V1_UX182_CR0,0,182,268_AL_.jpg"
itemprop="image" />
</a>    </div>
    <div class="slate">
<a href="/video/imdb/vi3788284953?playlistId=tt1442437&ref_=tt_ov_vi"
class="slate_button prevent-ad-overlay video-modal" data-type='recommends' data-tconst='tt1442437' data-video='vi3788284953' data-context='imdb' itemprop='trailer' data-refsuffix='tt_ov_vi' data-pixels=''> <img alt="Clip"
title="Clip"
src="https://images-na.ssl-images-amazon.com/images/M/MV5BMTM1MjQxMTQ4MV5BMl5BanBnXkFtZTcwODA2NTA1OA@@._V1_CR0,60,640,360_AL_UX477_CR0,0,477,268_AL_.jpg"
itemprop="image" />
<div class="slate_fade_top"></div>
<div class="slate_fade_bottom"></div>
</a>        <div class="caption"> 
            <div style="float: left;">0:56 <span class="ghost">|</span> Clip</div>
                <div style="float: right;">        <a href="/title/tt1442437/videogallery?ref_=tt_ov_vi_sm"
>3 VIDEOS</a>
<span class="ghost">|</span>        <a href="/title/tt1442437/mediaindex?ref_=tt_ov_mi_sm"
>2521 IMAGES</a>
</div>
            <div style="clear: both;"></div>
        </div>
    </div>
                    </div>
            </div>

    
    
    
    <div class="plot_summary_wrapper">
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitlePlotAndCreditSummaryWidget_started');
    }
  </script>
    <div class="plot_summary ">
            <div class="summary_text" itemprop="description">
                    Three different, but related families face trials and tribulations in their own uniquely comedic ways.
            </div>
        
    <div class="credit_summary_item">
        <h4 class="inline">Creators:</h4>
            <span itemprop="creator" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0506160?ref_=tt_ov_wr"
itemprop='url'><span class="itemprop" itemprop="name">Steven Levitan</span></a>,             </span>
            <span itemprop="creator" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0515941?ref_=tt_ov_wr"
itemprop='url'><span class="itemprop" itemprop="name">Christopher Lloyd</span></a>            </span>
    </div>
    <div class="credit_summary_item">
        <h4 class="inline">Stars:</h4>
            <span itemprop="actors" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0642145?ref_=tt_ov_st_sm"
itemprop='url'><span class="itemprop" itemprop="name">Ed O'Neill</span></a>,             </span>
            <span itemprop="actors" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0005527?ref_=tt_ov_st_sm"
itemprop='url'><span class="itemprop" itemprop="name">Sofía Vergara</span></a>,             </span>
            <span itemprop="actors" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0100866?ref_=tt_ov_st_sm"
itemprop='url'><span class="itemprop" itemprop="name">Julie Bowen</span></a>            </span>
            <span class="ghost">|</span>
<a href="fullcredits?ref_=tt_ov_st_sm"
>See full cast & crew</a>&nbsp;&raquo;
    </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitlePlotAndCreditSummaryWidget_finished');
    }
  </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleReviewsAndPopularityWidget_started');
    }
  </script>
      <div class="titleReviewBar ">           
           
    <div class="titleReviewBarItem titleReviewbarItemBorder">
        <div>
        Reviews
        </div>
        <div>
            <span class="subText">
                   <a href="reviews?ref_=tt_ov_rt"
>158 user</a>                   
                       <span class="ghostText">|</span>
                   <a href="externalreviews?ref_=tt_ov_rt"
>71 critic</a>
             </span>
        </div>
    </div>
                   <div class="divider"></div>

    <div class="titleReviewBarItem">
  <div class="titleOverviewSprite popularityTrendDown"></div>
        <div class="titleReviewBarSubItem">
            <div>
            Popularity
            </div>
            <div>
                <span class="subText">
                    38
      (<span class="titleOverviewSprite popularityImageDown"></span> <span class="popularityDown">3</span>)
                </span>
            </div>
        </div>                                   
    </div>
      </div>              
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleReviewsAndPopularityWidget_finished');
    }
  </script>
    </div>
        </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleOverviewWidget_finished');
    }
  </script>
            </div> 

<script>
    if (typeof uet == 'function') {
      uet("af");
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_atf_main');
    }
  </script>

    </div> 

<script>
    if (typeof uet == 'function') {
      uet("cf");
    }
</script>


    <div id="sidebar">

	
	<!-- no content received for slot: top_rhs -->
	
  <script>
    if ('csm' in window) {
      csm.measure('csm_atf_sidebar');
    }
  </script>


    
    
    

    
    
    


    <div id="top-rated-episodes-rhs" class="mini-article links subnav rhs-widget tv-episodes">
        <h3>Top-Rated Episodes</h3>

            <a href="/title/tt4389744"><img src="https://images-na.ssl-images-amazon.com/images/M/MV5BMTcwMDgzMjkyMl5BMl5BanBnXkFtZTgwODQwNTQ2NDE@._V1_UX275_CR0,0,275,120_AL_.jpg" /></a>

        <div class="episode-container" itemscope itemtype="http://schema.org/Episode" itemprop="episode">
            <div class="title-row">
                <span class="pull-left ribbonize" data-tconst="tt4389744"></span>
                <div class="mellow" itemprop="episodeNumber">S6.E16</div>
                <p itemprop="name"><a href="/title/tt4389744/?ref_=tt_eps_rhs_0"
>Connection Lost</a></p>
            </div>

            <p>Claire is stuck at an airport and trying to digitally track down Haley after an argument.</p>

            <p>    <div class="ratings-bar">
    <div class="inline-block ratings-imdb-rating" name="ir" data-value="9.5">
        <span class="global-sprite rating-star imdb-rating"></span>
        <strong>9.5</strong>
    </div>
            <div class="inline-block ratings-user-rating">
                <span class="userRatingValue" id="urv_tt4389744" data-tconst="tt4389744">
                    <span class="global-sprite rating-star no-rating"></span>
                    <span name="ur" data-value="0" class="rate" data-no-rating="Rate this">Rate this</span>
                </span>
    <div class="starBarWidget" id="sb_tt4389744">
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt4389744|imdb|9.5|9.5||tt1442437|title|main" data-ga-identifier=""
title="Users rated this 9.5/10 (4,210 votes) - click stars to rate" itemtype="http://schema.org/AggregateRating" itemscope itemprop="aggregateRating">
  <meta itemprop="ratingValue" content="9.5" />
  <meta itemprop="bestRating" content="10" />
  <meta itemprop="ratingCount" content="4210" />
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 133px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">9.5</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt4389744/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>
    </div>
            </div>
    </div>
</p>

            <hr />
        </div>
        <div class="episode-container" itemscope itemtype="http://schema.org/Episode" itemprop="episode">
            <div class="title-row">
                <span class="pull-left ribbonize" data-tconst="tt3508788"></span>
                <div class="mellow" itemprop="episodeNumber">S5.E18</div>
                <p itemprop="name"><a href="/title/tt3508788/?ref_=tt_eps_rhs_1"
>Las Vegas</a></p>
            </div>

            <p>On a trip to Las Vegas, Jay wheels and deals to get a better room, Claire tries to win back the money she lost last year, Phil tries to get into a magician's club, and Cameron chooses a bachelor ...</p>

            <p>    <div class="ratings-bar">
    <div class="inline-block ratings-imdb-rating" name="ir" data-value="9.2">
        <span class="global-sprite rating-star imdb-rating"></span>
        <strong>9.2</strong>
    </div>
            <div class="inline-block ratings-user-rating">
                <span class="userRatingValue" id="urv_tt3508788" data-tconst="tt3508788">
                    <span class="global-sprite rating-star no-rating"></span>
                    <span name="ur" data-value="0" class="rate" data-no-rating="Rate this">Rate this</span>
                </span>
    <div class="starBarWidget" id="sb_tt3508788">
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt3508788|imdb|9.2|9.2||tt1442437|title|main" data-ga-identifier=""
title="Users rated this 9.2/10 (1,990 votes) - click stars to rate" itemtype="http://schema.org/AggregateRating" itemscope itemprop="aggregateRating">
  <meta itemprop="ratingValue" content="9.2" />
  <meta itemprop="bestRating" content="10" />
  <meta itemprop="ratingCount" content="1990" />
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 128.8px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">9.2</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt3508788/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>
    </div>
            </div>
    </div>
</p>

            <hr />
        </div>
        <div class="episode-container" itemscope itemtype="http://schema.org/Episode" itemprop="episode">
            <div class="title-row">
                <span class="pull-left ribbonize" data-tconst="tt1627447"></span>
                <div class="mellow" itemprop="episodeNumber">S2.E13</div>
                <p itemprop="name"><a href="/title/tt1627447/?ref_=tt_eps_rhs_2"
>Caught in the Act</a></p>
            </div>

            <p>Phil and Claire's kids walk in on them having sex while delivering their anniversary present, Gloria tries to keep Claire from seeing an angry e-mail, and Mitchell and Cameron contemplate how to ...</p>

            <p>    <div class="ratings-bar">
    <div class="inline-block ratings-imdb-rating" name="ir" data-value="9">
        <span class="global-sprite rating-star imdb-rating"></span>
        <strong>9.0</strong>
    </div>
            <div class="inline-block ratings-user-rating">
                <span class="userRatingValue" id="urv_tt1627447" data-tconst="tt1627447">
                    <span class="global-sprite rating-star no-rating"></span>
                    <span name="ur" data-value="0" class="rate" data-no-rating="Rate this">Rate this</span>
                </span>
    <div class="starBarWidget" id="sb_tt1627447">
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt1627447|imdb|9|9||tt1442437|title|main" data-ga-identifier=""
title="Users rated this 9/10 (1,641 votes) - click stars to rate" itemtype="http://schema.org/AggregateRating" itemscope itemprop="aggregateRating">
  <meta itemprop="ratingValue" content="9" />
  <meta itemprop="bestRating" content="10" />
  <meta itemprop="ratingCount" content="1641" />
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 126px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">9</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt1627447/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>
    </div>
            </div>
    </div>
</p>

            
        </div>
            <div class="see-more">
                <a href="/title/tt1442437/eprate?ref_=tt_eps_rhs_sm"
>See more top-rated episodes</a> &raquo;
            </div>
    </div>


    
    
        <a name="slot_right-3"></a>
        <div class="mini-article">
        
    
        
                                

    
            <script type="text/javascript">if(typeof uet === 'function'){uet('bb','NinjaWidget',{wb:1});}</script>
                                

                    
    
        <span class="ab_widget">
        
    

    <div class="ab_ninja">
<span class="widget_header"> <span class="oneline"> <a href="/imdbpicks/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=3227086502&pf_rd_r=1PA8DRJEF15AQ27MWJHY&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1442437&ref_=tt_pks_sept17_rhs_hd" > <h3>IMDb Picks: September</h3> </a> </span> </span> <div class="widget_content no_inline_blurb"> <div class="widget_nested"> <div class="ninja_image_pack"> <div class="ninja_center"> <div class="ninja_image first_image last_image" style="width:307px;height:auto;" > <div style="width:307px;height:auto;margin:0 auto;"> <div class="widget_image"> <div class="image"> <a href="/imdbpicks/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=3227086502&pf_rd_r=1PA8DRJEF15AQ27MWJHY&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1442437&ref_=tt_pks_sept17_rhs_i_1" > <img itemprop="image" class="pri_image" src="https://images-na.ssl-images-amazon.com/images/M/MV5BMzkwNDk5ODI0MV5BMl5BanBnXkFtZTgwMTE5NTkxMzI@._CR543,169,903,677_UX614_UY460._SY230_SX307_AL_.jpg" /> </a> </div> </div> </div> </div> </div> </div> </div> </div> <p class="blurb">We're both excited and terrified for the return of Pennywise in Stephen King's <i><a href="/title/tt1396484/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=3227086502&pf_rd_r=1PA8DRJEF15AQ27MWJHY&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1442437&ref_=tt_pks_sept17_rhs_lk1">It</a></i>. See which other movies and TV shows we're excited about this month.</p> <p class="seemore"><a href="/imdbpicks/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=3227086502&pf_rd_r=1PA8DRJEF15AQ27MWJHY&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1442437&ref_=tt_pks_sept17_rhs_sm" class="position_bottom supplemental" >Visit IMDb Picks</a></p>    </div>
    

                        
        </span>



            <script type="text/javascript">
                if(typeof uex === 'function'){uex('ld','NinjaWidget',{wb:1});}
            </script>
        




        </div>
    

  <div class="aux-content-widget-2"> 
    <div class="social">     
  <script type="text/javascript">if (uet) { uet('bb', 'facebook_like_iframe', {wb: 1}); }</script>
  <div class="social_networking_like">
    <iframe
      id="iframe_like"
      name="fbLikeIFrame_0"
      class="social-iframe"
      scrolling="no"
      frameborder="0"
      allowTransparency="allowTransparency"
      ref="http://www.imdb.com/title/tt1442437/"
      width=280
      height=65></iframe>
  </div>
    </div>
  </div>


    
    
    

    
    
    

    
    
    

	
	<!-- no content received for slot: rhs_cornerstone -->
	


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "RelatedNewsWidgetRHS", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_RelatedNewsWidgetRHS_started');
    }
  </script>

      <div class="mini-article" >
        <h3>Related News</h3>

        
                
                    
                    
                    <div class="news_item odd" >
                        <span itemprop="headline" >
                            <a href="/title/tt1442437/news?ref_=tt_nwr_1#ni61471640"
>Taylor Swift's New ABC Promo Song Is Better Than "Look What You Made Me Do"</a>
                        </span>
                        
                        <br /><small>
                                <span itemprop="datePublished">
                                  48 minutes ago
                                </span>
                            
                                <span class="ghost">|</span><span itemprop="provider" >
                                        <a href="/news/ns0000116?ref_=tt_nwr_1"
>TVGuide - Breaking News</a>
                                </span>
                        </small>
                    </div>
                
                    
                    
                    <div class="news_item even" >
                        <span itemprop="headline" >
                            <a href="/title/tt1442437/news?ref_=tt_nwr_2#ni61471446"
>Quotes of the Week: The Last Ship, Zoo, Episodes, Shooter, Twin Peaks and More</a>
                        </span>
                        
                        <br /><small>
                                <span itemprop="datePublished">
                                  2 hours ago
                                </span>
                            
                                <span class="ghost">|</span><span itemprop="provider" >
                                        <a href="/news/ns0013977?ref_=tt_nwr_2"
>TVLine.com</a>
                                </span>
                        </small>
                    </div>
                
                    
                    
                    <div class="news_item odd" >
                        <span itemprop="headline" >
                            <a href="/title/tt1442437/news?ref_=tt_nwr_3#ni61166052"
>Fall TV: See When Your Favorite Shows Are Premiering This Year</a>
                        </span>
                        
                        <br /><small>
                                <span itemprop="datePublished">
                                  17 hours ago
                                </span>
                            
                                <span class="ghost">|</span><span itemprop="provider" >
                                        <a href="/news/ns0000676?ref_=tt_nwr_3"
>POPSUGAR</a>
                                </span>
                        </small>
                    </div>
       
            <div class="see-more">
                <a href="/title/tt1442437/news?ref_=tt_nwr_sm"
>See all 15459 related articles</a>&nbsp;&raquo;
            </div>

      </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_RelatedNewsWidgetRHS_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "RelatedNewsWidgetRHS", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "RelatedNewsWidgetRHS", {wb: 1});
    }
</script>


    
    
    

	
	<!-- no content received for slot: middle_rhs -->
	


    
    
    


    
    
        <a name="slot_right-7"></a>
        <div class="mini-article">
        
    
        
                                

    
            <script type="text/javascript">if(typeof uet === 'function'){uet('bb','ZergnetWidget',{wb:1});}</script>
                                

                    
    
        <span class="ab_widget">
            <div class="ab_zergnet">
<span class="widget_header"> <span class="oneline"> <h3>Around The Web</h3> <span>&nbsp;|&nbsp;</span> <h4>Powered by ZergNet</h4> </span> </span> <div class="widget_content no_inline_blurb"> <div class="widget_nested"> <iframe class="zergnet-frame__sidebar" scrolling="no" seamless src="http://ia.media-imdb.com/images/G/01/imdb/html/zergnet-2975767399._CB522861833_.html?widgetId=47009"></iframe> </div> </div>    </div>

                        
        </span>



            <script type="text/javascript">
                if(typeof uex === 'function'){uex('ld','ZergnetWidget',{wb:1});}
            </script>
        




        </div>
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "RelatedListsWidget", {wb: 1});
    }
</script>
        <div class="mini-article">
            <div id="relatedListsWidget">
                <div class="rightcornerlink">
                    <a href="/list/create?ref_=tt_rls"
>Create a list</a>&nbsp;&raquo;
                </div>
                <h3>User Lists</h3>
                <p>Related lists from IMDb users</p>

    <div class="list-preview even">
        <div class="list-preview-item-narrow">
<a href="/list/ls058554811?ref_=tt_rls_1"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/tv.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BZDNhNzhkNDctOTlmOS00NWNmLWEyODQtNWMxM2UzYmJiNGMyXkEyXkFqcGdeQXVyNTMxMjgxMzA@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls058554811?ref_=tt_rls_1"
>
TV Watchlist
</a></strong>
        </div>
        <div class="list_meta">
            a list of 31 titles
            <br />created 15&nbsp;Mar&nbsp;2014
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview odd">
        <div class="list-preview-item-narrow">
<a href="/list/ls070138672?ref_=tt_rls_2"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/tv.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjMwNzk5Nzg2OV5BMl5BanBnXkFtZTgwMjg1OTk1NDE@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls070138672?ref_=tt_rls_2"
>
series i watch/watched
</a></strong>
        </div>
        <div class="list_meta">
            a list of 40 titles
            <br />created 21&nbsp;Jun&nbsp;2014
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview even">
        <div class="list-preview-item-narrow">
<a href="/list/ls070835951?ref_=tt_rls_3"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/tv.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTU5NDgyNTk0N15BMl5BanBnXkFtZTgwNzk1NTk4OTE@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls070835951?ref_=tt_rls_3"
>
Oo.(Tv Series i Watch Now).oO
</a></strong>
        </div>
        <div class="list_meta">
            a list of 31 titles
            <br />created 06&nbsp;Aug&nbsp;2014
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview odd">
        <div class="list-preview-item-narrow">
<a href="/list/ls076235650?ref_=tt_rls_4"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/tv.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BYjFkMTlkYWUtZWFhNy00M2FmLThiOTYtYTRiYjVlZWYxNmJkXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls076235650?ref_=tt_rls_4"
>
Series I've seen / looking at
</a></strong>
        </div>
        <div class="list_meta">
            a list of 27 titles
            <br />created 25&nbsp;Mar&nbsp;2015
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview even">
        <div class="list-preview-item-narrow">
<a href="/list/ls062555801?ref_=tt_rls_5"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/tv.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNGRkMTllZTUtZTQyYi00NjVlLTlhZjEtODExNjQ4YjQ1Y2RjXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls062555801?ref_=tt_rls_5"
>
Series bingewatchen
</a></strong>
        </div>
        <div class="list_meta">
            a list of 25 titles
            <br />created 7&nbsp;months&nbsp;ago
        </div>
        <div class="clear">&nbsp;</div>
    </div>
                <div class="see-more">
                    <a href="/lists/tt1442437?ref_=tt_rls_sm"
>See all related lists</a>&nbsp;&raquo;
                </div>
            </div>
        </div>
<script>
    if (typeof uet == 'function') {
      uet("be", "RelatedListsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "RelatedListsWidget", {wb: 1});
    }
</script>
        
<div class="aux-content-widget-2 ">
    <h3>How Much Have You Seen?</h3>
How many <a href="/seen/tt1442437/?ref_=tv_se"
>episodes of Modern Family</a> have you seen?
</div>


    
    
    

	
	<!-- no content received for slot: btf_rhs1 -->
	


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "ConnectWidget", {wb: 1});
    }
</script>
    <div class="mini-article">
        <h3>Connect with IMDb</h3>
        <div id="facebookWrapper">
            <iframe
                scrolling="no"
                frameborder="0"
                id="facebookIframe"
                allowTransparency="true"></iframe>
        </div>
        <hr>
        <iframe allowtransparency="true"
            frameborder="0"
            role="presentation"
            scrolling="no"
            id="twitterIframe"></iframe>
    </div>
<script>
    if (typeof uet == 'function') {
      uet("be", "ConnectWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "ConnectWidget", {wb: 1});
    }
</script>


    
    
    


  
      
    <div class="mini-article">
        <div id="ratingWidget">
            <h3>Share this Rating</h3>
            <p>
                Title:
                <strong>Modern Family</strong>
                (2009– )
            </p>
            <span class="imdbRatingPlugin imdbRatingStyle1" data-user="" data-title="tt1442437" data-style="t1">
<a href="/title/tt1442437/?ref_=tt_plg_rt"
> <img alt="Modern Family (2009– ) on IMDb"
src="http://ia.media-imdb.com/images/G/01/imdb/images/plugins/imdb_46x22-2264473254._CB522736238_.png">
</a>                <span class="rating">8.5<span class="ofTen">/10</span></span>                
<img src="http://ia.media-imdb.com/images/G/01/imdb/images/plugins/imdb_star_22x21-2889147855._CB522736550_.png" class="star">
            </span>
            <p>Want to share IMDb's rating on your own site? Use the HTML below.</p>
            <div id="ratingPluginHTML" class="hidden">
                <div class="message_box small">
                    <div class="error">
                        <p>
                        You must be a registered user to use the IMDb rating plugin.
                        </p>
                        <a href="/register/login?ref_=tt_plg_rt"
class="cboxElement" rel='login'>Login</a>
                    </div>
                </div>
            </div>
            <div id="ratingWidgetLinks">
                <span class="titlePageSprite arrows show"></span>
                <a href="/plugins?titleId=tt1442437&ref_=tt_plg_rt"
id="toggleRatingPluginHTML" itemprop='url' >Show HTML</a>
                <a href="/plugins?titleId=tt1442437&ref_=tt_plg_rt"
itemprop='url'>View more styles</a>
            </div>
        </div>
    </div>


    
    
    


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleMainDetailsRelatedPolls", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMainDetailsRelatedPolls_started');
    }
  </script>
<div class="mini-article poll-widget-rhs ">
    <style>
        .mini-article.poll-widget-rhs ul li { margin-bottom: 0.5em; clear: left; font-weight: bold;}
        .mini-article.poll-widget-rhs span { margin-bottom: 0.5em; clear: left;}
        .mini-article.poll-widget-rhs img { float: left; padding: 0 5px 5px 0; height: 86px; width: 86px;}
    </style>
    <h3>User Polls</h3>
    <ul>
        <li>
<a href="/poll/0XcFaothS64/?ref_=tt_po_i1"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNDI4MjE4MDQ4OV5BMl5BanBnXkFtZTgwMjc5MTU2MjE@._V1_SY86_CR14,0,86,86_.jpg" /></a>        <a href="/poll/0XcFaothS64/?ref_=tt_po_q1"
>Choose Your Protector</a>
        <li>
<a href="/poll/Yxi4bI0A_RA/?ref_=tt_po_i2"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjI3NTY2NTM0MV5BMl5BanBnXkFtZTgwMjE3MzgwMzI@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/Yxi4bI0A_RA/?ref_=tt_po_q2"
>Primetime Emmy Awards 2016: Outstanding Comedy Series</a>
        <li>
<a href="/poll/JdWKyy6cAjc/?ref_=tt_po_i3"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTUyMjQ0NzM2Nl5BMl5BanBnXkFtZTgwMjM1NjU0OTE@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/JdWKyy6cAjc/?ref_=tt_po_q3"
>Primetime Emmy Awards 2017 — Outstanding Comedy Series</a>
        <li>
<a href="/poll/KEEgqKDuebE/?ref_=tt_po_i4"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNzA5NTk0YTUtOWFjNy00ZWNlLTk3ZTUtZDE4NGJmODQyZDUzXkEyXkFqcGdeQXVyMTgxOTIzNzk@._V1_SY86_CR8,0,86,86_.jpg" /></a>        <a href="/poll/KEEgqKDuebE/?ref_=tt_po_q4"
>Most fun TV character Halloween costume(s)?</a>
        <li>
<a href="/poll/YKmP8RMMA78/?ref_=tt_po_i5"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTgzNjkzNjMxOF5BMl5BanBnXkFtZTgwMTcyMTg2OTE@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/YKmP8RMMA78/?ref_=tt_po_q5"
>Fall 2016 Returning TV Premieres: Sept. 11-22</a>
        <li>
<a href="/poll/2_r_Wg5CuuI/?ref_=tt_po_i6"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTU1OTcwNjg2Nl5BMl5BanBnXkFtZTgwOTk0NTk0MjI@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/2_r_Wg5CuuI/?ref_=tt_po_q6"
>SAG Awards 2016: Outstanding Performance by an Ensemble in a Comedy Series</a>
    </ul>
    <div class="see-more"><a href="/poll/?ref_=tt_po_sm"
>See more polls &raquo;</a></div>
</div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMainDetailsRelatedPolls_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleMainDetailsRelatedPolls", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleMainDetailsRelatedPolls", {wb: 1});
    }
</script>


    
    
    

	
	<!-- no content received for slot: bottom_rhs -->
	


    
    
    
        
	
	<!-- no content received for slot: btf_rhs2 -->
	


    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    </div> 

    <div id="main_bottom" class="main">

    
    
    


<div class="article">
    <h2>Episodes</h2>
    <div id="title-episode-widget" class="table full-width">



        <div class="seasons-and-year-nav">
            <div>
                <h4 class="float-left">Seasons</h4><hr />
            </div>
            <div  >
                <h4 class="float-left">Years</h4><hr />
            </div>
            <br class="clear" />
            <div>
                                                    <a href="/title/tt1442437/episodes?season=10&ref_=tt_eps_sn_10"
>10</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=9&ref_=tt_eps_sn_9"
>9</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=8&ref_=tt_eps_sn_8"
>8</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=7&ref_=tt_eps_sn_7"
>7</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=6&ref_=tt_eps_sn_6"
>6</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=5&ref_=tt_eps_sn_5"
>5</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=4&ref_=tt_eps_sn_4"
>4</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=3&ref_=tt_eps_sn_3"
>3</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=2&ref_=tt_eps_sn_2"
>2</a>&nbsp;&nbsp;
                                                    <a href="/title/tt1442437/episodes?season=1&ref_=tt_eps_sn_1"
>1</a>&nbsp;&nbsp;
            </div>
            <div  >
                                                            <a href="/title/tt1442437/episodes?year=2019&ref_=tt_eps_yr_2019"
>2019</a>&nbsp;&nbsp;
                                                            <a href="/title/tt1442437/episodes?year=2018&ref_=tt_eps_yr_2018"
>2018</a>&nbsp;&nbsp;
                                                            <a href="/title/tt1442437/episodes?year=2017&ref_=tt_eps_yr_2017"
>2017</a>&nbsp;&nbsp;
                                                            <a href="/title/tt1442437/episodes?year=2016&ref_=tt_eps_yr_2016"
>2016</a>&nbsp;&nbsp;
                                                            <a href="/title/tt1442437/episodes?year=2015&ref_=tt_eps_yr_2015"
>2015</a>&nbsp;&nbsp;
                                                            <a href="/title/tt1442437/episodes?year=2014&ref_=tt_eps_yr_2014"
>2014</a>&nbsp;&nbsp;
                                    <a href="/title/tt1442437/episodes?ref_=tt_eps_yr_mr"
>&hellip; See all</a> &raquo;
            </div>
        </div>
    </div>
</div>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleAwardsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsWidget_started');
    }
  </script>
      <div class="article highlighted" id="titleAwardsRanks">
          <strong>
<a href="/chart/toptv?ref_=tt_awd"
> Top Rated TV #199
</a>          </strong>
          |

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleAwardsSummaryWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsSummaryWidget_started');
    }
  </script>
    <span itemprop="awards">
      <b>
        Won
        1
        Golden Globe.
      </b>
    </span>
    <span itemprop="awards">
        Another
      114 wins &amp; 335 nominations.
    </span>
    <span class="see-more inline">
<a href="/title/tt1442437/awards?ref_=tt_awd"
class="btn-full" >See more awards</a>&nbsp;&raquo;    </span>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsSummaryWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleAwardsSummaryWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleAwardsSummaryWidget", {wb: 1});
    }
</script>
      </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleAwardsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleAwardsWidget", {wb: 1});
    }
</script>


    
    
    



    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleMediaStripWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_started');
    }
  </script>


  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_started');
    }
  </script>

      <div class = "article" id="titleMediaStrip">
        <div class="mediastrip_container combined">
                <div id="combined-videos">
                    <h2>Videos</h2>
    <div class="mediastrip_big">
                <span class="video_slate" itemscope itemtype="http://schema.org/videoObject">
                <meta itemprop="duration" content="T56S" />

<a href="/title/tt1442437/videoplayer/vi3788284953?ref_=tt_pv_vi_aiv_1"
title="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!" alt="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!" class="video-modal" data-video="vi3788284953" data-context="imdb" data-rid="1PA8DRJEF15AQ27MWJHY" widget-context="titleMaindetails" itemprop="url" ><img height="105" width="139" alt="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!" title="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/no-video-slate-856072904._CB522736558_.png"class="loadlate hidden video" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTM1MjQxMTQ4MV5BMl5BanBnXkFtZTcwODA2NTA1OA@@._V1_SP229,229,0,C,0,0,0_CR45,62,139,105_PIimdb-blackband-204-14,TopLeft,0,0_PIimdb-blackband-204-28,BottomLeft,0,1_CR0,0,139,105_PIimdb-bluebutton-big,BottomRight,-1,-1_ZAClip,2,76,16,137,verdenab,8,255,255,255,1_ZAon%2520IMDb,2,1,14,137,verdenab,7,255,255,255,1_ZA00%253A56,103,1,14,36,verdenab,7,255,255,255,1_PIimdb-HDIconMiniWhite,BottomLeft,2,-2_.jpg" itemprop='image' viconst="vi3788284953" /></a>            </span>
                <span class="video_slate_last" itemscope itemtype="http://schema.org/videoObject">
                <meta itemprop="duration" content="T60S" />

<a href="/title/tt1442437/videoplayer/vi617391129?ref_=tt_pv_vi_aiv_2"
title="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!" alt="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!" class="video-modal" data-video="vi617391129" data-context="imdb" data-rid="1PA8DRJEF15AQ27MWJHY" widget-context="titleMaindetails" itemprop="url" ><img height="105" width="139" alt="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!" title="Modern Family -- Watch a clip from the season premiere of &quot;Modern Family&quot;!"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/no-video-slate-856072904._CB522736558_.png"class="loadlate hidden video" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNzY1OTg0NDA3N15BMl5BanBnXkFtZTcwNTY1NTA1OA@@._V1_SP229,229,0,C,0,0,0_CR45,62,139,105_PIimdb-blackband-204-14,TopLeft,0,0_PIimdb-blackband-204-28,BottomLeft,0,1_CR0,0,139,105_PIimdb-bluebutton-big,BottomRight,-1,-1_ZAClip,2,76,16,137,verdenab,8,255,255,255,1_ZAon%2520IMDb,2,1,14,137,verdenab,7,255,255,255,1_ZA01%253A00,103,1,14,36,verdenab,7,255,255,255,1_PIimdb-HDIconMiniWhite,BottomLeft,2,-2_.jpg" itemprop='image' viconst="vi617391129" /></a>            </span>
    </div>
                </div>
                <div id="combined-photos">
                    <h2>Photos</h2>
    <div class="mediastrip">        	
                
<a href="/title/tt1442437/mediaviewer/rm1279735040?context=default&ref_=tt_pv_md_1"
itemprop='thumbnailUrl'><img height="105" width="105" alt="Ed O'Neill and Eric Stonestreet in Modern Family (2009)" title="Ed O'Neill and Eric Stonestreet in Modern Family (2009)"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/unknown-1394846836._CB522736550_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BZGQzZjAxOWYtY2QyNC00NWYzLThlMjUtNjdmODgyOTJjZDc3XkEyXkFqcGdeQXVyNjc5Mjg0NjU@._V1_UY105_CR26,0,105,105_AL_.jpg" itemprop='image' /></a>                
<a href="/title/tt1442437/mediaviewer/rm1447507200?context=default&ref_=tt_pv_md_2"
itemprop='thumbnailUrl'><img height="105" width="105" alt="James Alan Hensz in Modern Family (2009)" title="James Alan Hensz in Modern Family (2009)"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/unknown-1394846836._CB522736550_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTg4YjYxYjItMTQzYy00YjBmLWE4YjItMjQ1OTYxOTM5MzFiXkEyXkFqcGdeQXVyNjc5Mjg0NjU@._V1_UY105_CR26,0,105,105_AL_.jpg" itemprop='image' /></a>                
<a href="/title/tt1442437/mediaviewer/rm3727111424?context=default&ref_=tt_pv_md_3"
itemprop='thumbnailUrl'><img height="105" width="105" alt="Rico Rodriguez in Modern Family (2009)" title="Rico Rodriguez in Modern Family (2009)"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/unknown-1394846836._CB522736550_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BOTE4OTJjYWMtM2FlYi00YWZjLWFkYjYtZTQ3Y2I1ZTkzYjJlXkEyXkFqcGdeQXVyNTgyNDM1OTU@._V1_UX105_CR0,0,105,105_AL_.jpg" itemprop='image' /></a>    </div>
                </div>
            <div class="combined-see-more see-more">
<a href="/title/tt1442437/mediaindex?ref_=tt_pv_mi_sm"
><span class="titlePageSprite showAllVidsAndPics"></span></a>
<a href="/title/tt1442437/mediaindex?ref_=tt_pv_mi_sm"
>2521 photos</a>
<span class="ghost">|</span>
<a href="/title/tt1442437/videogallery?ref_=tt_pv_vi_sm"
>3 videos</a>
<span class="ghost">|</span>
<a href="/title/tt1442437/news?ref_=tt_pv_nw_sm"
>15459 news articles</a> &raquo;            </div>
        </div>
      </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_finished');
    }
  </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleMediaStripWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleMediaStripWidget", {wb: 1});
    }
</script>



<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleRecsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleRecsWidget_started');
    }
  </script>
    
        <div class="article" id="titleRecs">
            <span class="rightcornerlink">
            <a href="/help/show_leaf?personalrecommendations&ref_=tt_rec_lm"
>Learn more</a>
            </span>
            
            <h2 class="rec_heading_wrapper">  
                <span class="rec_heading" data-spec="p13nsims:tt1442437">People who liked this also liked...&nbsp;</span>
            </h2>

            <div class="rec_wrapper" id="title_recs"
                data-items-per-request="24"
                data-items-per-page="6"
                data-specs="p13nsims:tt1442437"
                data-caller-name="p13nsims-title">      
                
    <div class="rec_const_picker">
        <div class="rec_view">
            <div class="rec_grave" style="display:none"></div>
            <div class="rec_slide">
                        <div class="rec_page">         
    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0898266">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0898266/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Big Bang Theory" title="The Big Bang Theory"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTUyNDMxNjQyN15BMl5BanBnXkFtZTgwNzA4NDQwMDI@._V1_UX76_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0460649">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0460649/?ref_=tt_rec_tti"
><img height="113" width="76" alt="How I Met Your Mother" title="How I Met Your Mother"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTA5MzAzNTcyNjZeQTJeQWpwZ15BbWU3MDUyMzE1MTk@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0108778">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0108778/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Friends" title="Friends"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTg4NzEyNzQ5OF5BMl5BanBnXkFtZTYwNTY3NDg4._V1._CR24,0,293,443_UX76_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0096697">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0096697/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Simpsons" title="The Simpsons"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BYjFkMTlkYWUtZWFhNy00M2FmLThiOTYtYTRiYjVlZWYxNmJkXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UX76_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt2372162">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt2372162/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Orange Is the New Black" title="Orange Is the New Black"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTU1OTcwNjg2Nl5BMl5BanBnXkFtZTgwOTk0NTk0MjI@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0182576">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0182576/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Family Guy" title="Family Guy"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNGRkMTllZTUtZTQyYi00NjVlLTlhZjEtODExNjQ4YjQ1Y2RjXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

                        </div>
                        <div class="rec_page">         
    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0121955">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0121955/?ref_=tt_rec_tti"
><img height="113" width="76" alt="South Park" title="South Park"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BZWY4ODY3ZTAtODc2NC00ZDQ5LWE2ZTItZWYzOWVhNjU4OTk0XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UX76_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0369179">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0369179/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Two and a Half Men" title="Two and a Half Men"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BOTI2MjIzN2ItZDg0OS00MTlhLWIzMTMtYWI4ZTA0NGE4NDJlXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0386676">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0386676/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Office" title="The Office"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTgzNjAzMDE0NF5BMl5BanBnXkFtZTcwNTEyMzM3OA@@._V1_UY113_CR3,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0773262">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0773262/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Dexter" title="Dexter"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTM5MjkwMTI0MV5BMl5BanBnXkFtZTcwODQwMTc0OQ@@._V1_UY113_CR3,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt1266020">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1266020/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Parks and Recreation" title="Parks and Recreation"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjA5MjUxNDgwNF5BMl5BanBnXkFtZTgwMDI5NjMwNDE@._V1_UY113_CR4,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt1856010">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1856010/?ref_=tt_rec_tti"
><img height="113" width="76" alt="House of Cards" title="House of Cards"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522736596_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjM3ODMyMjc3MV5BMl5BanBnXkFtZTgwNDgzNDc5NzE@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

                        </div>
            </div>
            <div class="rec_nav">
                <div class="rec_nav_page_num"></div>
                <a class="rec_nav_left">&#9668; Prev 6</a>
                <a class="rec_nav_right">Next 6 &#9658;</a>
            </div>
        </div>
    </div>
    
   <div class="rec_overviews">

         
      <div class="rec_overview" data-tconst="tt0898266">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0898266">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0898266/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Big Bang Theory" title="The Big Bang Theory"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTUyNDMxNjQyN15BMl5BanBnXkFtZTgwNzA4NDQwMDI@._V1_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0898266" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0898266/?ref_=tt_rec_tt"
><b>The Big Bang Theory</b></a>
            <span class="nobr">(TV Series 2007)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          
 <span class="ghost">|</span> 
                     Romance          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0898266|imdb|8.3|8.3|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.3/10 (575,912 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 116.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.3</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0898266/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A woman who moves into an apartment across the hall from two brilliant but socially awkward physicists shows them how little they know about life outside of the laboratory.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Johnny Galecki, 
Jim Parsons, 
Kaley Cuoco</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0460649">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0460649">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0460649/?ref_=tt_rec_tti"
><img height="190" width="128" alt="How I Met Your Mother" title="How I Met Your Mother"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTA5MzAzNTcyNjZeQTJeQWpwZ15BbWU3MDUyMzE1MTk@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0460649" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0460649/?ref_=tt_rec_tt"
><b>How I Met Your Mother</b></a>
            <span class="nobr">(2005–2014)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          
 <span class="ghost">|</span> 
                     Romance          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0460649|imdb|8.4|8.4|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.4/10 (489,134 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 117.6px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.4</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0460649/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A father recounts to his children, through a series of flashbacks, the journey he and his four best friends took leading up to him meeting their mother.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Josh Radnor, 
Jason Segel, 
Cobie Smulders</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0108778">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0108778">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0108778/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Friends" title="Friends"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTg4NzEyNzQ5OF5BMl5BanBnXkFtZTYwNTY3NDg4._V1._CR24,0,293,443_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0108778" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0108778/?ref_=tt_rec_tt"
><b>Friends</b></a>
            <span class="nobr">(1994–2004)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          
 <span class="ghost">|</span> 
                     Romance          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0108778|imdb|8.9|8.9|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.9/10 (547,566 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 124.6px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.9</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0108778/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
Follows the personal and professional lives of six 20 to 30-something-year-old friends living in Manhattan.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Jennifer Aniston, 
Courteney Cox, 
Lisa Kudrow</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0096697">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0096697">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0096697/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Simpsons" title="The Simpsons"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BYjFkMTlkYWUtZWFhNy00M2FmLThiOTYtYTRiYjVlZWYxNmJkXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0096697" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0096697/?ref_=tt_rec_tt"
><b>The Simpsons</b></a>
            <span class="nobr">(TV Series 1989)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Animation          
 <span class="ghost">|</span> 
                     Comedy          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0096697|imdb|8.8|8.8|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (295,347 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0096697/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
The satiric adventures of a working-class family in the misfit city of Springfield.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Dan Castellaneta, 
Nancy Cartwright, 
Julie Kavner</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt2372162">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt2372162">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt2372162/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Orange Is the New Black" title="Orange Is the New Black"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTU1OTcwNjg2Nl5BMl5BanBnXkFtZTgwOTk0NTk0MjI@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt2372162" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt2372162/?ref_=tt_rec_tt"
><b>Orange Is the New Black</b></a>
            <span class="nobr">(TV Series 2013)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          
 <span class="ghost">|</span> 
                     Crime          
 <span class="ghost">|</span> 
                     Drama          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt2372162|imdb|8.2|8.2|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.2/10 (220,920 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 114.8px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.2</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt2372162/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
Convicted of a decade old crime of transporting drug money to an ex-girlfriend, normally law abiding Piper Chapman is sentenced to a year and a half behind bars to face the reality of how life changing prison can really be.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Taylor Schilling, 
Danielle Brooks, 
Taryn Manning</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0182576">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0182576">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0182576/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Family Guy" title="Family Guy"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNGRkMTllZTUtZTQyYi00NjVlLTlhZjEtODExNjQ4YjQ1Y2RjXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0182576" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0182576/?ref_=tt_rec_tt"
><b>Family Guy</b></a>
            <span class="nobr">(TV Series 1999)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Animation          
 <span class="ghost">|</span> 
                     Comedy          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0182576|imdb|8.2|8.2|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.2/10 (256,856 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 114.8px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.2</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0182576/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
In a wacky Rhode Island town, a dysfunctional family strive to cope with everyday life as they are thrown from one crazy scenario to another.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Seth MacFarlane, 
Alex Borstein, 
Seth Green</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0121955">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0121955">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0121955/?ref_=tt_rec_tti"
><img height="190" width="128" alt="South Park" title="South Park"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BZWY4ODY3ZTAtODc2NC00ZDQ5LWE2ZTItZWYzOWVhNjU4OTk0XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0121955" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0121955/?ref_=tt_rec_tt"
><b>South Park</b></a>
            <span class="nobr">(TV Series 1997)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Animation          
 <span class="ghost">|</span> 
                     Comedy          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0121955|imdb|8.8|8.8|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (265,971 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0121955/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
Follows the misadventures of four irreverent grade-schoolers in the quiet, dysfunctional town of South Park, Colorado.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Trey Parker, 
Matt Stone, 
Isaac Hayes</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0369179">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0369179">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0369179/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Two and a Half Men" title="Two and a Half Men"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BOTI2MjIzN2ItZDg0OS00MTlhLWIzMTMtYWI4ZTA0NGE4NDJlXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0369179" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0369179/?ref_=tt_rec_tt"
><b>Two and a Half Men</b></a>
            <span class="nobr">(2003–2015)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          
 <span class="ghost">|</span> 
                     Romance          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0369179|imdb|7.1|7.1|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 7.1/10 (210,249 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 99.4px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">7.1</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0369179/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A hedonistic jingle writer's free-wheeling life comes to an abrupt halt when his brother and 10-year-old nephew move into his beach-front house.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Jon Cryer, 
Ashton Kutcher, 
Angus T. Jones</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0386676">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0386676">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0386676/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Office" title="The Office"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTgzNjAzMDE0NF5BMl5BanBnXkFtZTcwNTEyMzM3OA@@._V1_UY190_CR6,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0386676" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0386676/?ref_=tt_rec_tt"
><b>The Office</b></a>
            <span class="nobr">(2005–2013)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0386676|imdb|8.8|8.8|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (230,050 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0386676/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A mockumentary on a group of typical office workers, where the workday consists of ego clashes, inappropriate behavior, and tedium.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Steve Carell, 
Jenna Fischer, 
John Krasinski</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0773262">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt0773262">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0773262/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Dexter" title="Dexter"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTM5MjkwMTI0MV5BMl5BanBnXkFtZTcwODQwMTc0OQ@@._V1_UY190_CR6,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0773262" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0773262/?ref_=tt_rec_tt"
><b>Dexter</b></a>
            <span class="nobr">(2006–2013)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Crime          
 <span class="ghost">|</span> 
                     Drama          
 <span class="ghost">|</span> 
                     Mystery          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0773262|imdb|8.8|8.8|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (542,481 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0773262/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
By day, mild-mannered Dexter is a blood-spatter analyst for the Miami police. But at night, he is a serial killer who only targets other murderers.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Michael C. Hall, 
Jennifer Carpenter, 
David Zayas</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt1266020">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt1266020">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1266020/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Parks and Recreation" title="Parks and Recreation"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjA5MjUxNDgwNF5BMl5BanBnXkFtZTgwMDI5NjMwNDE@._V1_UY190_CR7,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt1266020" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt1266020/?ref_=tt_rec_tt"
><b>Parks and Recreation</b></a>
            <span class="nobr">(2009–2015)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Comedy          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt1266020|imdb|8.6|8.6|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 8.6/10 (143,287 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 120.4px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.6</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt1266020/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
The absurd antics of an Indiana town's public officials as they pursue sundry projects to make their city a better place.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Amy Poehler, 
Jim O'Heir, 
Nick Offerman</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt1856010">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1442437" data-tconst="tt1856010">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1856010/?ref_=tt_rec_tti"
><img height="190" width="128" alt="House of Cards" title="House of Cards"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522736516_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjM3ODMyMjc3MV5BMl5BanBnXkFtZTgwNDgzNDc5NzE@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt1856010" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="da29">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt1856010/?ref_=tt_rec_tt"
><b>House of Cards</b></a>
            <span class="nobr">(TV Series 2013)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            

                     Drama          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt1856010|imdb|9|9|p13nsims-title|tt1442437|title|main" data-ga-identifier=""
title="Users rated this 9/10 (374,301 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 126px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">9</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt1856010/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A Congressman works with his equally conniving wife to exact revenge on the people who betrayed him.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Kevin Spacey, 
Michel Gill, 
Robin Wright</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
    
   </div>
   
                
            </div>
        </div>  
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleRecsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleRecsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleRecsWidget", {wb: 1});
    }
</script>


<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleCastWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleCastWidget_started');
    }
  </script>
    <div class="article" id="titleCast">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_cl"
rel="login">Edit</a>
    </span>
        <h2>Cast</h2>
        
        <table class="cast_list">    
  <tr><td colspan="4" class="castlist_label">Series cast summary:</td></tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0100866/?ref_=tt_cl_i1"
><img height="44" width="32" alt="Julie Bowen" title="Julie Bowen"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjIxMjI3ODI5M15BMl5BanBnXkFtZTcwNjIyNTA0NA@@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0100866/?ref_=tt_cl_t1"
itemprop='url'> <span class="itemprop" itemprop="name">Julie Bowen</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0170389/?ref_=tt_cl_t1" >Claire Dunphy</a>
                  (189 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0123092/?ref_=tt_cl_i2"
><img height="44" width="32" alt="Ty Burrell" title="Ty Burrell"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTM2MjE1NzIxNl5BMl5BanBnXkFtZTcwNTY4NjI4NA@@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0123092/?ref_=tt_cl_t2"
itemprop='url'> <span class="itemprop" itemprop="name">Ty Burrell</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0176911/?ref_=tt_cl_t2" >Phil Dunphy</a>
                  (189 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0642145/?ref_=tt_cl_i3"
><img height="44" width="32" alt="Ed O'Neill" title="Ed O'Neill"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNTI2NjcyODk0NV5BMl5BanBnXkFtZTgwNTMxODc4NzE@._V1_UY44_CR1,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0642145/?ref_=tt_cl_t3"
itemprop='url'> <span class="itemprop" itemprop="name">Ed O'Neill</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0170387/?ref_=tt_cl_t3" >Jay Pritchett</a>
                  (188 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0005527/?ref_=tt_cl_i4"
><img height="44" width="32" alt="Sofía Vergara" title="Sofía Vergara"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTc1MDkwMDcxOV5BMl5BanBnXkFtZTcwMDk0MjQ2MQ@@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0005527/?ref_=tt_cl_t4"
itemprop='url'> <span class="itemprop" itemprop="name">Sofía Vergara</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0170388/?ref_=tt_cl_t4" >Gloria Delgado-Pritchett</a>
                  (188 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0272479/?ref_=tt_cl_i5"
><img height="44" width="32" alt="Jesse Tyler Ferguson" title="Jesse Tyler Ferguson"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTczODUyNDMwNF5BMl5BanBnXkFtZTgwNjQ1OTE2MDE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0272479/?ref_=tt_cl_t5"
itemprop='url'> <span class="itemprop" itemprop="name">Jesse Tyler Ferguson</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0161143/?ref_=tt_cl_t5" >Mitchell Pritchett</a>
                  (188 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0832314/?ref_=tt_cl_i6"
><img height="44" width="32" alt="Eric Stonestreet" title="Eric Stonestreet"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNjY0Mjc2MTUyM15BMl5BanBnXkFtZTcwMzUzNTEzMQ@@._V1_UY44_CR1,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0832314/?ref_=tt_cl_t6"
itemprop='url'> <span class="itemprop" itemprop="name">Eric Stonestreet</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0169632/?ref_=tt_cl_t6" >Cameron Tucker</a>
                  (188 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm2349726/?ref_=tt_cl_i7"
><img height="44" width="32" alt="Rico Rodriguez" title="Rico Rodriguez"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTY0MTA5NzY4MF5BMl5BanBnXkFtZTgwOTAyOTI4MjE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm2349726/?ref_=tt_cl_t7"
itemprop='url'> <span class="itemprop" itemprop="name">Rico Rodriguez</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0171140/?ref_=tt_cl_t7" >Manny Delgado</a>
                  (186 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm2188098/?ref_=tt_cl_i8"
><img height="44" width="32" alt="Nolan Gould" title="Nolan Gould"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTg4MzU0ODczN15BMl5BanBnXkFtZTgwNjk2MDgxNDE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm2188098/?ref_=tt_cl_t8"
itemprop='url'> <span class="itemprop" itemprop="name">Nolan Gould</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0176914/?ref_=tt_cl_t8" >Luke Dunphy</a>
                  (185 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0405103/?ref_=tt_cl_i9"
><img height="44" width="32" alt="Sarah Hyland" title="Sarah Hyland"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjI0Njc0NDA2OV5BMl5BanBnXkFtZTgwMTAyMzM0NzE@._V1_UY44_CR1,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0405103/?ref_=tt_cl_t9"
itemprop='url'> <span class="itemprop" itemprop="name">Sarah Hyland</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0176913/?ref_=tt_cl_t9" >Haley Dunphy</a>
                  (183 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm1736769/?ref_=tt_cl_i10"
><img height="44" width="32" alt="Ariel Winter" title="Ariel Winter"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjAwNjM5Njg5M15BMl5BanBnXkFtZTgwMjY5NTQ4NjE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm1736769/?ref_=tt_cl_t10"
itemprop='url'> <span class="itemprop" itemprop="name">Ariel Winter</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0170390/?ref_=tt_cl_t10" >Alex Dunphy</a>
                  (180 episodes, 2009-2017)
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm4682545/?ref_=tt_cl_i11"
><img height="44" width="32" alt="Aubrey Anderson-Emmons" title="Aubrey Anderson-Emmons"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522736171_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjE2MTk1ODc0NV5BMl5BanBnXkFtZTgwMjY1NTU4MjE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm4682545/?ref_=tt_cl_t11"
itemprop='url'> <span class="itemprop" itemprop="name">Aubrey Anderson-Emmons</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
        &nbsp;<a href="/character/ch0223363/?ref_=tt_cl_t11" >Lily Tucker-Pritchett</a>
                  (138 episodes, 2011-2017)
              </div>
          </td>
      </tr>
        </table>
        <div class="see-more">
            <a href="fullcredits?ref_=tt_cl_sm#cast"
>See full cast</a>&nbsp;&raquo;
        </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleCastWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleCastWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleCastWidget", {wb: 1});
    }
</script>



    
    
    

	
	<!-- no content received for slot: maindetails_center_ad -->
	


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleStorylineWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleStorylineWidget_started');
    }
  </script>
    <div class = "article" id="titleStoryLine">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_stry"
rel="login">Edit</a>
    </span>
    
        <h2>Storyline</h2>
        
        <div class="inline canwrap" itemprop="description">
            <p>
Told from the perspective of an unseen documentary filmmaker, the series offers an honest, often-hilarious perspective of family life. Parents Phil and Claire yearn for an honest, open relationship with their three kids. But a daughter who is trying to grow up too fast, another who is too smart for her own good, and a rambunctious young son make it challenging. Claire's dad, Jay, and his Latina wife, Gloria, are raising two sons together, but people sometimes believe Jay to be Gloria's father. Jay's gay son, Mitchell, and his partner, Cameron, have adopted a little Asian girl, completing one big -- straight, gay, multicultural, traditional -- happy family.                <em class="nobr">Written by
<a href="/search/title?plot_author=Jwelch5742&view=simple&sort=alpha&ref_=tt_stry_pl"
>Jwelch5742</a></em>            </p>
        </div>
        
        <span class="see-more inline"> 
                <a href="/title/tt1442437/plotsummary?ref_=tt_stry_pl"
>Plot Summary</a>
    <span>|</span>
        <a href="/title/tt1442437/synopsis?ref_=tt_stry_pl"
>Add Synopsis</a>
    </span>
        <hr />
        <div class="see-more inline canwrap" itemprop="keywords">
            <h4 class="inline">Plot Keywords:</h4>
<a href="/keyword/ensemble-cast?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">ensemble cast</span></a>
                        <span>|</span>
<a href="/keyword/gay-relationship?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">gay relationship</span></a>
                        <span>|</span>
<a href="/keyword/blended-family?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">blended family</span></a>
                        <span>|</span>
<a href="/keyword/older-man-younger-woman-relationship?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">older man younger woman relationship</span></a>
                        <span>|</span>
<a href="/keyword/mockumentary?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">mockumentary</span></a>
            <span>|</span>&nbsp;<nobr><a href="/title/tt1442437/keywords?ref_=tt_stry_kw"
>See All (55)</a>&nbsp;&raquo;</nobr>

        </div>      
        <hr />
        <div class="txt-block">
            <h4 class="inline">Taglines:</h4>
One big (straight, gay, multi-cultural, traditional) happy family.        </div>
        <hr />
        <div class="see-more inline canwrap" itemprop="genre">
            <h4 class="inline">Genres:</h4>
<a href="/genre/Comedy?ref_=tt_stry_gnr"
> Comedy</a>&nbsp;<span>|</span>
<a href="/genre/Romance?ref_=tt_stry_gnr"
> Romance</a>
        </div>      
        
             <hr/>
    
    <div class="txt-block">
            <h4 class="inline">Certificate:</h4>
            <span class="see-more inline">
<a href="/title/tt1442437/parentalguide?ref_=tt_stry_pg#certification"
> See all certifications</a>&nbsp;&raquo;
            </span>
    </div>
    <div class="txt-block">
        <h4 class="inline">Parents Guide:</h4>
        <span class="see-more inline" itemprop="audience" itemscope itemtype="http://schema.org/Audience">
<a href="/title/tt1442437/parentalguide?ref_=tt_stry_pg"
itemprop='url'> View content advisory</a>&nbsp;&raquo;
        </span>
    </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleStorylineWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleStorylineWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleStorylineWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleDetailsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDetailsWidget_started');
    }
  </script>
    
    <div class = "article" id="titleDetails">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_dt_dt"
rel="login">Edit</a>
    </span>
        <h2>Details</h2>
      <div class="txt-block">
      <h4 class="inline">Official Sites:</h4>
    <a href="/offsite/?page-action=offsite-go&token=BCYhHx0h2DLce7t8NmWw6yNA30il-1Zj-M3M-KZuoxtiKjNTHvdsuDpp0S64faTAPxNY58GAkPNj%0D%0AvUNowT8wcdc8PVv5t6omf3iZoMP2lC2hKXrs8IVj2M1zl-kjFtimDAvH9lpqapI9EaP_h7C2Jwu_%0D%0A90aPRGIGhQhHQwsYBwUERVEJ8dkuU4N5s40JuTi9Op2oduxwkKgrvEnVkX8sTlV9AGp6xsxUGYLR%0D%0AokZhoiUXcKY%0D%0A&ref_=tt_pdt_ofs_offsite_0"
rel="nofollow" itemprop='url'>Official site</a>
        
      <span class="see-more inline">
      </span>
      </div>
  
    <div class="txt-block">
    <h4 class="inline">Country:</h4>
        <a href="/search/title?country_of_origin=us&ref_=tt_dt_dt"
itemprop='url'>USA</a>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Language:</h4>
        <a href="/search/title?title_type=feature&primary_language=en&sort=moviemeter,asc&ref_=tt_dt_dt"
itemprop='url'>English</a>
    </div>
  
    
    <div class="txt-block">
    <h4 class="inline">Release Date:</h4> 18 January 2010 (Belgium)
    <span class="see-more inline">
      <a href="releaseinfo?ref_=tt_dt_dt"
itemprop='url'>See more</a>&nbsp;&raquo;
    </span>
    </div>
  
      <div class="txt-block">
      <h4 class="inline">Also Known As:</h4> Moderni perhe
      <span class="see-more inline">
        <a href="releaseinfo?ref_=tt_dt_dt#akas"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
      </div>
  
    <div class="txt-block">
    <h4 class="inline">Filming Locations:</h4> 
    <a href="/search/title?locations=2211%20Fox%20Hills%20Dr,%20Los%20Angeles,%20California,%20USA&ref_=tt_dt_dt"
itemprop='url'>2211 Fox Hills Dr, Los Angeles, California, USA</a>
      <span class="see-more inline">
        <a href="locations?ref_=tt_dt_dt"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
    </div>
  
  <hr /> 
  <h3 class="subheading">Company Credits</h3>
    <div class="txt-block">
    <h4 class="inline">Production Co:</h4>
        <span itemprop="creator" itemscope itemtype="http://schema.org/Organization">
<a href="/company/co0226603?ref_=tt_dt_co"
itemprop='url'><span class="itemprop" itemprop="name">Levitan / Lloyd</span></a></span>,        <span itemprop="creator" itemscope itemtype="http://schema.org/Organization">
<a href="/company/co0056447?ref_=tt_dt_co"
itemprop='url'><span class="itemprop" itemprop="name">20th Century Fox Television</span></a></span>,        <span itemprop="creator" itemscope itemtype="http://schema.org/Organization">
<a href="/company/co0051053?ref_=tt_dt_co"
itemprop='url'><span class="itemprop" itemprop="name">Steven Levitan Productions</span></a></span>      <span class="see-more inline">
        <a href="companycredits?ref_=tt_dt_co"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
    </div>
  <div class="txt-block"> 
  Show detailed
<a href="http://pro.imdb.com/title/tt1442437/companycredits?rf=cons_tt_cocred_tt&ref_=cons_tt_cocred_tt"
itemprop='url'>company contact information</a>
  on 
  <a href="http://pro.imdb.com/signup/index.html?rf=cons_tt_cocred_spl&ref_=cons_tt_cocred_spl"
itemprop='url'>IMDbPro</a>&nbsp;&raquo;
  </div>
  

  <hr />
  <h3 class="subheading">Technical Specs</h3>
  
    <div class="txt-block">
      <h4 class="inline">Runtime:</h4> 
        <time itemprop="duration" datetime="PT22M">22 min</time>
          <span class="ghost">|</span>
        <time itemprop="duration" datetime="PT490M">490 min</time>
            (Season average)
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Sound Mix:</h4>
        <a href="/search/title?sound_mixes=dolby_digital&ref_=tt_dt_spec"
itemprop='url'>Dolby Digital</a>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Color:</h4>
        <a href="/search/title?colors=color&ref_=tt_dt_spec"
itemprop='url'>Color</a>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Aspect Ratio:</h4> 1.78 : 1
    </div>
  
  See <a href="technical?ref_=tt_dt_spec"
itemprop='url'>full technical specs</a>&nbsp;&raquo;
    </div>

  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDetailsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleDetailsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleDetailsWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleDidYouKnowWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDidYouKnowWidget_started');
    }
  </script>
    <div id="titleDidYouKnow" class="article">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_trv_trv"
rel="login">Edit</a>
    </span>
        <h2>Did You Know?</h2>
    <div id="trivia" class="txt-block">
        <h4>Trivia</h4>
In Modern Family, <a href="/name/nm0100866?ref_=tt_trv_trv">Julie Bowen</a> is technically the step-daughter of Gloria, played by <a href="/name/nm0005527?ref_=tt_trv_trv">Sofía Vergara</a>. In both real life and the show, Julie is older than Sofía.        <a href="trivia?ref_=tt_trv_trv"
class="nobr" >See more</a>  &raquo;
    </div>
                <hr />
     <div id="goofs"  class="txt-block">
        <h4>Goofs</h4>
Mitchell and Cameron adopted a child from Vietnam. This is legally impossible as Vietnam&#39;s laws forbid a child to be adopted by single parents or same sex couples. They could still adopt the child illegally but then it would be impossible to bring it back to the States.        <a href="trivia?tab=gf&ref_=tt_trv_gf"
class="nobr" >See more</a>  &raquo;
    </div>   
                <hr />
    <div id="quotes" class="text-block">
        <h4>Quotes</h4>
<a href="/name/nm0100866/?ref_=tt_trv_qu"
><span class="character">Claire Dunphy</span></a>:
The way he looked at me, it was like I wore a tube top in church.
<br />        <a href="trivia?tab=qt&ref_=tt_trv_qu"
class="nobr" >See more</a> &raquo;
    </div>
                <hr />
     <div id="crazyCredits"  class="txt-block">
        <h4>Crazy Credits</h4>
At the beginning of each episode, the actors' names appear on screen in order of their character's ages. (Oldest to youngest)        <a href="trivia?tab=cz&ref_=tt_trv_cc"
class="nobr" >See more</a>  &raquo;
    </div>   
                <hr />
    <div id="connections" class="text-block">
        <h4>Connections</h4>
        Referenced in <a href="/title/tt1838386?ref_=tt_trv_cnn">The Tonight Show with Jay Leno: Episode #19.93</a>&nbsp;(2011)


        <a href="trivia?tab=mc&ref_=tt_trv_cnn"
class="nobr" >See more</a> &raquo;
    </div>
                <hr />
    <div id="soundtracks" class="text-block">
        <h4>Soundtracks</h4>
We're All In This Together <br />
(uncredited) <br />
Written by Matthew Gerrard and Robbie Nevil <br />
Performed by Ty Burrell <br />        <a href="soundtrack?ref_=tt_trv_snd"
class="nobr" >See more</a> &raquo;
    </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDidYouKnowWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleDidYouKnowWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleDidYouKnowWidget", {wb: 1});
    }
</script>


    
    
    


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleFAQWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleFAQWidget_started');
    }
  </script>
    
    <div class="article" id="titleFAQ">
        <h2>Frequently Asked Questions</h2>
        
            <div class="faq" >
                    <div class="odd">
                    <b>Q:</b>
<a href="/title/tt1442437/faq?ref_=tt_faq_1#.2.1.3"
> Is Jay widowed or divorced?</a>
                    </div>
                    <div class="even">
                    <b>Q:</b>
<a href="/title/tt1442437/faq?ref_=tt_faq_2#.2.1.2"
> How well does this series represent the LGBT community?</a>
                    </div>
                    <div class="odd">
                    <b>Q:</b>
<a href="/title/tt1442437/faq?ref_=tt_faq_3#.2.1.6"
> Is this supposed to be a documentary?</a>
                    </div>
            </div>
        
            <span class="see-more inline" >        
                <a href="/title/tt1442437/faq?ref_=tt_faq_sm"
class="nobr" >See more</a>
                <span class="spoilers">(Spoiler Alert!)</span></span>&nbsp;&raquo;
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleFAQWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleFAQWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleFAQWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleUserReviewsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleUserReviewsWidget_started');
    }
  </script>
    <div class="article" id="titleUserReviewsTeaser">
        <h2>User Reviews</h2>
        <div class="user-comments">
                    <div class="tinystarbar" title="8/10">
                        <div style="width: 80px;">&nbsp;</div>
                    </div>
                <span itemprop="review" itemscope itemtype="http://schema.org/Review">  
                    <strong itemprop="name">One of the best TV comedies to hit the air for a while</strong>
                    <span itemprop="reviewRating" itemscope itemtype="http://schema.org/Rating">
                        <meta itemprop="worstRating" content = "1" />
                        <meta itemprop="ratingValue" content="8" />
                        <meta itemprop="bestRating" content="10" />
                    </span>
                    <div class="comment-meta">
                        15 October 2009 | by <a href="/user/ur6084099/?ref_=tt_urv"
><span itemprop="author">tetrafunk</span></a>
                        <meta itemprop="datePublished" content="2009-10-15" />
                              (United Kingdom)
                        &ndash; <a href="/user/ur6084099/comments?ref_=tt_urv"
>See all my reviews</a>
                    </div>
                    <div>
                        <p itemprop="reviewBody">I saw the trailer for this show a while back and was instantly intrigued. Shot in a &#x22;mockumentary&#x22; style it follows the lives of three couples who&#x27;s various members are related as family members. Although the set-up is slightly clich&#xE9;, a gay couple, a stereotypical family and a Columbian wife and son (from her first marriage) with her American husband, this is where the standard ends. The dialogue is fantastic and at many points I found myself really laughing quite loudly, something which is very rare for a TV show to accomplish for me personally. The casting is also spot on with the inclusion of Ed O&#x27;Neill (the infamous Al Bundy!), Ty Burrell, Julie Bowen and Sof&#xED;a Vergara, with each actor really bringing something unique to the mix. I strongly recommend this show to anybody who appreciates good comedy, the &#x22;to-camera&#x22; sections of the dialogue have a very close resemblance to the original UK version of &#x22;The Office&#x22; and for those who are familiar with this, Modern Family will be a welcomed return. Great show, great acting, great script. Highly recommended.</p>
                    </div>
                </span>
                <hr />
                <div class="yn" id="ynd_2141168">
                    75 of 122 people found this review helpful.&nbsp;
                    Was this review helpful to you?
                    <button class="btn small" value="Yes" name="ynb_2141168_yes" onclick="CS.TMD.user_review_vote(2141168, 'tt1442437', 'yes');" >Yes</button>
                    <button class="btn small" value="No" name="ynb_2141168_no" onclick="CS.TMD.user_review_vote(2141168, 'tt1442437', 'no');" >No</button>
                </div>
            <div class="see-more">
                
                <a href="/title/tt1442437/reviews-enter?ref_=tt_urv"
rel="login">Review this title</a>
                <span>|</span>
                    <a href="/title/tt1442437/reviews?ref_=tt_urv"
>See all 158 user reviews</a>&nbsp;&raquo;
            </div>
        </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleUserReviewsWidget_finished');
    }
  </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleUserReviewsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleUserReviewsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleUserReviewsWidget", {wb: 1});
    }
</script>


    
    
    


    
    
    

  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleContributeWidget_started');
    }
  </script>
    <div class="article contribute">
        <div class="rightcornerlink">
<a href="/help/?adding/&ref_=tt_cn_hlp"
>Getting Started</a>
            <span>|</span>
<a href="/czone/?ref_=tt_cn_cz"
>Contributor Zone</a>&nbsp;&raquo;</div>
        <h2>Contribute to This Page</h2>

                <div class="button-box">
                    <form method="get" action="https://contribute.imdb.com/updates">
                        <input type="hidden" name="ref_" value="tt_cn_edt" />
                        <input type="hidden" name="edit" value="legacy/title/tt1442437/" />
                            <button class="btn primary large" rel="login" type="submit">Edit page</button>
                    </form>
                </div>
        

    
        <div class="button-box">
            <form method="get" action="https://contribute.imdb.com/updates">
                <input type="hidden" name="ref_" value="tt_cn_eps" />
                <input type="hidden" name="update" value="episode" />
                <input type="hidden" name="parent" value="tt1442437" />
                <button class="btn large add_episode" type="submit">Add episode</button>
            </form>
        </div>

        <div class="button-box">
<a href="/title/tt1442437/reviews-enter?ref_=tt_cn_urv"
class="btn large" rel="login">Write review</a>          
        </div>
    
    
    </div>

  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleContributeWidget_finished');
    }
  </script>


    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    </div>
    <br class="clear"/>
</div> 


    
    
    

    
    
    

                   <br class="clear" />
                </div>






    <div id="footer" class="ft">

            <div id="rvi-div">
                <div class="recently-viewed">&nbsp;</div>
                <br class="clear">
            </div>

	
	<!-- no content received for slot: bottom_ad -->
	

        <div class="container footer-grid-wrapper">
            <div class="row footer-row">
                <div class="col outside">
    <h3>IMDb Everywhere</h3>
    <div class="app-links">
    <a href="/offsite/?page-action=ft_app_apple&token=BCYm7XP8yLCzjdvC1tYQnw6cwX6eOHLOtMphLL58wWCUEWk1DnyvONInAyXdpFl9HYdmMVIJ_Bov%0D%0AibIvRaj-YUZTmr6ndpvVw7inqLvuTDx3VxEa5sM2WkFRRmhcY88EiqHfkLm1bIHVRyuiYn1BYPbR%0D%0A-n7RC8Dp-hRcPY6hSKumI838zfVD7uWNUBrsgcG-cRk7WEAcAHJfoIJ6gUa8MINjNBMScKBBSyrT%0D%0Al9rdouENQB8%0D%0A&ref_=ft_app_apple"
title="Get the IMDb App on the Apple App Store" target="_blank" itemprop='url'> <span class="desktop-sprite appstore-apple" ></span>
</a>
    <a href="/offsite/?page-action=ft_app_google&token=BCYpjUpqct2dmd4mbKMRsWSqdykwhTOXfn1jGbvGPfEsvwYFOJ2fDbaEYO9O3V4ftZ_lz_xmnntz%0D%0AYIdu9YltDudH2LzVgrHlOYWxZTu565eWqizt4lCKO4jQIrLgtIPxA2k46zqnnsXoBIIlP5Avazik%0D%0A9HecZqabHpPSbVLgFL6xJHLC6kS0M8ELukZQ6x5qg16d9QcvbMYtm_tFUARlFGoehoXW_5_Vgvqb%0D%0Aj7LYQGdO2PQ%0D%0A&ref_=ft_app_google"
title="Get the IMDb app on Google Play" target="_blank" itemprop='url'> <span class="desktop-sprite appstore-google" ></span>
</a>
    <a href="/offsite/?page-action=ft_app_amazon&token=BCYhgZl9opZqnsCu2LeoPPHP4R1686c9NEkJ7Du2Uc46Jpr0kjfCzzhNHlVc9dVPBVBFzvRB8sTL%0D%0AIwLZ9KIR_dIRwxPUuPRb8zmrsDXaC098hq6DlOdU3b4aIJU-O_K07LjD5tYKDOxm-hM4v9PC2uIB%0D%0ADCWcsOL8FVWoucCulikC4YE8x3-1xg1ohqEyMyeRYfmdaNDIW4eu8ojKvdYYrJPwRaMfjcaR52T_%0D%0AgH57dr1F-t8HtvagTJQ5gqCFhV3_m_zYzNtkMlrLsmII0hiF2C4xXKnO5osZaHeEQZgE5Ef-9ysh%0D%0AjtXjrhn7oMrnHH3sshy9KBHZ46K4CP3pX9-vFPWyHBhFiKAPIgkBfiebZUa_xPGntqKpOhUWtG0Z%0D%0AddC7EsLtjCuCwnCEIjC88uxib6Vc0HEsCRdsK9iA7s_cCmdR4qg%0D%0A&ref_=ft_app_amazon"
title="Get the IMDb app on Amazon Appstore for Android" target="_blank" itemprop='url'> <span class="desktop-sprite appstore-amazon" ></span>
</a>
    </div>

    <p>Find showtimes, watch trailers, browse photos, track your Watchlist and rate your favorite movies and TV shows on your phone or tablet!</p>

    <a href="http://m.imdb.com?ref_=ft_mdot"
class="touchlink" >IMDb Mobile site</a>
                </div>
                <div class="col center">
  <div class="link-bar icon-link-bar">
    <h3>
      Follow IMDb on
      <div>

    <a href="/offsite/?page-action=fol_fb&token=BCYhoTGMwYErb6JTyJuYv4H_sa-nVFkC9jl5ZHN-H47RYzKRYAo4r2prqzohz1WoS4UBNVDr1RWH%0D%0AHmX8BCXSGMyhDYsOkT8kUcdNlijYHwu5zhNjyWaw9z5anZOcAMeLUynElelCNnyiHLysK3FyWMuu%0D%0ATc4Q5vxhyBa5JcxBcfzgl3IjM9cUrw86S2fbVp5Pgh2kJOTCSzAN12mGrdVIKiiEHg%0D%0A&ref_=tt_ft_fol_fb"
title="Follow IMDb on Facebook" target="_blank" itemprop='url'> <span class="desktop-sprite follow-facebook" ></span>
</a>
    <a href="/offsite/?page-action=fol_tw&token=BCYiSn6nqz7kGbUGF4TgDl0ulhNrDsm9h2LCpRY_58eRr7UvqJ5wfXO4APkk0lkfESej2_0Qmnkq%0D%0AIIIIhkdp5jIlCAcKmnKIHfxRPJ7-UrGalWGCsMFom3sVR67WADgzJNhebliUzGTTLz_zFCMKPTka%0D%0AzrUyeSffdilKhsWlBzfvNAtATxHvRYIkIR8p_oXcVSKRuQBDluUwVUky55ZaQ7khaw%0D%0A&ref_=tt_ft_fol_tw"
title="Follow IMDb on Twitter" target="_blank" itemprop='url'> <span class="desktop-sprite follow-twitter" ></span>
</a>
    <a href="/offsite/?page-action=fol_inst&token=BCYu6PT_fOLooMdrBwBu4m3AmjAh_kaIRDyG29Voj5SVL-gEQk2O8I_4LiyXfSvhV_xUGSxj7enV%0D%0A48dqErlfCHu_nAced3cCgbIyi2xfYfuX7IvYPVCNRn-SmcQ-fnP2Jygn2QGyVYMjUlzcuezGdKm_%0D%0A98pVAql57HGZZbn_fWeetag_r6ZMRAYgQS5q1YqWXsuiPd6v-Np5KPnjCOL1Tc67pA%0D%0A&ref_=tt_ft_fol_inst"
title="Follow IMDb on Instagram" target="_blank" itemprop='url'> <span class="desktop-sprite follow-instagram" ></span>
</a>
      </div>
    </h3>
  </div>
                </div>
                <div class="col outside">
    <div class="row">
        <div class="col col-4">
            <ul class="unstyled">
                <li><a href="/?ref_=ft_hm"
>Home</a></li>
                <li><a href="/chart/top?ref_=ft_250"
>Top Rated Movies</a></li>
                <li><a href="/chart/?ref_=ft_cht"
>Box Office</a></li>
                <li><a href="/sections/tv/?ref_=ft_tv"
>TV</a></li>
                <li><a href="/movies-coming-soon/?ref_=ft_cs"
>Coming Soon</a></li>
                <li><a href="/a2z?ref_=ft_si"
>Site Index</a></li>
                <li><a href="/search?ref_=ft_sr"
>Search</a></li>
                <li><a href="/movies-in-theaters/?ref_=ft_inth"
>In Theaters</a></li>
            </ul>
        </div>
        <div class="col col-4">
            <ul class="unstyled">
                <li><a href="/helpdesk/contact?ref_=ft_con"
>Contact Us</a></li>
                <li>        <a href="https://secure.imdb.com/register-imdb/form-v2?ref_=ft_reg"
>Register</a>
</li>
                <li><a href="/news/?ref_=ft_nw"
>News</a></li>
                <li class="spacer"></li>
                <li><a href="/pressroom/?ref_=ft_pr"
>Press Room</a></li>
                <li><a href="/advertising/?ref_=ft_ad"
>Advertising</a></li>
                <li><a href="/jobs?ref_=ft_jb"
>Jobs</a></li>
            </ul>
        </div>
        <div class="col col-4">
            <ul class="unstyled">
                <li><a href="http://pro.imdb.com/signup/index.html?rf=cons_ft_hm&ref_=cons_ft_hm"
>IMDbPro</a></li>
                <li>    <a href="/offsite/?page-action=ft-mojo&token=BCYiu4iR0ZXFSPiNfGRzZvt8GOkX0qGXJFJ3dHcxuKPutHlquOvrdH6p3yBMoXUatdaz6_4xk_F6%0D%0AEktzZijEIqxvpljSEqO3vuB3f9JHIKcMEk3-bI_hsCjfbh-UElRi6jCbOQ6AZjnJx1NEObg31VNs%0D%0AcwLMA5utXm0lh_LaE_Ug3REtxs8Yk4pgbYOyW8UctZv5uZQElz0gV9_OmB1bdkN00g%0D%0A&ref_=ft_bom"
itemprop='url'>Box Office Mojo</a>
</li>
                <li>    <a href="/offsite/?page-action=ft-wab&token=BCYgApO52tYZtCEAHVTPmi0s9J_28PS2ywITcDoaM5GM22Zc1WbZqkAAdaOXrwWlHXxxlmnzkgav%0D%0AwEc108vu5QUDPQ74KYO831HKJsBbxdjN0semxhzAQ9NbJWAvbBaQvzqiMZW7_0Kqrs7VsdGa5ORe%0D%0Am8iF3hYQkKI3Czg5uKg3C4A7fHmMAEiAy9SrOxr7n1lVE88g5zfRaLp1HeRxts76dQ%0D%0A&ref_=ft_wab"
itemprop='url'>Withoutabox</a>
</li>
                <li class="spacer"></li>
                <li><a href="/help/show_article?conditions&ref_=ft_cou"
>Conditions of Use</a></li>
                <li><a href="/privacy?ref_=ft_pvc"
>Privacy Policy</a></li>
                <li>    <a href="/offsite/?page-action=ft-iba&token=BCYjYfrw6uJrkm9VL6lt8n00CUFK7zliPME9-BjzV8O93a6Pkp0zDROvqFMmLSzKCkBIMhctHCI4%0D%0AVQYA1YYqQ3K_3YTpTBY3g2u_SBbCktgc_y0r9RCc0WMMyRQNsqEIzSEgPQGIDUNOmsvVPm2IhHFm%0D%0ASHOGrAVGFtpm2PCK1CjDPsjuc55lYluikc_UEpGBgGLy1f5UZGD3Rls4mtPHxeyGnwHB-i9E5ppv%0D%0AEbxgQ5cerUalrakn_ppLBVdjPkn3knPY%0D%0A&ref_=ft_iba"
itemprop='url'>Interest-Based Ads</a>
</li>
                <li class="spacer"></li>
            </ul>
        </div>
    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="ft-copy float-right">
                <a
href="/help/show_article?conditions"
>Copyright &copy;</a> 1990-2017
                <a
href="/help/"
>IMDb.com, Inc.</a>
            </div>
            <div>
                An <span id="amazon_logo" class="footer_logo" align="middle">Amazon.com</span> company.
            </div>
        </div>



    <table class="footer" id="amazon-affiliates">
        <tr>
            <td colspan="8">
                Amazon Affiliates
            </td>
        </tr>
        <tr>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-aiv&token=BCYnZdY7WhtggYFeWA2OOsxyqPr-E2mfImeUuXdTxBskuCyD96D3f0AYlhUvW7QsDhmPA1U_zJ7Z%0D%0AQ_IQko7aj1iqdKcHcOb7Xqw2G_LDjkUKr6nFzjoFmuJ6BaCUDmyv27TghSCZESH6xjRs_GBHhX6f%0D%0A6NA4kCv6EoFhCgqzMHXVkGwXFK95tsvNgMbJ4The_V16GZYcK4qFwCFDGgIJoFlsRTAiWbZwd-xO%0D%0A3bPSlDqgL84%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon Video</span><br>
                <span class="amazon-affiliate-site-desc">Watch Movies &<br>TV Online</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-piv&token=BCYupxUq_hZXHpC7zXrSBXyD0tHcqnn7IWeqZH8PiK6noiogm28lKAbx7v-YAAgWdkRuy5b189yS%0D%0A3mtE3dITKGsY7NE3cl02otApZeO24FdBjW6jzCd54ezbk5Bz-YMHAwSaOg9ddBFvpbHAA07QmEjM%0D%0Aq6sAL8Cv7CtAuTshAMnAac-Ed6xEfyhk9T1-xWoB-Z1KzmDP5A1NMZItBTxFytYMoEq4XF87K_3o%0D%0A8ZRFZWlFPPU%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Prime Video</span><br>
                <span class="amazon-affiliate-site-desc">Unlimited Streaming<br>of Movies & TV</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-de&token=BCYljhMiFiXv7-twIghVCK4poD0z0-mQQZHav5kScGY40ytnT9wWAMABm1wauAHkxdWpv0e5j_jG%0D%0AtNS34qNCkdCziuqnWArc-xtVcGy8VKhHtHk3TGhTMc17VT1Y3_nUHyewsNhcnMqeJVbrUcr3qTN6%0D%0AW6iBN58OrVikn0U_FnrgEf3Jb7c4kK6ejSpeWGRtH10H1ooP2Hmpy3QmHcK39kDyzXCBMWXijYiK%0D%0Azqfy6FJd_FM%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon Germany</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movies on<br>DVD & Blu-ray</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-it&token=BCYqfksdw0JznnTW1s0jXzyOWzq59Q3_B3E9sB9IH_cCx6EoqRSaiqHt0lINHm3bnqnfc73NheYU%0D%0AehHsr9GJlW0EAhvXMxbAqDTnoeSHL8t5ey9RP1M9kQ0sRbzjxqobs8FdDXzfnXEsUp227Y8NaISp%0D%0A7OcPD_I5u1MOXvQRVL66KKHwik7KkcErz0E8_KvNhNuGwiMsP5Xbu_Qsqnon-NhaSoH-fHSOjVm3%0D%0Ag9nTy7NXhNU%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon Italy</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movies on<br>DVD & Blu-ray</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-fr&token=BCYkMvxP9GhNGqTbt6twcwj6tkmX216Sp2p6xJjsUktf_ZInTbYTgYgWFoS2a9kKP3dvLo35cFmB%0D%0A6MHgGWSfHa4zFfC5gpRgkc0tpNqHgLgSgak-1iykqWbCzHE3Pxy0rTay_H_cvBb3KmYhVwoFvEjj%0D%0AL9Mu0Alm-cbcBnl6X0o-91ysYhkRJoOuyQVmbAZ4zcWyfclZuWNowrpEh4fSlmIfCYtuFBxeAVdQ%0D%0Ah0Su7xqbYTs%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon France</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movies on<br>DVD & Blu-ray</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-in&token=BCYj-XH6ouUZyQ0m7UmyMQxtt99IbIdnzHDaf5F6F7nw608TKY9ph1XaKXCqqb1sktnYkpeHQd8t%0D%0A-wI7Lelc48NQrdxcct_noLZu0p04ixvWHpDykGwzqJbYK6Nhlyd6hq3d7qt9f1Q0JfsKK8z7uzJR%0D%0AKLvOqB_cJNoiCbhfh7WhLlJrU2nLE0oZcmafLOO_3RyBYFe7dXd2pSSbwsJHVNXvBrPIa0HKDuA0%0D%0AYdF6XyS74NCMEORbdE18wYJh01U8tajm%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon India</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movie and<br>TV Show DVDs</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-dpr&token=BCYtnrpCptyqNB2Mfzg4AxVu0yo-je4JPj-f1Do2djYJF5T4DbayoSLwBHEh-oCO9xSYop--zqgA%0D%0ANzhU8iA5FoA4daHwjSJ53r1SxkytnG_uTeY07zfoWB2kKyXcEPDlt3OBzqwoh5CA9zG7A1n2ah_I%0D%0Asjefe-eqAaeHt5o78J8dCsE%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">DPReview</span><br>
                <span class="amazon-affiliate-site-desc">Digital<br>Photography</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-aud&token=BCYtNcN7_6Kws7Vfp6euxkYj6wLwPpD492xtwiJOUhBMeR2lcYq-sfQAdRRdHT7lfavYZSjPdCut%0D%0AetELmofqXSXe6yAEDzXZiwGo5PsZ4BLHu4oElWR5lepkD80SKqSGGiY2hrCkBGIbV-XSJ0XaSem_%0D%0AiQkBqsPB-xV1o19Fgy-rRaE%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Audible</span><br>
                <span class="amazon-affiliate-site-desc">Download<br>Audio Books</span>
            </a>
        </div>
    </td>
        </tr>
    </table>
      </div>
            </div>
        </div>



<script type="text/javascript" src="http://ia.media-imdb.com/images/G/01/imdb/js/collections/common-2411119445._CB508084084_.js"></script>
<script type="text/javascript" src="http://ia.media-imdb.com/images/G/01/imdb/js/collections/title-1672259613._CB517606530_.js"></script>

<script type="text/javascript" id="login">
(function(){
    var readyTimeout = setInterval(function() {
        if (window.jQuery && window.imdb && window.imdb.login_lightbox) {
            clearTimeout(readyTimeout);
            window.imdb.login_lightbox();
        }
    }, 100);
})();
</script>

        <script type="text/javascript">
        function jQueryOnReady(remaining_count) {
            if (window.jQuery && typeof $.fn.watchlistRibbon !== 'undefined') {
                jQuery(
                             function() {
           var isAdvertisingThemed = !!(window.custom && window.custom.full_page && window.custom.full_page.theme),
               url = "http://www.facebook.com/widgets/like.php?width=280&show_faces=1&layout=standard&href=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1442437%2F&colorscheme=light",
               like = document.getElementById('iframe_like');

           if (!isAdvertisingThemed && like) {
              like.src = url;
              like.onload = function () { 
                  if (uex) { uex('ld', 'facebook_like_iframe', {wb: 1}); }
              };
           } else if (isAdvertisingThemed) {
              $('.social_networking_like').closest('.aux-content-widget-2').hide();
           }
        }

                );
                jQuery(
                             function() {
            var facebookTheme = (window.custom && window.custom.full_page &&
                    window.custom.full_page.theme) ?
                window.custom.full_page.theme : "light",
            url = "//www.facebook.com/plugins/likebox.php?href=facebook.com%2Fimdb&width=300&height=190&connections=4&header=false&stream=false&colorscheme=" + facebookTheme,
            like = document.getElementById('facebookIframe'),
            twitterIframe = document.getElementById('twitterIframe');
            if (like) {
                like.src = url;
            }
            if (twitterIframe) {
                twitterIframe.src = "http://i.media-imdb.com/images/social/twitter.html?10#imdb";
            }
         }

                );
            } else if (remaining_count > 0) {
                setTimeout(function() { jQueryOnReady(remaining_count-1) }, 100);
            }
        }
        jQueryOnReady(50);
        </script>


<div id="servertime" time="1186"/>



<script>
    if (typeof uet == 'function') {
      uet("be");
    }
</script>

    </body>
</html>


    http_version: 
  recorded_at: Sun, 03 Sep 2017 16:13:17 GMT
recorded_with: VCR 3.0.3
