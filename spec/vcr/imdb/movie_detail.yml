---
http_interactions:
- request:
    method: get
    uri: http://www.imdb.com/title/tt0118715/?ref_=fn_al_tt_1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 01 Aug 2017 17:44:57 GMT
      Server:
      - Server
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Type:
      - text/html;charset=UTF-8
      Content-Language:
      - en-US
      Vary:
      - Accept-Encoding,User-Agent
      Set-Cookie:
      - session-id-time=2132329497; Domain=.imdb.com; Expires=Sun, 19-Aug-2085 20:59:04
        GMT; Path=/
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Sun, 19-Aug-2085
        20:59:04 GMT; Path=/
      - uu=BCYhZmowBBiY0d5MTNwIbNRlDkLzJMIWFlaj9QNdfsVDAk_qAAYo9mL5-naW8FhDIb8AdkSfBJtq%0D%0AIT84ziuw41-tF_r_nVk0nTmF_Qs2Vgxs7X6ZbLs-qIO8gAMtiPrcn6sz8x6S2y8mP2SdFssdBNm_%0D%0AWZ_z6SnT8ZL2sg-wnJn_TpRIF8qehyC8Vuc-NNYzXSuoBH0BLxqGDiLUUquY9bzu_nH3fvHaXyOg%0D%0AeSPz7BSgGx-4T1n3WrKyNSm4o2Yr2MQA12gjIwy8d66RJ3kecvF5Vw%0D%0A;
        Domain=.imdb.com; Expires=Sun, 19-Aug-2085 20:59:04 GMT; Path=/
      P3p:
      - policyref="http://i.imdb.com/images/p3p.xml",CP="CAO DSP LAW CUR ADM IVAo
        IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM
        CNT STA HEA PRE LOC GOV OTC "
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        CgoKCgoKCgoKPCFET0NUWVBFIGh0bWw+CjxodG1sCnhtbG5zOm9nPSJodHRwOi8vb2dwLm1lL25zIyIKeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCI+CiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KCiAgICA8bWV0YSBuYW1lPSJhcHBsZS1pdHVuZXMtYXBwIiBjb250ZW50PSJhcHAtaWQ9MzQyNzkyNTI1LCBhcHAtYXJndW1lbnQ9aW1kYjovLy90aXRsZS90dDAxMTg3MTU/c3JjPW1kb3QiPgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIHVlX3QwPXdpbmRvdy51ZV90MHx8K25ldyBEYXRlKCk7PC9zY3JpcHQ+CiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgIHZhciB1ZV9taWQgPSAiQTFFVkFNMDJFTDhTRkIiOyAKICAgICAgICAgICAgICAgIHZhciB1ZV9zbiA9ICJ3d3cuaW1kYi5jb20iOyAgCiAgICAgICAgICAgICAgICB2YXIgdWVfZnVybCA9ICJmbHMtbmEuYW1hem9uLmNvbSI7CiAgICAgICAgICAgICAgICB2YXIgdWVfc2lkID0gIjAwMC0wMDAwMDAwLTAwMDAwMDAiOwogICAgICAgICAgICAgICAgdmFyIHVlX2lkID0gIjFKUkQ2QUE1NEM5NTQyVFA5MDM5IjsKICAgICAgICAgICAgICAgIChmdW5jdGlvbihlKXt2YXIgYz1lO3ZhciBhPWMudWV8fHt9O2EubWFpbl9zY29wZT0ibWFpbnNjb3BlY3NtIjthLnE9W107YS50MD1jLnVlX3QwfHwrbmV3IERhdGUoKTthLmQ9ZztmdW5jdGlvbiBnKGgpe3JldHVybiArbmV3IERhdGUoKS0oaD8wOmEudDApfWZ1bmN0aW9uIGQoaCl7cmV0dXJuIGZ1bmN0aW9uKCl7YS5xLnB1c2goe246aCxhOmFyZ3VtZW50cyx0OmEuZCgpfSl9fWZ1bmN0aW9uIGIobSxsLGgsaixpKXt2YXIgaz17bTptLGY6bCxsOmgsYzoiIitqLGVycjppLGZyb21PbkVycm9yOjEsYXJnczphcmd1bWVudHN9O2MudWVMb2dFcnJvcihrKTtyZXR1cm4gZmFsc2V9Yi5za2lwVHJhY2U9MTtlLm9uZXJyb3I9YjtmdW5jdGlvbiBmKCl7Yy51ZXgoImxkIil9aWYoZS5hZGRFdmVudExpc3RlbmVyKXtlLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGYsZmFsc2UpfWVsc2V7aWYoZS5hdHRhY2hFdmVudCl7ZS5hdHRhY2hFdmVudCgib25sb2FkIixmKX19YS50YWc9ZCgidGFnIik7YS5sb2c9ZCgibG9nIik7YS5yZXNldD1kKCJyc3QiKTtjLnVlX2NzbT1jO2MudWU9YTtjLnVlTG9nRXJyb3I9ZCgiZXJyIik7Yy51ZXM9ZCgidWVzIik7Yy51ZXQ9ZCgidWV0Iik7Yy51ZXg9ZCgidWV4Iik7Yy51ZXQoInVlIil9KSh3aW5kb3cpOyhmdW5jdGlvbihlLGQpe3ZhciBhPWUudWV8fHt9O2Z1bmN0aW9uIGMoZyl7aWYoIWcpe3JldHVybn12YXIgZj1kLmhlYWR8fGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXXx8ZC5kb2N1bWVudEVsZW1lbnQsaD1kLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2guYXN5bmM9ImFzeW5jIjtoLnNyYz1nO2YuaW5zZXJ0QmVmb3JlKGgsZi5maXJzdENoaWxkKX1mdW5jdGlvbiBiKCl7dmFyIGs9ZS51ZV9jZG58fCJ6LWVjeC5pbWFnZXMtYW1hem9uLmNvbSIsZz1lLnVlX2NkbnN8fCJpbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tIixqPSIvaW1hZ2VzL0cvMDEvY3NtaW5zdHJ1bWVudGF0aW9uLyIsaD1lLnVlX2ZpbGV8fCJ1ZS1mdWxsLTExZTUxZjI1M2U4YWQ5ZDE0NWY0ZWQ2NDRiNDBmNjkyLl9WMV8uanMiLGYsaTtpZihoLmluZGV4T2YoIk5TVFJVTUVOVEFUSU9OX0ZJTCIpPj0wKXtyZXR1cm59aWYoInVlX2h0dHBzIiBpbiBlKXtmPWUudWVfaHR0cHN9ZWxzZXtmPWUubG9jYXRpb24mJmUubG9jYXRpb24ucHJvdG9jb2w9PSJodHRwczoiPzE6MH1pPWY/Imh0dHBzOi8vIjoiaHR0cDovLyI7aSs9Zj9nOms7aSs9ajtpKz1oO2MoaSl9aWYoIWUudWVfaW5saW5lKXtpZihhLmxvYWRVRUZ1bGwpe2EubG9hZFVFRnVsbCgpfWVsc2V7YigpfX1hLnVlbHM9YztlLnVlPWF9KSh3aW5kb3csZG9jdW1lbnQpOwogICAgICAgICAgICAgICAgaWYgKCEoJ0NTJyBpbiB3aW5kb3cpKSB7IHdpbmRvdy5DUyA9IHt9OyB9CiAgICAgICAgICAgICAgICAgICAgd2luZG93LkNTLmxvZ2luTG9jYXRpb24gPSAiaHR0cHM6Ly93d3cuaW1kYi5jb20vcmVnaXN0cmF0aW9uL3NpZ25pbj91PSUyRnRpdGxlJTJGdHQwMTE4NzE1JTJGJTNGcmVmXyUzRGZuX2FsX3R0XzEiOwogICAgICAgICAgICA8L3NjcmlwdD4KIAoKICAgICAgICAKICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIElNRGJUaW1lcj17c3RhcnR0aW1lOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxwdDonamF2YSd9Ozwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJMb2FkVGl0bGUiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX3RpdGxlIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICA8dGl0bGU+VGhlIEJpZyBMZWJvd3NraSAoMTk5OCkgLSBJTURiPC90aXRsZT4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X3RpdGxlIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJMb2FkVGl0bGUiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiTG9hZFRpdGxlIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogICAgICAgIAogICAgICAgICAgICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cDovL3d3dy5pbWRiLmNvbS90aXRsZS90dDAxMTg3MTUvIiAvPgogICAgICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwOi8vd3d3LmltZGIuY29tL3RpdGxlL3R0MDExODcxNS8iIC8+Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIkxvYWRJY29ucyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wcmVfaWNvbiJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL3NhZmFyaS1mYXZpY29uLTUxNzYxMTM4MS5fQ0I1MjI3MzY1NTJfLnN2ZyIgbWFzayByZWw9Imljb24iIHNpemVzPSJhbnkiPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvZmF2aWNvbi0yMTY1ODA2OTcwLl9DQjUyMjczNjU1Nl8uaWNvIiAvPgogICAgICAgIDxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjMDAwMDAwIiAvPgogICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvZGVza3RvcC1mYXZpY29uLTIxNjU4MDY5NzAuX0NCNTIyNzM2NTYxXy5pY28iIC8+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL21vYmlsZS9hcHBsZS10b3VjaC1pY29uLXdlYi00MTUxNjU5MTg4Ll9DQjUyMjczNjEyOV8ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iPiAKICAgICAgICA8bGluayBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbW9iaWxlL2FwcGxlLXRvdWNoLWljb24td2ViLTc2eDc2LTUzNTM2MjQ4Ll9DQjUyMjczNjIzM18ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI3Nng3NiI+IAogICAgICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9tb2JpbGUvYXBwbGUtdG91Y2gtaWNvbi13ZWItMTIweDEyMC0yNDQyODc4NDcxLl9DQjUyMjczNjI1M18ucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxMjB4MTIwIj4gCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL21vYmlsZS9hcHBsZS10b3VjaC1pY29uLXdlYi0xNTJ4MTUyLTE0NzU4MjM2NDEuX0NCNTIyNzM2NTU3Xy5wbmciIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjE1MngxNTIiPiAgICAgICAgICAgIAogICAgICAgIDxsaW5rIHJlbD0ic2VhcmNoIiB0eXBlPSJhcHBsaWNhdGlvbi9vcGVuc2VhcmNoZGVzY3JpcHRpb24reG1sIiBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvaW1kYnNlYXJjaC0zMzQ5NDY4ODgwLl9DQjUyMjczNjYwNV8ueG1sIiB0aXRsZT0iSU1EYiIgLz4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X2ljb24iXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkxvYWRJY29ucyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJMb2FkSWNvbnMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgPG1ldGEgcHJvcGVydHk9InBhZ2VJZCIgY29udGVudD0idHQwMTE4NzE1IiAvPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJwYWdlVHlwZSIgY29udGVudD0idGl0bGUiIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9InN1YnBhZ2VUeXBlIiBjb250ZW50PSJtYWluIiAvPgoKCiAgICAgICAgPGxpbmsgcmVsPSdpbWFnZV9zcmMnIGhyZWY9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWlRGak1qQmlZekl0TnpVNVlTMDBNamRpTFdKa09Ua3RORFEzTVRFM1pqWTJZVFk1WGtFeVhrRnFjR2RlUVhWeU5EazNOelUyTVRRQC5fVjFfVVkxMjAwX0NSODQsMCw2MzAsMTIwMF9BTF8uanBnIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0nb2c6aW1hZ2UnIGNvbnRlbnQ9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWlRGak1qQmlZekl0TnpVNVlTMDBNamRpTFdKa09Ua3RORFEzTVRFM1pqWTJZVFk1WGtFeVhrRnFjR2RlUVhWeU5EazNOelUyTVRRQC5fVjFfVVkxMjAwX0NSODQsMCw2MzAsMTIwMF9BTF8uanBnIiAvPgoKICAgICAgICA8bWV0YSBwcm9wZXJ0eT0nb2c6dHlwZScgY29udGVudD0idmlkZW8ubW92aWUiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0nZmI6YXBwX2lkJyBjb250ZW50PScxMTUxMDk1NzUxNjk3MjcnIC8+CgogICAgPG1ldGEgcHJvcGVydHk9J29nOnRpdGxlJyBjb250ZW50PSJUaGUgQmlnIExlYm93c2tpICgxOTk4KSIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSdvZzpzaXRlX25hbWUnIGNvbnRlbnQ9J0lNRGInIC8+CiAgICA8bWV0YSBuYW1lPSJ0aXRsZSIgY29udGVudD0iVGhlIEJpZyBMZWJvd3NraSAoMTk5OCkgLSBJTURiIiAvPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJEaXJlY3RlZCBieSBKb2VsIENvZW4sIEV0aGFuIENvZW4uICBXaXRoIEplZmYgQnJpZGdlcywgSm9obiBHb29kbWFuLCBKdWxpYW5uZSBNb29yZSwgU3RldmUgQnVzY2VtaS4gJnF1b3Q7VGhlIER1ZGUmcXVvdDsgTGVib3dza2ksIG1pc3Rha2VuIGZvciBhIG1pbGxpb25haXJlIExlYm93c2tpLCBzZWVrcyByZXN0aXR1dGlvbiBmb3IgaGlzIHJ1aW5lZCBydWcgYW5kIGVubGlzdHMgaGlzIGJvd2xpbmcgYnVkZGllcyB0byBoZWxwIGdldCBpdC4iIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJEaXJlY3RlZCBieSBKb2VsIENvZW4sIEV0aGFuIENvZW4uICBXaXRoIEplZmYgQnJpZGdlcywgSm9obiBHb29kbWFuLCBKdWxpYW5uZSBNb29yZSwgU3RldmUgQnVzY2VtaS4gJnF1b3Q7VGhlIER1ZGUmcXVvdDsgTGVib3dza2ksIG1pc3Rha2VuIGZvciBhIG1pbGxpb25haXJlIExlYm93c2tpLCBzZWVrcyByZXN0aXR1dGlvbiBmb3IgaGlzIHJ1aW5lZCBydWcgYW5kIGVubGlzdHMgaGlzIGJvd2xpbmcgYnVkZGllcyB0byBoZWxwIGdldCBpdC4iIC8+CiAgICAgICAgPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IlJldmlld3MsIFNob3d0aW1lcywgRFZEcywgUGhvdG9zLCBNZXNzYWdlIEJvYXJkcywgVXNlciBSYXRpbmdzLCBTeW5vcHNpcywgVHJhaWxlcnMsIENyZWRpdHMiIC8+CiAgICAgICAgPG1ldGEgbmFtZT0icmVxdWVzdF9pZCIgY29udGVudD0iMUpSRDZBQTU0Qzk1NDJUUDkwMzkiIC8+Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIkxvYWRDU1MiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX2NzcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CjwhLS0gaD1pY3MtMWUtYzQtMnhsLWY2MzNmY2E5LnVzLWVhc3QtMSAtLT4KCiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9jb2xsZWN0aW9ucy90aXRsZS1mbGF0LXYyLTEzMjY2MjQ0MzAuX0NCNTAzODU2Mzk2Xy5jc3MiIC8+CiAgICAgICAgPG5vc2NyaXB0PgogICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9jc3Mvd2hlZWwvbm9qcy0yODI3MTU2MzQ5Ll9DQjUyMjczOTA0OF8uY3NzIj4KICAgICAgICA8L25vc2NyaXB0PgogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3Bvc3RfY3NzIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJMb2FkQ1NTIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIkxvYWRDU1MiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIkxvYWRKUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wcmVfYWRzIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICAKICAgICAgICA8c2NyaXB0ICB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAvLyBlbnN1cmVzIGpzIGRvZXNuJ3QgZGllIGlmIGFkcyBzZXJ2aWNlIGZhaWxzLiAgCiAgICAgICAgICAgIC8vIE5vdGUgdGhhdCB3ZSBuZWVkIHRvIGRlZmluZSB0aGUganMgaGVyZSwgc2luY2UgYWQganMgaXMgYmVpbmcgcmVuZGVyZWQgaW5saW5lIGFmdGVyIHRoaXMuCiAgICAgICAgICAgIChmdW5jdGlvbihmKSB7CiAgICAgICAgICAgICAgICAvLyBGYWxsYmFjayBqYXZhc2NyaXB0LCB3aGVuIHRoZSBhZCBTZXJ2aWNlIGNhbGwgZmFpbHMuICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYoKHdpbmRvdy5jc20gPT0gbnVsbCB8fCB3aW5kb3cuZ2VuZXJpYyA9PSBudWxsIHx8IHdpbmRvdy5jb25zb2xlTG9nID09IG51bGwpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5jb25zb2xlICYmIGNvbnNvbGUubG9nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJvbmUgb3IgbW9yZSBvZiB3aW5kb3cuY3NtLCB3aW5kb3cuZ2VuZXJpYyBvciB3aW5kb3cuY29uc29sZUxvZyBoYXMgYmVlbiBzdHViYmVkLi4uIik7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aW5kb3cuY3NtID0gd2luZG93LmNzbSB8fCB7IG1lYXN1cmU6ZiwgcmVjb3JkOmYsIGR1cmF0aW9uOmYsIGxpc3RlbjpmLCBtZXRyaWNzOnt9IH07CiAgICAgICAgICAgICAgICB3aW5kb3cuZ2VuZXJpYyA9IHdpbmRvdy5nZW5lcmljIHx8IHsgbW9uaXRvcmluZzogeyBzdGFydF90aW1pbmc6IGYsIHN0b3BfdGltaW5nOiBmIH0gfTsKICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlTG9nID0gd2luZG93LmNvbnNvbGVMb2cgfHwgZjsKICAgICAgICAgICAgfSkoZnVuY3Rpb24oKSB7fSk7CiAgICAgICAgPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9oZWFkX2RlbGl2ZXJ5X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiTG9hZEpTIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIkxvYWRKUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICAgICAgICA8L2hlYWQ+CiAgICA8Ym9keSBpZD0ic3R5bGVndWlkZS12MiIgY2xhc3M9ImZpeGVkIj4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIpOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX2JvZHlfZGVsaXZlcnlfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICAgIDxkaXYgaWQ9IndyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSJyb290IiBjbGFzcz0icmVkZXNpZ24iPgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoIm5zIik7CiAgICB9Cjwvc2NyaXB0Pgo8ZGl2IGlkPSJuYjIwIiBjbGFzcz0ibmF2YmFyU3ByaXRlIj4KPGRpdiBpZD0ic3VwZXJ0YWIiPgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogdG9wX2FkIC0tPgoJCjwvZGl2PgogIDxkaXYgaWQ9Im5hdmJhciIgY2xhc3M9Im5hdmJhclNwcml0ZSI+Cjxub3NjcmlwdD4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9jc3Mvc2l0ZS9jb25zdW1lci1uYXZiYXItbm8tanMtMzY1Mjc4Mjk4OS5fQ0I1MjI3MzY1MjZfLmNzcyIgLz4KPC9ub3NjcmlwdD4KPCEtLVtpZiBJRV0+PGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL3NpdGUvY29uc3VtZXItbmF2YmFyLWllLTIxMzM5NzY0MTQuX0NCNTIyNzM2NTgyXy5jc3MiPjwhW2VuZGlmXS0tPgo8c3BhbiBpZD0iaG9tZV9pbWdfaG9sZGVyIj4KPGEgaHJlZj0iLz9yZWZfPW52X2hvbWUiCnRpdGxlPSJIb21lIiBjbGFzcz0ibmF2YmFyU3ByaXRlIiBpZD0iaG9tZV9pbWciID48L2E+ICA8c3BhbiBjbGFzcz0iYWx0X2xvZ28iPgogICAgPGEgaHJlZj0iLz9yZWZfPW52X2hvbWUiCnRpdGxlPSJIb21lIiA+SU1EYjwvYT4KICA8L3NwYW4+Cjwvc3Bhbj4KPGZvcm0KIG1ldGhvZD0iZ2V0IgogYWN0aW9uPSIvZmluZCIKIGNsYXNzPSJuYXYtc2VhcmNoYmFyLWlubmVyIgogaWQ9Im5hdmJhci1mb3JtIgoKPgogIDxkaXYgaWQ9Im5iX3NlYXJjaCI+CiAgICA8bm9zY3JpcHQ+PGRpdiBpZD0ibW9yZV9pZl9ub19qYXZhc2NyaXB0Ij48YSBocmVmPSIvc2VhcmNoLyI+TW9yZTwvYT48L2Rpdj48L25vc2NyaXB0PgogICAgPGJ1dHRvbiBpZD0ibmF2YmFyLXN1Ym1pdC1idXR0b24iIGNsYXNzPSJwcmltYXJ5IGJ0biIgdHlwZT0ic3VibWl0Ij48ZGl2IGNsYXNzPSJtYWduaWZ5aW5nZ2xhc3MgbmF2YmFyU3ByaXRlIj48L2Rpdj48L2J1dHRvbj4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlZl8iIHZhbHVlPSJudl9zcl9mbiIgLz4KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBhdXRvY29tcGxldGU9Im9mZiIgdmFsdWU9IiIgbmFtZT0icSIgaWQ9Im5hdmJhci1xdWVyeSIgcGxhY2Vob2xkZXI9IkZpbmQgTW92aWVzLCBUViBzaG93cywgQ2VsZWJyaXRpZXMgYW5kIG1vcmUuLi4iPgogICAgPGRpdiBjbGFzcz0icXVpY2tzZWFyY2hfZHJvcGRvd25fd3JhcHBlciI+CiAgICAgIDxzZWxlY3QgbmFtZT0icyIgaWQ9InF1aWNrc2VhcmNoIiBjbGFzcz0icXVpY2tzZWFyY2hfZHJvcGRvd24gbmF2YmFyU3ByaXRlIgogICAgICAgICAgICAgIG9uY2hhbmdlPSJqdW1wTWVudSh0aGlzKTsgc3VnZ2VzdGlvbnNlYXJjaF9kcm9wZG93bl9jaG9pY2UodGhpcyk7Ij4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJhbGwiID5BbGw8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJ0dCIgPlRpdGxlczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9ImVwIiA+VFYgRXBpc29kZXM8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJubSIgPk5hbWVzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iY28iID5Db21wYW5pZXM8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJrdyIgPktleXdvcmRzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iY2giID5DaGFyYWN0ZXJzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0icXUiID5RdW90ZXM8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJiaSIgPkJpb3M8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJwbCIgPlBsb3RzPC9vcHRpb24+CiAgICAgIDwvc2VsZWN0PgogICAgPC9kaXY+CiAgICA8ZGl2IGlkPSJuYXZiYXItc3VnZ2VzdGlvbnNlYXJjaCI+PC9kaXY+CiAgPC9kaXY+CjwvZm9ybT4KPGRpdiBpZD0ibWVnYU1lbnUiPgogICAgPHVsIGlkPSJjb25zdW1lcl9tYWluX25hdiIgY2xhc3M9Im1haW5fbmF2Ij4KICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdlRpdGxlTWVudSI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJuYXZDYXRlZ29yeSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbW92aWVzLWluLXRoZWF0ZXJzLz9yZWZfPW52X3RwX2ludGhfMSIKPk1vdmllczwvYT4sCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvY2hhcnQvdG9wdHYvP3JlZl89bnZfdHBfdHYyNTBfMiIKPlRWPC9hPjxiciAvPgogICAgICAgICAgICAgICAgJiA8YSBocmVmPSIvc2hvd3RpbWVzLz9yZWZfPW52X3RwX3NoXzMiCj5TaG93dGltZXM8L2E+PC9wPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG93bkFycm93Ij48L3NwYW4+CiAgICAgICAgICAgIDxkaXYgaWQ9Im5hdk1lbnUxIiBjbGFzcz0ic3ViX25hdiI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ0aXRsZUFkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5NT1ZJRVM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9tb3ZpZXMtaW4tdGhlYXRlcnMvP3JlZl89bnZfbXZfaW50aF8xIgo+SW4gVGhlYXRlcnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zaG93dGltZXMvP3JlZl89bnZfbXZfc2hfMiIKPlNob3d0aW1lcyAmIFRpY2tldHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90cmFpbGVycy8/cmVmXz1udl9tdl90cl8zIgo+TGF0ZXN0IFRyYWlsZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbW92aWVzLWNvbWluZy1zb29uLz9yZWZfPW52X212X2NzXzQiCj5Db21pbmcgU29vbjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NhbGVuZGFyLz9yZWZfPW52X212X2NhbF81Igo+UmVsZWFzZSBDYWxlbmRhcjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NoYXJ0L3RvcD9yZWZfPW52X212XzI1MF82Igo+VG9wIFJhdGVkIE1vdmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2luZGlhL3RvcC1yYXRlZC1pbmRpYW4tbW92aWVzP3JlZl89bnZfbXZfMjUwX2luXzciCj5Ub3AgUmF0ZWQgSW5kaWFuIE1vdmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NoYXJ0L21vdmllbWV0ZXI/cmVmXz1udl9tdl9tcG1fOCIKPk1vc3QgUG9wdWxhciBNb3ZpZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDxoNT5DSEFSVFMgJiBUUkVORFM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC8/cmVmXz1udl9jaF9jaHRfMSIKPkJveCBPZmZpY2U8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/Y291bnQ9MTAwJmdyb3Vwcz1vc2Nhcl9iZXN0X3BpY3R1cmVfd2lubmVycyZzb3J0PXllYXIsZGVzYyZyZWZfPW52X2NoX29zY18yIgo+T3NjYXIgV2lubmVyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dlbnJlLz9yZWZfPW52X2NoX2dyXzMiCj5Nb3N0IFBvcHVsYXIgYnkgR2VucmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+VFYgJiBWSURFTzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3R2Lz9yZWZfPW52X3R2dl90dl8xIgo+SU1EYiBUVjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3R2Z3JpZC8/cmVmXz1udl90dnZfbHNfMiIKPk9uIFRvbmlnaHQ8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC90b3B0di8/cmVmXz1udl90dnZfMjUwXzMiCj5Ub3AgUmF0ZWQgVFYgU2hvd3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC90dm1ldGVyP3JlZl89bnZfdHZ2X21wdHZfNCIKPk1vc3QgUG9wdWxhciBUViBTaG93czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ZlYXR1cmUvd2F0Y2gtbm93LW9uLWFtYXpvbi8/cmVmXz1udl90dnZfd25fNSIKPldhdGNoIE5vdyBvbiBBbWF6b248L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZWN0aW9ucy9kdmQvP3JlZl89bnZfdHZ2X2R2ZF82Igo+RFZEICYgQmx1LVJheTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PlNQRUNJQUwgRkVBVFVSRVM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hbWF6b24tb3JpZ2luYWxzLz9yZWZfPW52X3NmX2Ftc18xIgo+QW1hem9uIE9yaWdpbmFsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3N0cmVhbWluZy8/cmVmXz1udl9zZl9zdF8yIgo+U3RyZWFtaW5nPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29taWMtY29uLz9yZWZfPW52X3NmX2Njbl8zIgo+Q29taWMtQ29uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaW1kYnBpY2tzLz9yZWZfPW52X3NmX3BpY2tzXzQiCj5JTURiIFBpY2tzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc3VwZXJoZXJvZXMvP3JlZl89bnZfc2Zfc3Vwcl81Igo+U3VwZXJoZXJvZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjc3NfbmF2X2l0ZW0iIGlkPSJuYXZOYW1lTWVudSI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJuYXZDYXRlZ29yeSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvc2VhcmNoL25hbWU/Z2VuZGVyPW1hbGUsZmVtYWxlJnJlZl89bnZfdHBfY2VsXzEiCj5DZWxlYnM8L2E+LAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2F3YXJkcy1jZW50cmFsLz9yZWZfPW52X3RwX2F3cmRfMiIKPkV2ZW50czwvYT48YnIgLz4KICAgICAgICAgICAgICAgICYgPGEgaHJlZj0iL2dhbGxlcnkvcmc3ODQ5NjQzNTI/cmVmXz1udl90cF9waF8zIgo+UGhvdG9zPC9hPjwvcD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2IGlkPSJuYXZNZW51MiIgY2xhc3M9InN1Yl9uYXYiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0ibmFtZUFkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5DRUxFQlM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2VhcmNoL25hbWU/YmlydGhfbW9udGhkYXk9MDgtMDEmcmVmaW5lPWJpcnRoX21vbnRoZGF5JnJlZl89bnZfY2VsX2Jybl8xIgo+Qm9ybiBUb2RheTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvY2VsZWJyaXR5P3JlZl89bnZfY2VsX253XzIiCj5DZWxlYnJpdHkgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC9uYW1lP2dlbmRlcj1tYWxlLGZlbWFsZSZyZWZfPW52X2NlbF9tXzMiCj5Nb3N0IFBvcHVsYXIgQ2VsZWJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8aDU+UEhPVE9TPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZ2FsbGVyeS9yZzE4NTk4MjAyODg/cmVmXz1udl9waF9sc18xIgo+TGF0ZXN0IFN0aWxsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dhbGxlcnkvcmcxNjI0OTM5MjY0P3JlZl89bnZfcGhfbHBfMiIKPkxhdGVzdCBQb3N0ZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZ2FsbGVyeS9yZzE2NDE3MTY0ODA/cmVmXz1udl9waF9sdl8zIgo+UGhvdG9zIFdlIExvdmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+RVZFTlRTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYXdhcmRzLWNlbnRyYWwvP3JlZl89bnZfZXZfYXdyZF8xIgo+QXdhcmRzIENlbnRyYWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9vc2NhcnMvP3JlZl89bnZfZXZfYWNkXzIiCj5Pc2NhcnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9nb2xkZW4tZ2xvYmVzLz9yZWZfPW52X2V2X2dnXzMiCj5Hb2xkZW4gR2xvYmVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc3VuZGFuY2UvP3JlZl89bnZfZXZfc3VuXzQiCj5TdW5kYW5jZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Nhbm5lcy8/cmVmXz1udl9ldl9jYW5fNSIKPkNhbm5lczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NvbWljLWNvbi8/cmVmXz1udl9ldl9jb21pY182Igo+Q29taWMtQ29uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZW1teXMvP3JlZl89bnZfZXZfcnRlXzciCj5FbW15IEF3YXJkczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ZlbmljZS8/cmVmXz1udl9ldl92ZW5pY2VfOCIKPlZlbmljZSBGaWxtIEZlc3RpdmFsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdG9yb250by8/cmVmXz1udl9ldl90ZmZfOSIKPlRvcm9udG8gRmlsbSBGZXN0aXZhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Zlc3RpdmFsLWNlbnRyYWwvP3JlZl89bnZfZXZfZmNfMTAiCj5GZXN0aXZhbCBDZW50cmFsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZmVzdGl2YWwtY2VudHJhbC90cmliZWNhP3JlZl89bnZfZXZfdGZmXzExIgo+VHJpYmVjYTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2V2ZW50L2FsbC8/cmVmXz1udl9ldl9hbGxfMTIiCj5BbGwgRXZlbnRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2TmV3c01lbnUiPgogICAgICAgICAgICA8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL25ld3MvdG9wP3JlZl89bnZfdHBfbndfMSIKPk5ld3M8L2E+ICY8YnIgLz4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jem9uZS8/cmVmXz1udl9jbV9jel8yIgo+Q29tbXVuaXR5PC9hPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkb3duQXJyb3ciPjwvc3Bhbj4KICAgICAgICAgICAgPGRpdiBpZD0ibmF2TWVudTMiIGNsYXNzPSJzdWJfbmF2Ij4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImxhdGVzdEhlYWRsaW5lcyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5MQVRFU1QgSEVBRExJTkVTPC9oNT4KICAgIDx1bD4KICAgICAgICAgICAgICAgIDxsaSBpdGVtcHJvcD0iaGVhZGxpbmUiPgo8YSBocmVmPSIvbmV3cy9uaTYxMzYyMzUxLz9yZWZfPW52X253X3RuXzEiCj4g4oCYVGhlIERpc2FzdGVyIEFydGlzdCzigJkg4oCYU3VwZXItU2l6ZSBNZSAy4oCZIEFkZGVkIHRvIFRvcm9udG8gRmlsbSBGZXN0aXZhbCBMaW5ldXAKPC9hPjxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGltZSI+MyBob3VycyBhZ288L3NwYW4+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGl0ZW1wcm9wPSJoZWFkbGluZSI+CjxhIGhyZWY9Ii9uZXdzL25pNjEzNjA3MDQvP3JlZl89bnZfbndfdG5fMiIKPiBGaXJzdCBMb29rOiBDYXJvbCBCdXJuZXR0J3MgTmV3IE5ldGZsaXggU2hvdyBBIExpdHRsZSBIZWxwIHRvIExhdW5jaCBpbiAyMDE4CjwvYT48YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpbWUiPjE3IGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgaXRlbXByb3A9ImhlYWRsaW5lIj4KPGEgaHJlZj0iL25ld3Mvbmk2MTM2MDI0NC8/cmVmXz1udl9ud190bl8zIgo+IDUwIENlbnQgVGhyZWF0ZW5zIHRvIFRha2Ug4oCYUG93ZXLigJkgQXdheSBGcm9tIFN0YXJ6IGluIEhlYXRlZCBJbnN0YWdyYW0gUG9zdAo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aW1lIj4yMCBob3VycyBhZ288L3NwYW4+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGg1Pk5FV1M8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzL3RvcD9yZWZfPW52X253X3RwXzEiCj5Ub3AgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvbW92aWU/cmVmXz1udl9ud19tdl8yIgo+TW92aWUgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvdHY/cmVmXz1udl9ud190dl8zIgo+VFYgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvY2VsZWJyaXR5P3JlZl89bnZfbndfY2VsXzQiCj5DZWxlYnJpdHkgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvaW5kaWU/cmVmXz1udl9ud19pbmRfNSIKPkluZGllIE5ld3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDxoNT5DT01NVU5JVFk8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jem9uZS8/cmVmXz1udl9jbV9jel8yIgo+Q29udHJpYnV0b3IgWm9uZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3BvbGwvP3JlZl89bnZfY21fcGxfMyIKPlBvbGxzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2V2F0Y2hsaXN0TWVudSI+CjxwIGNsYXNzPSJuYXZDYXRlZ29yeSBzaW5nbGVMaW5lIHdhdGNobGlzdCI+CiAgICA8YSBocmVmPSIvbGlzdC93YXRjaGxpc3Q/cmVmXz1udl93bF9hbGxfMCIKPldhdGNobGlzdDwvYT4KPC9wPgo8c3BhbiBjbGFzcz0iZG93bkFycm93Ij48L3NwYW4+CjxkaXYgaWQ9Im5hdk1lbnU0IiBjbGFzcz0ic3ViX25hdiI+CiAgICA8aDU+CiAgICAgICAgICAgIFlPVVIgV0FUQ0hMSVNUCiAgICA8L2g1PgogICAgPHVsIGlkPSJuYXZXYXRjaGxpc3QiPgogICAgPC91bD4KICAgIDxzY3JpcHQ+CiAgICBpZiAoISgnaW1kYicgaW4gd2luZG93KSkgeyB3aW5kb3cuaW1kYiA9IHt9OyB9CiAgICB3aW5kb3cuaW1kYi53YXRjaGxpc3RUZWFzZXJEYXRhID0gWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9saXN0L3dhdGNobGlzdCIsCiAgICAgICAgICAgICAgICBzcmMgOiAiaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDFfbG9nZ2VkX291dC0xNjcwMDQ2MzM3Ll9DQjUyMjczNjU1Nl8uanBnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9zZWFyY2gvdGl0bGU/Y291bnQ9MTAwJnRpdGxlX3R5cGU9ZmVhdHVyZSx0dl9zZXJpZXMiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9uYXZiYXIvd2F0Y2hsaXN0X3Nsb3QyX3BvcHVsYXItNDA5MDc1NzE5Ny5fQ0I1MjI3MzY1NjJfLmpwZyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaHJlZiA6ICIvY2hhcnQvdG9wIiwKICAgICAgICAgICAgICAgIHNyYyA6ICJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbmF2YmFyL3dhdGNobGlzdF9zbG90M190b3AyNTAtNTc1Nzk5OTY2Ll9DQjUyMjczNjU5Nl8uanBnIgogICAgICAgICAgICAgICAgfQogICAgXTsKICAgIDwvc2NyaXB0Pgo8L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgPC91bD4KPHNjcmlwdD4KaWYgKCEoJ2ltZGInIGluIHdpbmRvdykpIHsgd2luZG93LmltZGIgPSB7fTsgfQp3aW5kb3cuaW1kYi5uYXZiYXJBZFNsb3RzID0gewogICAgdGl0bGVBZCA6IHsKICAgIH0sCiAgICBuYW1lQWQgOiB7CiAgICB9Cn0KPC9zY3JpcHQ+CjwvZGl2Pgo8ZGl2IGlkPSJuYl9leHRyYSI+CiAgICA8dWwgaWQ9Im5iX2V4dHJhX25hdiIgY2xhc3M9Im1haW5fbmF2Ij4KICAgICAgICA8bGkgY2xhc3M9ImNzc19uYXZfaXRlbSIgaWQ9Im5hdlByb01lbnUiPgogICAgICAgICAgICA8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkiPgo8YSBocmVmPSJodHRwOi8vcHJvLmltZGIuY29tL3NpZ251cC9pbmRleC5odG1sP3JmPWNvbnNfbmJfaG0mcmVmXz1jb25zX25iX2htIgo+IDxpbWcgYWx0PSJJTURiUHJvIE1lbnUiIHNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX2xvZ29fbmItMzAwMDQ3MzgyNi5fQ0I1MzA3MTM0NzBfLnBuZyIgLz4KPC9hPiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2IGlkPSJuYXZNZW51UHJvIiBjbGFzcz0iaW1kYi1wcm8tYWQgc3ViX25hdiI+CjxhIGhyZWY9Imh0dHA6Ly9wcm8uaW1kYi5jb20vc2lnbnVwL2luZGV4Lmh0bWw/cmY9Y29uc19uYl9obSZyZWZfPWNvbnNfbmJfaG0iCmNsYXNzPSJpbWRwLXByby1hZF9fbGluayIgPiA8ZGl2IGlkPSJwcm9BZCIgY2xhc3M9ImltZGItcHJvLWFkX19pbWFnZSI+CjxpbWcgYWx0PSJHbyB0byBJTURiUHJvIiBoZWlnaHQ9IjE4MCIgd2lkdGg9IjE3NCIKc3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbmF2YmFyL2ltZGJwcm9fbWVudV91c2VyLTQwOTE5MzI2MTguX0NCNTMwNzEzNDQzXy5wbmciCnNyY3NldD0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX21lbnVfdXNlci00MDkxOTMyNjE4Ll9DQjUzMDcxMzQ0M18ucG5nIDF4LApodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbmF2YmFyL2ltZGJwcm9fbWVudV91c2VyXzJ4LTIwNzQzMTg5NDcuX0NCNTMwNzEzNDQxXy5wbmcgMngiIC8+CjwvZGl2Pgo8c2VjdGlvbiBjbGFzcz0iaW1kYi1wcm8tYWRfX2NvbnRlbnQiPgo8aDEgY2xhc3M9ImltZGItcHJvLWFkX190aXRsZSI+VGhlIGxlYWRpbmcgaW5mb3JtYXRpb24gcmVzb3VyY2UgZm9yIHRoZSBlbnRlcnRhaW5tZW50IGluZHVzdHJ5PC9oMT4KPHAgY2xhc3M9ImltZGItcHJvLWFkX19saW5lIj5GaW5kIGluZHVzdHJ5IGNvbnRhY3RzICZhbXA7IHRhbGVudCByZXByZXNlbnRhdGlvbjwvcD4KPHAgY2xhc3M9ImltZGItcHJvLWFkX19saW5lIj5NYW5hZ2UgeW91ciBwaG90b3MsIGNyZWRpdHMsICZhbXA7IG1vcmU8L3A+CjxwIGNsYXNzPSJpbWRiLXByby1hZF9fbGluZSI+U2hvd2Nhc2UgeW91cnNlbGYgb24gSU1EYiAmYW1wOyBBbWF6b248L3A+CjxzcGFuIHJvbGU9ImJ1dHRvbiIgY2xhc3M9ImltZGItcHJvLWFkX19idXR0b24iPkdvIHRvIElNRGJQcm88L2E+Cjwvc2VjdGlvbj4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj48L2xpPgogICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iL2hlbHAvP3JlZl89bmJfaGxwIgo+SGVscDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic29jaWFsIj4KCiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX2ZiJnRva2VuPUJDWWhQUjYtRklKN2xpTWRIS3Y5eWZwb1N4ZzRhdHBvUW1ubEpJZVA5anJvcXl2ZVN2V0p4a2pUUnB1TEI3Qk1lU0s2MU9jdDJFVDclMEQlMEFaM2phSG11dTJ0NGp1dWZON1o3Mm5Uc3J3cmJxRWhuakU4UEFaQl9sRy1yQUFXcDdudGNPOE15emdFTG1fTElaTkNVNDVQWDRuWHVGJTBEJTBBMlBhS3YzOXhwQ0NRTkF2UVc3YThoMlR3Znk5bkdXMy1LdUFJU2RPRkF1STI3UUFSdTBqYndqbk1xam53eHZjWWhBJTBEJTBBJnJlZl89dHRfbnZfZm9sX2ZiIgp0aXRsZT0iRm9sbG93IElNRGIgb24gRmFjZWJvb2siIHRhcmdldD0iX2JsYW5rIiBpdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9ImRlc2t0b3Atc3ByaXRlIGZvbGxvdy1mYWNlYm9vayIgPjwvc3Bhbj4KPC9hPgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZvbF90dyZ0b2tlbj1CQ1lweGhETVF0aktYaDdJOEp3RU5oSmNsbThTNS1YUWd5WlFfYmNhdy1yZDV4TlhNOWNjcnVkTmVEeHZLZVVYVl9Ralk4b0duV2wwJTBEJTBBUWtDRTExVmg4dERKWU5SWDJIVXlJclN1dlJhREdza2xKZ2ZvRE05MV9LVlZoR05nVkcwOGljT0ExLVo0d2xJX0xrNVU5R1ZjVVMybiUwRCUwQUMzVzRoZWJxaUY2MDhYbXFPRE11Q2dyckdKZzRKZ1JBZFFucUJEclBFR2M5VHcxcXh0Yll5QVNJQzd0MDl4WkxlZyUwRCUwQSZyZWZfPXR0X252X2ZvbF90dyIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIFR3aXR0ZXIiIHRhcmdldD0iX2JsYW5rIiBpdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9ImRlc2t0b3Atc3ByaXRlIGZvbGxvdy10d2l0dGVyIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX2luc3QmdG9rZW49QkNZb3RIYXpMNnNWMjJTVmNmMlVMb1hPSWxGTTVSS3VrWW9pT1VZRmtLdlA4dU5iU24yN0JGdl9qeDZXSm9hd3IxVEJrS21UT29PRCUwRCUwQUVrSUpPVkp2eW1STkJ0Y3lzRjFIakloNmN5MWxGRG0xdEZzM3lpamNBOWxiZk40MjdVTWtZTEhzOEtqcmhsVkF3QXdVYUo3SGFGN3UlMEQlMEFJRkEtR1U3LTJhRmhkWXRuMTRQZE9maWlXc3hJNVB4OUtBQ3I4QU1Tc1RhdC1Id0kzOGJPcnFIR3Z0bVJjNHVtT0ElMEQlMEEmcmVmXz10dF9udl9mb2xfaW5zdCIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEluc3RhZ3JhbSIgdGFyZ2V0PSJfYmxhbmsiIGl0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LWluc3RhZ3JhbSIgPjwvc3Bhbj4KPC9hPgogICAgICAgIDwvbGk+CiAgICA8L3VsPgo8L2Rpdj4KPGRpdiBpZD0ibmJfcGVyc29uYWwiPgogICAgPHVsIGlkPSJjb25zdW1lcl91c2VyX25hdiIgY2xhc3M9Im1haW5fbmF2Ij4KCiAgICAgICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9tZW51IG5vX2Fycm93IiBpZD0ibmF2VXNlck1lbnUiPgogICAgICAgICAgICA8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkgc2luZ2xlTGluZSI+CiAgICAgICAgICAgICAgICA8YSBpZD0iZmFjZWJvb2stc2lnbmluLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YyLjgvb2F1dGgvYXV0aG9yaXplP2NsaWVudF9pZD0xMjcwNTk5NjA2NzM4Mjkmc2NvcGU9ZW1haWwlMkN1c2VyX2Fib3V0X21lJTJDdXNlcl9iaXJ0aGRheSZzdGF0ZT1leUkwT1dVMll5STZJbVJoTWpraUxDSjFJam9pYUhSMGNITTZMeTkzZDNjdWFXMWtZaTVqYjIwdlAzSmxabDg5Ym5aZlptSmZiR2RwYmlJc0ltMWhiblZoYkV4cGJtc2lPaUptWVd4elpTSjkmcmVkaXJlY3RfdXJpPWh0dHBzJTNBJTJGJTJGd3d3LmltZGIuY29tJTJGcmVnaXN0cmF0aW9uJTJGZmFjZWJvb2toYW5kbGVyJTJGIiBjbGFzcz0ic2lnbmluLWJ1dHRvbiI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFjZWJvb2stbG9nbyI+PC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNpZ25pbi1mYWNlYm9vay10ZXh0Ij5TaWduIGluIHdpdGggRmFjZWJvb2s8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW1kYi5jb20vcmVnaXN0cmF0aW9uL3NpZ25pbj91PS90aXRsZS90dDAxMTg3MTUvJTNGcmVmXyUzRGZuX2FsX3R0XzEmcmVmXz1udl91c3JfbGdpbl8xIgpyZWw9ImxvZ2luIiBjbGFzcz0ic2lnbmluLW90aGVyLW9wdGlvbnMtdGV4dCIgaWQ9Im5ibG9naW4iID5PdGhlciBTaWduIGluIG9wdGlvbnM8L2E+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgPC9saT4KICAgIDwvdWw+CjwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBuYXZzdHJpcCAtLT4KCQoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IGluamVjdGVkX25hdnN0cmlwIC0tPgoJCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgibmUiKTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InBhZ2Vjb250ZW50IiBjbGFzcz0icGFnZWNvbnRlbnQiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvTW92aWUiPgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IGluamVjdGVkX2JpbGxib2FyZCAtLT4KCQoKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogbmF2Ym9hcmQgLS0+CgkKCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCjxkaXYgaWQ9ImNvbnRlbnQtMi13aWRlIiBjbGFzcz0iZmxhdGxhbmQiPgogICAgPGRpdiBpZD0ibWFpbl90b3AiIGNsYXNzPSJtYWluIj4KCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKCiAgICAKICAgIAogICAgCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZS1vdmVydmlldyI+CgoKICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlT3ZlcnZpZXdXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICAgIDxkaXYgaWQ9InRpdGxlLW92ZXJ2aWV3LXdpZGdldCIgY2xhc3M9Imhlcm9pYy1vdmVydmlldyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2VfYm94Ij4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9InN0YXItcmF0aW5ncy13aWRnZXQtZXJyb3IiIGNsYXNzPSJoaWRkZW4gZXJyb3IiPgogICAgICAgICAgICAgICAgICAgIDxoMj5UaGVyZSB3YXMgYW4gZXJyb3IgdHJ5aW5nIHRvIGxvYWQgeW91ciByYXRpbmcgZm9yIHRoaXMgdGl0bGUuPC9oMj4KICAgICAgICAgICAgICAgICAgICA8cD5Tb21lIHBhcnRzIG9mIHRoaXMgcGFnZSB3b24ndCB3b3JrIHByb3BlcnR5LiBQbGVhc2UgcmVsb2FkIG9yIHRyeSBsYXRlci48L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpdGFsIj4gICAgICAgICAgICAgICAgCiAgICAgIDxkaXYgaWQ9InF1aWNrbGlua3NCYXIiIGNsYXNzPSJzdWJuYXYiPgogIDxkaXYgaWQ9InF1aWNrbGlua3NNYWluU2VjdGlvbiI+CiAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvZnVsbGNyZWRpdHM/cmVmXz10dF9xbF8xIgpjbGFzcz0icXVpY2tsaW5rIiA+RlVMTCBDQVNUIEFORCBDUkVXPC9hPiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvdHJpdmlhP3JlZl89dHRfcWxfMiIKY2xhc3M9InF1aWNrbGluayIgPlRSSVZJQTwvYT4gPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3Jldmlld3M/cmVmXz10dF9xbF8zIgpjbGFzcz0icXVpY2tsaW5rIiA+VVNFUiBSRVZJRVdTPC9hPiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wcm8uaW1kYi5jb20vdGl0bGUvdHQwMTE4NzE1P3JmPWNvbnNfdHRfY29udGFjdCZyZWZfPWNvbnNfdHRfY29udGFjdCIKY2xhc3M9InF1aWNrbGluayIgPklNRGJQcm88L2E+CiAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJzaG93X21vcmUgcXVpY2tsaW5rIj4KICAgICAgICAgICAgTU9SRTxzcGFuIGNsYXNzPSJ0aXRsZU92ZXJ2aWV3U3ByaXRlIHF1aWNrbGlua3NBcnJvd1VwIj48L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJzaG93X2xlc3MgcXVpY2tsaW5rIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICBMRVNTPHNwYW4gY2xhc3M9InRpdGxlT3ZlcnZpZXdTcHJpdGUgcXVpY2tsaW5rc0Fycm93RG93biI+PC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICA8L2Rpdj4KCiAgICA8c3BhbiBjbGFzcz0idGl0bGVPdmVydmlld1NoYXJlQnV0dG9uIGxhdW5jaC1zaGFyZS1wb3BvdmVyIHF1aWNrbGluayI+U0hBUkU8L3NwYW4+CiAgICA8ZGl2IGlkPSJzaGFyZS1wb3BvdmVyIj4KICAgICAgICA8YSBjbGFzcz0iY2xvc2UtcG9wb3ZlciIgaHJlZj0iIyI+WDwvYT4KICAgICAgICA8aDQ+U2hhcmU8L2g0PgogICAgICAgIAogICAgCiAgICAKICAgIDxhIG9uY2xpY2s9IndpbmRvdy5vcGVuKCZxdW90O2h0dHA6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwJTNBJTJGJTJGd3d3LmltZGIuY29tJTJGdGl0bGUlMkZ0dDAxMTg3MTUlMkYlM0ZyZWZfJTNEZXh0X3Nocl9mYl90dCZxdW90OywgJ25ld1dpbmRvdycsICd3aWR0aD02MjYsaGVpZ2h0PTQzNicpOyByZXR1cm4gZmFsc2U7IgogICAgICAgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MDExODcxNSUyRiUzRnJlZl8lM0RleHRfc2hyX2ZiX3R0IgogICAgICAgdGl0bGU9IlNoYXJlIG9uIEZhY2Vib29rIgogICAgICAgY2xhc3M9ImZhY2Vib29rIgogICAgICAgdGFyZ2V0PSJfYmxhbmsiPjxkaXYgY2xhc3M9Im9wdGlvbiBmYWNlYm9vayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGVQYWdlU3ByaXRlIHNoYXJlX2ZhY2Vib29rIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PkZhY2Vib29rPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwvYT4KICAgIAogICAgCiAgICA8YSBvbmNsaWNrPSJ3aW5kb3cub3BlbigmcXVvdDtodHRwOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9VGhlJTIwQmlnJTIwTGVib3dza2klMjAoMTQlMjBNYXklMjAxOTk4JTIwKE5ldGhlcmxhbmRzKSklMjAtJTIwaW1kYi5jb20lMkZ0aXRsZSUyRnR0MDExODcxNSUyRiUzRnJlZl8lM0RleHRfc2hyX3R3X3R0JnF1b3Q7LCAnbmV3V2luZG93JywgJ3dpZHRoPTgxNSxoZWlnaHQ9NDM2Jyk7IHJldHVybiBmYWxzZTsiCiAgICAgICBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9VGhlJTIwQmlnJTIwTGVib3dza2klMjAoMTQlMjBNYXklMjAxOTk4JTIwKE5ldGhlcmxhbmRzKSklMjAtJTIwaW1kYi5jb20lMkZ0aXRsZSUyRnR0MDExODcxNSUyRiUzRnJlZl8lM0RleHRfc2hyX3R3X3R0IgogICAgICAgdGl0bGU9IlNoYXJlIG9uIFR3aXR0ZXIiCiAgICAgICBjbGFzcz0idHdpdHRlciIKICAgICAgIHRhcmdldD0iX2JsYW5rIj48ZGl2IGNsYXNzPSJvcHRpb24gdHdpdHRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGVQYWdlU3ByaXRlIHNoYXJlX3R3aXR0ZXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+VHdpdHRlcjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2E+CiAgICA8YSBocmVmPSJtYWlsdG86P3N1YmplY3Q9SU1EYiUzQSUyMFRoZSUyMEJpZyUyMExlYm93c2tpJTIwKDE0JTIwTWF5JTIwMTk5OCUyMChOZXRoZXJsYW5kcykpJmJvZHk9SU1EYiUzQSUyMFRoZSUyMEJpZyUyMExlYm93c2tpJTIwKDE0JTIwTWF5JTIwMTk5OCUyMChOZXRoZXJsYW5kcykpJTBBJTI2cXVvdCUzQlRoZSUyMER1ZGUlMjZxdW90JTNCJTIwTGVib3dza2klMkMlMjBtaXN0YWtlbiUyMGZvciUyMGElMjBtaWxsaW9uYWlyZSUyMExlYm93c2tpJTJDJTIwc2Vla3MlMjByZXN0aXR1dGlvbiUyMGZvciUyMGhpcyUyMHJ1aW5lZCUyMHJ1ZyUyMGFuZCUyMGVubGlzdHMlMjBoaXMlMjBib3dsaW5nJTIwYnVkZGllcyUyMHRvJTIwaGVscCUyMGdldCUyMGl0LiUwQWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MDExODcxNSUyRiUzRnJlZl8lM0RleHRfc2hyX2VtbF90dCIgCiAgICAgICB0aXRsZT0iU2hhcmUgYnkgZS1tYWlsIgogICAgICAgY2xhc3M9IiI+PGRpdiBjbGFzcz0nb3B0aW9uIGVtYWlsJz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ndGl0bGVQYWdlU3ByaXRlIHNoYXJlX2VtYWlsJz48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGRpdj5FLW1haWw8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2E+CiAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Im9wZW4tY2hlY2tpbi1wb3BvdmVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJvcHRpb24gY2hlY2tpbiI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZVBhZ2VTcHJpdGUgc2hhcmVfY2hlY2tpbiI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2PkNoZWNrIGluPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgPC9hPiAgICAgCiAgICAgICAgICAgIAogICAgPC9kaXY+CiAgICAKICAgICAgICA8ZGl2IGlkPSJzaGFyZS1jaGVja2luIj4KPGRpdiBjbGFzcz0iYWRkX3RvX2NoZWNraW5zIiBkYXRhLWNvbnN0PSJ0dDAxMTg3MTUiIGRhdGEtbGNuPSJ0aXRsZS1tYWluZGV0YWlscyI+CjxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPjxhIG9uY2xpY2s9JycgY2xhc3M9ImJ0bjIgbGFyZ2UgYnRuMl90ZXh0X29uIGRpc2FibGVkIGNoZWNraW5zX2FjdGlvbl9idG4iPjxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPjxzcGFuIGNsYXNzPSJidG4yX3RleHQiPkNoZWNrIGluPC9zcGFuPjwvYT48L3NwYW4+ICAgIDxkaXYgY2xhc3M9InBvcHVwIGNoZWNraW4tZGlhbG9nIj4KICAgICAgICA8YSBjbGFzcz0ic21hbGwgZGlzYWJsZWQgY2xvc2UgYnRuIj5YPC9hPgogICAgICAgIDxzcGFuIGNsYXNzPSJiZXRhIj5CZXRhPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+SSdtIFdhdGNoaW5nIFRoaXMhPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9ImJvZHkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvIj5LZWVwIHRyYWNrIG9mIGV2ZXJ5dGhpbmcgeW91IHdhdGNoOyB0ZWxsIHlvdXIgZnJpZW5kcy4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsIG1lc3NhZ2VfYm94Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiBlcnJvciI+PGgyPkVycm9yPC9oMj4gUGxlYXNlIHRyeSBhZ2FpbiE8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiBzdWNjZXNzIj48aDI+QWRkZWQgdG8gWW91ciBDaGVjay1JbnMuPC9oMj4gPGEgaHJlZj0iL2xpc3QvY2hlY2tpbnMiPlZpZXc8L2E+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8dGV4dGFyZWEgZGF0YS1tc2c9IkVudGVyIGEgY29tbWVudC4uLiI+PC90ZXh0YXJlYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmUiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ibGFyZ2UgcHJpbWFyeSBidG4iPjxzcGFuPkNoZWNrIGluPC9zcGFuPjwvYnV0dG9uPgo8IS0tCiAgICAgICAgICAgICAgICAgICAgQ2hlY2staW5zIGFyZSBtb3JlIGZ1biB3aGVuPGJyPgogICAgICAgICAgICAgICAgICAgIHlvdSA8YSBocmVmPSIvcmVnaXN0ZXIvc2hhcmluZyI+ZW5hYmxlIEZhY2Vib29rIHNoYXJpbmc8L2E+IQotLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iZGEyOSI+CjwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbiIgaWQ9ImZ1bGxfc3VibmF2IiBzdHlsZT0iZGlzcGxheTpub25lIj4gICAgICAgICAgIAogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uQ29sdW1uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5ERVRBSUxTPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvZnVsbGNyZWRpdHM/cmVmXz10dF9xbF9kdF8xIgpjbGFzcz0icXVpY2tsaW5rIiA+RnVsbCBDYXN0IGFuZCBDcmV3PC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9yZWxlYXNlaW5mbz9yZWZfPXR0X3FsX2R0XzIiCmNsYXNzPSJxdWlja2xpbmsiID5SZWxlYXNlIERhdGVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9vZmZpY2lhbHNpdGVzP3JlZl89dHRfcWxfZHRfMyIKY2xhc3M9InF1aWNrbGluayBxdWlja2xpbmtHcmF5IiA+T2ZmaWNpYWwgU2l0ZXM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2J1c2luZXNzP3JlZl89dHRfcWxfZHRfNCIKY2xhc3M9InF1aWNrbGluayIgPkJveCBPZmZpY2UvQnVzaW5lc3M8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2NvbXBhbnljcmVkaXRzP3JlZl89dHRfcWxfZHRfNSIKY2xhc3M9InF1aWNrbGluayIgPkNvbXBhbnkgQ3JlZGl0czwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvbG9jYXRpb25zP3JlZl89dHRfcWxfZHRfNiIKY2xhc3M9InF1aWNrbGluayIgPkZpbG1pbmcgTG9jYXRpb25zPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS90ZWNobmljYWw/cmVmXz10dF9xbF9kdF83IgpjbGFzcz0icXVpY2tsaW5rIiA+VGVjaG5pY2FsIFNwZWNzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9saXRlcmF0dXJlP3JlZl89dHRfcWxfZHRfOCIKY2xhc3M9InF1aWNrbGluayIgPkxpdGVyYXR1cmU8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uQ29sdW1uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5TVE9SWUxJTkU8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS90YWdsaW5lcz9yZWZfPXR0X3FsX3N0cnlfMSIKY2xhc3M9InF1aWNrbGluayIgPlRhZ2xpbmVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9wbG90c3VtbWFyeT9yZWZfPXR0X3FsX3N0cnlfMiIKY2xhc3M9InF1aWNrbGluayIgPlBsb3QgU3VtbWFyeTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvc3lub3BzaXM/cmVmXz10dF9xbF9zdHJ5XzMiCmNsYXNzPSJxdWlja2xpbmsiID5TeW5vcHNpczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUva2V5d29yZHM/cmVmXz10dF9xbF9zdHJ5XzQiCmNsYXNzPSJxdWlja2xpbmsiID5QbG90IEtleXdvcmRzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9wYXJlbnRhbGd1aWRlP3JlZl89dHRfcWxfc3RyeV81IgpjbGFzcz0icXVpY2tsaW5rIiA+UGFyZW50cyBHdWlkZTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5SRUxBVEVEIElURU1TPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvbmV3cz9yZWZfPXR0X3FsX3JlbF8xIgpjbGFzcz0icXVpY2tsaW5rIiA+TmV3c0Rlc2s8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2V4dGVybmFsc2l0ZXM/cmVmXz10dF9xbF9yZWxfMiIKY2xhc3M9InF1aWNrbGluayIgPkV4dGVybmFsIFNpdGVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkNvbHVtbiI+CiAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtHcm91cCI+CiAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkhlYWRlciI+T1BJTklPTjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2F3YXJkcz9yZWZfPXR0X3FsX29wXzEiCmNsYXNzPSJxdWlja2xpbmsiID5Bd2FyZHM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2ZhcT9yZWZfPXR0X3FsX29wXzIiCmNsYXNzPSJxdWlja2xpbmsiID5GQVE8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3Jldmlld3M/cmVmXz10dF9xbF9vcF8zIgpjbGFzcz0icXVpY2tsaW5rIiA+VXNlciBSZXZpZXdzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9yYXRpbmdzP3JlZl89dHRfcWxfb3BfNCIKY2xhc3M9InF1aWNrbGluayIgPlVzZXIgUmF0aW5nczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvZXh0ZXJuYWxyZXZpZXdzP3JlZl89dHRfcWxfb3BfNSIKY2xhc3M9InF1aWNrbGluayIgPkV4dGVybmFsIFJldmlld3M8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2NyaXRpY3Jldmlld3M/cmVmXz10dF9xbF9vcF82IgpjbGFzcz0icXVpY2tsaW5rIiA+TWV0YWNyaXRpYyBSZXZpZXdzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rR3JvdXAiPgogICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25IZWFkZXIiPlBIT1RPICYgVklERU88L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9tZWRpYWluZGV4P3JlZl89dHRfcWxfcHZfMSIKY2xhc3M9InF1aWNrbGluayIgPlBob3RvIEdhbGxlcnk8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3ZpZGVvZ2FsbGVyeT9yZWZfPXR0X3FsX3B2XzIiCmNsYXNzPSJxdWlja2xpbmsiID5UcmFpbGVycyBhbmQgVmlkZW9zPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkNvbHVtbiI+CiAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtHcm91cCI+CiAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkhlYWRlciI+RElEIFlPVSBLTk9XPzwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3RyaXZpYT9yZWZfPXR0X3FsX3Rydl8xIgpjbGFzcz0icXVpY2tsaW5rIiA+VHJpdmlhPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9nb29mcz9yZWZfPXR0X3FsX3Rydl8yIgpjbGFzcz0icXVpY2tsaW5rIiA+R29vZnM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2NyYXp5Y3JlZGl0cz9yZWZfPXR0X3FsX3Rydl8zIgpjbGFzcz0icXVpY2tsaW5rIiA+Q3JhenkgQ3JlZGl0czwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvcXVvdGVzP3JlZl89dHRfcWxfdHJ2XzQiCmNsYXNzPSJxdWlja2xpbmsiID5RdW90ZXM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2FsdGVybmF0ZXZlcnNpb25zP3JlZl89dHRfcWxfdHJ2XzUiCmNsYXNzPSJxdWlja2xpbmsiID5BbHRlcm5hdGUgVmVyc2lvbnM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L21vdmllY29ubmVjdGlvbnM/cmVmXz10dF9xbF90cnZfNiIKY2xhc3M9InF1aWNrbGluayIgPkNvbm5lY3Rpb25zPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9zb3VuZHRyYWNrP3JlZl89dHRfcWxfdHJ2XzciCmNsYXNzPSJxdWlja2xpbmsiID5Tb3VuZHRyYWNrczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPC9kaXY+CiAgIDwvZGl2PgogICAgICA8L2Rpdj4gIAogICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpdGxlX2Jsb2NrIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZV9iYXJfd3JhcHBlciI+CgogICAgPGRpdiBjbGFzcz0icmF0aW5nc193cmFwcGVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWRiUmF0aW5nIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyYXRpbmdWYWx1ZSI+CjxzdHJvbmcgdGl0bGU9IjguMiBiYXNlZCBvbiA1ODUsMzgzIHVzZXIgcmF0aW5ncyI+PHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj44LjI8L3NwYW4+PC9zdHJvbmc+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiIGl0ZW1wcm9wPSJiZXN0UmF0aW5nIj4xMDwvc3Bhbj4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3JhdGluZ3M/cmVmXz10dF9vdl9ydCIKPjxzcGFuIGNsYXNzPSJzbWFsbCIgaXRlbXByb3A9InJhdGluZ0NvdW50Ij41ODUsMzgzPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW5JbXBvcnRhbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9InJldmlld0NvdW50Ij4xLDA1OSB1c2VyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9InJldmlld0NvdW50Ij4yNTMgY3JpdGljPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogIDxkaXYgaWQ9InN0YXItcmF0aW5nLXdpZGdldCIgY2xhc3M9InN0YXItcmF0aW5nLXdpZGdldCIgZGF0YS10Y29uc3Q9InR0MDExODcxNSIgZGF0YS1yYXRpbmc9IjAiIGRhdGEtdXNlcj0iIiBkYXRhLWF1dGg9IiIgZGF0YS10cmFja2luZy10YWc9InRpdGxlLW1haW5kZXRhaWxzIj4KICAgIDxkaXYgY2xhc3M9InN0YXItcmF0aW5nLWJ1dHRvbiI+CiAgICAgIDxidXR0b24+CiAgICAgICAgPHNwYW4gY2xhc3M9InN0YXItcmF0aW5nLXN0YXIgbm8tcmF0aW5nIj48L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGFyLXJhdGluZy10ZXh0Ij5SYXRlIFRoaXM8L3NwYW4+CiAgICAgIDwvYnV0dG9uPgogICAgPC9kaXY+CiAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InRpdGxlQmFyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJwcmltYXJ5X3JpYmJvbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpYmJvbml6ZSIgZGF0YS10Y29uc3Q9InR0MDExODcxNSIgZGF0YS1jYWxsZXItbmFtZT0idGl0bGUiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfZHJvcGRvd25fYnRuIiBkYXRhLXRjb25zdD0idHQwMTE4NzE1IiBkYXRhLXNpemU9ImxhcmdlIiBkYXRhLWNhbGxlci1uYW1lPSJ0aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2Ryb3Bkb3duX2xpc3QiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPjwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZV93cmFwcGVyIj4KPGgxIGl0ZW1wcm9wPSJuYW1lIiBjbGFzcz0iIj5UaGUgQmlnIExlYm93c2tpJm5ic3A7PHNwYW4gaWQ9InRpdGxlWWVhciI+KDxhIGhyZWY9Ii95ZWFyLzE5OTgvP3JlZl89dHRfb3ZfaW5mIgo+MTk5ODwvYT4pPC9zcGFuPiAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1YnRleHQiPgogICAgICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJjb250ZW50UmF0aW5nIiBjb250ZW50PSIxMiI+MTIKPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgPHRpbWUgaXRlbXByb3A9ImR1cmF0aW9uIiBkYXRldGltZT0iUFQxMTdNIj4KICAgICAgICAgICAgICAgICAgICAgICAgMWggNTdtaW4KICAgICAgICAgICAgICAgICAgICA8L3RpbWU+CjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KPGEgaHJlZj0iL2dlbnJlL0NvbWVkeT9yZWZfPXR0X292X2luZiIKPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImdlbnJlIj5Db21lZHk8L3NwYW4+PC9hPiwgCjxhIGhyZWY9Ii9nZW5yZS9DcmltZT9yZWZfPXR0X292X2luZiIKPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImdlbnJlIj5DcmltZTwvc3Bhbj48L2E+Cgo8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvcmVsZWFzZWluZm8/cmVmXz10dF9vdl9pbmYiCnRpdGxlPSJTZWUgbW9yZSByZWxlYXNlIGRhdGVzIiA+MTQgTWF5IDE5OTggKE5ldGhlcmxhbmRzKQo8bWV0YSBpdGVtcHJvcD0iZGF0ZVB1Ymxpc2hlZCIgY29udGVudD0iMTk5OC0wNS0xNCIgLz4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1pblBvc3RlcldpdGhQbG90U3VtbWFyeUhlaWdodCI+CiAgICA8ZGl2IGNsYXNzPSJwb3N0ZXIiPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L21lZGlhdmlld2VyL3JtMjk1MDg5NTM2MD9yZWZfPXR0X292X2kiCj4gPGltZyBhbHQ9IlRoZSBCaWcgTGVib3dza2kgUG9zdGVyIiB0aXRsZT0iVGhlIEJpZyBMZWJvd3NraSBQb3N0ZXIiCnNyYz0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJaVEZqTWpCaVl6SXROelU1WVMwME1qZGlMV0prT1RrdE5EUTNNVEUzWmpZMllUWTVYa0V5WGtGcWNHZGVRWFZ5TkRrM056VTJNVFFALl9WMV9VWDE4Ml9DUjAsMCwxODIsMjY4X0FMXy5qcGciCml0ZW1wcm9wPSJpbWFnZSIgLz4KPC9hPiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InBsb3Rfc3VtbWFyeV93cmFwcGVyIj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlUGxvdEFuZENyZWRpdFN1bW1hcnlXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPGRpdiBjbGFzcz0icGxvdF9zdW1tYXJ5IG1pblBsb3RIZWlnaHRXaXRoUG9zdGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeV90ZXh0IiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgICAgICZxdW90O1RoZSBEdWRlJnF1b3Q7IExlYm93c2tpLCBtaXN0YWtlbiBmb3IgYSBtaWxsaW9uYWlyZSBMZWJvd3NraSwgc2Vla3MgcmVzdGl0dXRpb24gZm9yIGhpcyBydWluZWQgcnVnIGFuZCBlbmxpc3RzIGhpcyBib3dsaW5nIGJ1ZGRpZXMgdG8gaGVscCBnZXQgaXQuCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPGRpdiBjbGFzcz0iY3JlZGl0X3N1bW1hcnlfaXRlbSI+CiAgICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPkRpcmVjdG9yczo8L2g0PgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iZGlyZWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAxMDU0P3JlZl89dHRfb3ZfZHIiCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkpvZWwgQ29lbjwvc3Bhbj48L2E+LCAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJkaXJlY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDEwNTM/cmVmXz10dF9vdl9kciIKaXRlbXByb3A9J3VybCc+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+RXRoYW4gQ29lbjwvc3Bhbj48L2E+ICh1bmNyZWRpdGVkKSAgICAgICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY3JlZGl0X3N1bW1hcnlfaXRlbSI+CiAgICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPldyaXRlcnM6PC9oND4KICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImNyZWF0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAxMDUzP3JlZl89dHRfb3Zfd3IiCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkV0aGFuIENvZW48L3NwYW4+PC9hPiwgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iY3JlYXRvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDEwNTQ/cmVmXz10dF9vdl93ciIKaXRlbXByb3A9J3VybCc+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+Sm9lbCBDb2VuPC9zcGFuPjwvYT4gICAgICAgICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNyZWRpdF9zdW1tYXJ5X2l0ZW0iPgogICAgICAgIDxoNCBjbGFzcz0iaW5saW5lIj5TdGFyczo8L2g0PgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iYWN0b3JzIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDMxMz9yZWZfPXR0X292X3N0X3NtIgppdGVtcHJvcD0ndXJsJz48c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5KZWZmIEJyaWRnZXM8L3NwYW4+PC9hPiwgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iYWN0b3JzIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDQyMj9yZWZfPXR0X292X3N0X3NtIgppdGVtcHJvcD0ndXJsJz48c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5Kb2huIEdvb2RtYW48L3NwYW4+PC9hPiwgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iYWN0b3JzIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDE5ND9yZWZfPXR0X292X3N0X3NtIgppdGVtcHJvcD0ndXJsJz48c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5KdWxpYW5uZSBNb29yZTwvc3Bhbj48L2E+ICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CjxhIGhyZWY9ImZ1bGxjcmVkaXRzP3JlZl89dHRfb3Zfc3Rfc20iCj5TZWUgZnVsbCBjYXN0ICYgY3JldzwvYT4mbmJzcDsmcmFxdW87CiAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVQbG90QW5kQ3JlZGl0U3VtbWFyeVdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVSZXZpZXdzQW5kUG9wdWxhcml0eVdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICAgIDxkaXYgY2xhc3M9InRpdGxlUmV2aWV3QmFyICI+ICAgICAgICAgICAKICAgIDxkaXYgY2xhc3M9InRpdGxlUmV2aWV3QmFySXRlbSI+CjxhIGhyZWY9ImNyaXRpY3Jldmlld3M/cmVmXz10dF9vdl9ydCIKPiA8ZGl2IGNsYXNzPSJtZXRhY3JpdGljU2NvcmUgc2NvcmVfZmF2b3JhYmxlIHRpdGxlUmV2aWV3QmFyU3ViSXRlbSI+CjxzcGFuPjY5PC9zcGFuPgo8L2Rpdj48L2E+ICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZVJldmlld0JhclN1Ykl0ZW0iPgogICAgICAgICAgICA8ZGl2PjxhIGhyZWY9ImNyaXRpY3Jldmlld3M/cmVmXz10dF9vdl9ydCIKPgpNZXRhc2NvcmUKPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2PjxzcGFuIGNsYXNzPSJzdWJUZXh0Ij4gCiAgICAgICAgICAgICAgIEZyb20gPGEgaHJlZj0iaHR0cDovL3d3dy5tZXRhY3JpdGljLmNvbSIKdGFyZ2V0PSdfYmxhbmsnPm1ldGFjcml0aWMuY29tPC9hPiAKICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgCiAgICA8ZGl2IGNsYXNzPSJ0aXRsZVJldmlld0Jhckl0ZW0gdGl0bGVSZXZpZXdiYXJJdGVtQm9yZGVyIj4KICAgICAgICA8ZGl2PgogICAgICAgIFJldmlld3MKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3ViVGV4dCI+CiAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJyZXZpZXdzP3JlZl89dHRfb3ZfcnQiCj4xLDA1OSB1c2VyPC9hPiAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3RUZXh0Ij58PC9zcGFuPgogICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iZXh0ZXJuYWxyZXZpZXdzP3JlZl89dHRfb3ZfcnQiCj4yNTMgY3JpdGljPC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXZpZGVyIj48L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJ0aXRsZVJldmlld0Jhckl0ZW0iPgogIDxkaXYgY2xhc3M9InRpdGxlT3ZlcnZpZXdTcHJpdGUgcG9wdWxhcml0eVRyZW5kVXAiPjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InRpdGxlUmV2aWV3QmFyU3ViSXRlbSI+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIFBvcHVsYXJpdHkKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3ViVGV4dCI+CiAgICAgICAgICAgICAgICAgICAgMjk5CiAgICAgICg8c3BhbiBjbGFzcz0idGl0bGVPdmVydmlld1Nwcml0ZSBwb3B1bGFyaXR5SW1hZ2VVcCI+PC9zcGFuPiA8c3BhbiBjbGFzcz0icG9wdWxhcml0eVVwT3JGbGF0Ij44Nzwvc3Bhbj4pCiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgPC9kaXY+ICAgICAgICAgICAgICAKICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlUmV2aWV3c0FuZFBvcHVsYXJpdHlXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgCiAgICAKICAgIAogICAgICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVPdmVydmlld1dpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICAgICAgICA8L2Rpdj4gCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImFmIik7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fYXRmX21haW4nKTsKICAgIH0KICA8L3NjcmlwdD4KCiAgICA8L2Rpdj4gCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImNmIik7CiAgICB9Cjwvc2NyaXB0PgoKCiAgICA8ZGl2IGlkPSJzaWRlYmFyIj4KCgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogdG9wX3JocyAtLT4KCQogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fYXRmX3NpZGViYXInKTsKICAgIH0KICA8L3NjcmlwdD4KCgogICAgCiAgICAKICAgICAgICA8YSBuYW1lPSJzbG90X3JpZ2h0LTEiPjwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJtaW5pLWFydGljbGUiPgogICAgICAgIAogICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5pZih0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKXt1ZXQoJ2JiJywnTmluamFXaWRnZXQnLHt3YjoxfSk7fTwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJhYl93aWRnZXQiPgogICAgICAgIAogICAgCgogICAgPGRpdiBjbGFzcz0iYWJfbmluamEiPgo8cCBjbGFzcz0iYmx1cmIiPjxhIGhyZWY9Ii9vZmZzaXRlLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MzE0ODAzNTAyMiZwZl9yZF9yPTFKUkQ2QUE1NEM5NTQyVFA5MDM5JnBmX3JkX3M9cmlnaHQtMSZwZl9yZF90PTE1MDIxJnBmX3JkX2k9dHQwMTE4NzE1JnBhZ2UtYWN0aW9uPW9mZnNpdGUtcXVhbHRyaWNzJnRva2VuPUJDWW9BTWN4aDFYSWlPTWFUV2tVMDJsM3Raa0U3TGNhX3dYQ3RSNzlhOTFheWJENHQyZ19jZ2dFOWxlQlFZeUU5b3o4NDJuV3NXNXklMEQlMEF2aXB0M3NueURBNEpYem5MbktkNHFvYmp3QS04U2EwdWRQaFJuY013ZkhwSkE4MEM2cm4zOW94QjJVZGNlSVhSVmRVQ3ZYbVJUU1I0JTBEJTBBOEREbm5HanY3VDRfMGozRVJBdGtfcEFlMXhwVTV1R0QtNVNiTlZTQ005ZldUeTJwcDJFZ28yNS15WGt3dUotUTRfNWdIVW1YWXlWdiUwRCUwQThoTDAyWUdpZkJ4Z2ducUF1LVpFYXdWRGVGYjVjdXVhJTBEJTBBJnJlZl89dHRfc2hfbGsxIj48Yj5GZWVkYmFjazo8L2I+IFBsZWFzZSB0YWtlIDUgbWludXRlcyB0byBwYXJ0aWNpcGF0ZSBpbiBvdXIgc2hvcnQgSU1EYiBzdXJ2ZXk8L2E+PC9wPiA8ZGl2IGNsYXNzPSJ3aWRnZXRfY29udGVudCBub19pbmxpbmVfYmx1cmIiPiA8ZGl2IGNsYXNzPSJ3aWRnZXRfbmVzdGVkIj4gPC9kaXY+IDwvZGl2PiAgICA8L2Rpdj4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zcGFuPgoKCgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICBpZih0eXBlb2YgdWV4ID09PSAnZnVuY3Rpb24nKXt1ZXgoJ2xkJywnTmluamFXaWRnZXQnLHt3YjoxfSk7fQogICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAKCgoKCiAgICAgICAgPC9kaXY+CiAgICAKCiAgICAKICAgIAogICAgCgoKCgogICAgCiAgICAKICAgICAgICA8YSBuYW1lPSJzbG90X3JpZ2h0LTMiPjwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJtaW5pLWFydGljbGUiPgogICAgICAgIAogICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5pZih0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKXt1ZXQoJ2JiJywnTmluamFXaWRnZXQnLHt3YjoxfSk7fTwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJhYl93aWRnZXQiPgogICAgICAgIAogICAgCgogICAgPGRpdiBjbGFzcz0iYWJfbmluamEiPgo8c3BhbiBjbGFzcz0id2lkZ2V0X2hlYWRlciI+IDxzcGFuIGNsYXNzPSJvbmVsaW5lIj4gPGEgaHJlZj0iL2ltZGJwaWNrcy8/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTMxNTM2Mjg2MDImcGZfcmRfcj0xSlJENkFBNTRDOTU0MlRQOTAzOSZwZl9yZF9zPXJpZ2h0LTMmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MDExODcxNSZyZWZfPXR0X3Brc19hdWcxN19yaHNfaGQiID4gPGgzPklNRGIgUGlja3M6IEF1Z3VzdDwvaDM+IDwvYT4gPC9zcGFuPiA8L3NwYW4+IDxkaXYgY2xhc3M9IndpZGdldF9jb250ZW50IG5vX2lubGluZV9ibHVyYiI+IDxkaXYgY2xhc3M9IndpZGdldF9uZXN0ZWQiPiA8ZGl2IGNsYXNzPSJuaW5qYV9pbWFnZV9wYWNrIj4gPGRpdiBjbGFzcz0ibmluamFfY2VudGVyIj4gPGRpdiBjbGFzcz0ibmluamFfaW1hZ2UgZmlyc3RfaW1hZ2UgbGFzdF9pbWFnZSIgc3R5bGU9IndpZHRoOjMwN3B4O2hlaWdodDphdXRvOyIgPiA8ZGl2IHN0eWxlPSJ3aWR0aDozMDdweDtoZWlnaHQ6YXV0bzttYXJnaW46MCBhdXRvOyI+IDxkaXYgY2xhc3M9IndpZGdldF9pbWFnZSI+IDxkaXYgY2xhc3M9ImltYWdlIj4gPGEgaHJlZj0iL2ltZGJwaWNrcy8/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTMxNTM2Mjg2MDImcGZfcmRfcj0xSlJENkFBNTRDOTU0MlRQOTAzOSZwZl9yZF9zPXJpZ2h0LTMmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MDExODcxNSZyZWZfPXR0X3Brc19hdWcxN19yaHNfaV8xIiA+IDxpbWcgaXRlbXByb3A9ImltYWdlIiBjbGFzcz0icHJpX2ltYWdlIiBzcmM9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRrNE5qYzVNVE15Tmw1Qk1sNUJhbkJuWGtGdFpUZ3dNVEk0TlRrMk1qSUAuX0NSNiwzLDEzNzAsMTAyN19VWDYxNF9VWTQ2MC5fU1kyMzBfU1gzMDdfQUxfLmpwZyIgLz4gPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxwIGNsYXNzPSJibHVyYiI+T2YgY291cnNlICI8YSBocmVmPSIvdGl0bGUvdHQ0MjMwMDc2Lz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MzE1MzYyODYwMiZwZl9yZF9yPTFKUkQ2QUE1NEM5NTQyVFA5MDM5JnBmX3JkX3M9cmlnaHQtMyZwZl9yZF90PTE1MDIxJnBmX3JkX2k9dHQwMTE4NzE1JnJlZl89dHRfcGtzX2F1ZzE3X3Joc19sazEiPlRoZSBEZWZlbmRlcnM8L2E+IiBpcyBvbiBvdXIgcmFkYXIgdGhpcyBtb250aC4gU2VlIHdoaWNoIG90aGVyIG1vdmllcyBhbmQgVFYgc2hvd3Mgd2UncmUgZXhjaXRlZCBhYm91dCB0aGlzIG1vbnRoLjwvcD4gPHAgY2xhc3M9InNlZW1vcmUiPjxhIGhyZWY9Ii9pbWRicGlja3MvP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0zMTUzNjI4NjAyJnBmX3JkX3I9MUpSRDZBQTU0Qzk1NDJUUDkwMzkmcGZfcmRfcz1yaWdodC0zJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDAxMTg3MTUmcmVmXz10dF9wa3NfYXVnMTdfcmhzX3NtIiBjbGFzcz0icG9zaXRpb25fYm90dG9tIHN1cHBsZW1lbnRhbCIgPlZpc2l0IElNRGIgUGlja3M8L2E+PC9wPiAgICA8L2Rpdj4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zcGFuPgoKCgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICBpZih0eXBlb2YgdWV4ID09PSAnZnVuY3Rpb24nKXt1ZXgoJ2xkJywnTmluamFXaWRnZXQnLHt3YjoxfSk7fQogICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAKCgoKCiAgICAgICAgPC9kaXY+CiAgICAKCiAgPGRpdiBjbGFzcz0iYXV4LWNvbnRlbnQtd2lkZ2V0LTIiPiAKICAgIDxkaXYgY2xhc3M9InNvY2lhbCI+ICAgICAKICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+aWYgKHVldCkgeyB1ZXQoJ2JiJywgJ2ZhY2Vib29rX2xpa2VfaWZyYW1lJywge3diOiAxfSk7IH08L3NjcmlwdD4KICA8ZGl2IGNsYXNzPSJzb2NpYWxfbmV0d29ya2luZ19saWtlIj4KICAgIDxpZnJhbWUKICAgICAgaWQ9ImlmcmFtZV9saWtlIgogICAgICBuYW1lPSJmYkxpa2VJRnJhbWVfMCIKICAgICAgY2xhc3M9InNvY2lhbC1pZnJhbWUiCiAgICAgIHNjcm9sbGluZz0ibm8iCiAgICAgIGZyYW1lYm9yZGVyPSIwIgogICAgICBhbGxvd1RyYW5zcGFyZW5jeT0iYWxsb3dUcmFuc3BhcmVuY3kiCiAgICAgIHJlZj0iaHR0cDovL3d3dy5pbWRiLmNvbS90aXRsZS90dDAxMTg3MTUvIgogICAgICB3aWR0aD0yODAKICAgICAgaGVpZ2h0PTY1PjwvaWZyYW1lPgogIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CgoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiByaHNfY29ybmVyc3RvbmUgLS0+CgkKCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJSZWxhdGVkTmV3c1dpZGdldFJIUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1JlbGF0ZWROZXdzV2lkZ2V0UkhTX3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KCiAgICAgIDxkaXYgY2xhc3M9Im1pbmktYXJ0aWNsZSIgPgogICAgICAgIDxoMz5SZWxhdGVkIE5ld3M8L2gzPgoKICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5ld3NfaXRlbSBvZGQiID4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImhlYWRsaW5lIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L25ld3M/cmVmXz10dF9ud3JfMSNuaTYxMzYwMjU5Igo+UXVvdGUgb2YgdGhlIFdlZWs6IFNhbSBTaGVwYXJkPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8YnIgLz48c21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImRhdGVQdWJsaXNoZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjAgaG91cnMgYWdvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPjxzcGFuIGl0ZW1wcm9wPSJwcm92aWRlciIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL25ld3MvbnMwMDAwMTIyP3JlZl89dHRfbndyXzEiCj53d3cuY3VsdHVyZWNhdGNoLmNvbTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuZXdzX2l0ZW0gZXZlbiIgPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iaGVhZGxpbmUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvbmV3cz9yZWZfPXR0X253cl8yI25pNjEzNTk2OTMiCj7igJhUaGUgTmlnaHQgT2bigJk6IFdoeSBKb2huIFR1cnR1cnJv4oCZcyBJdGNoeSBMYXd5ZXIgR2V0cyBVbmRlciBPdXIgU2tpbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGJyIC8+PHNtYWxsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJkYXRlUHVibGlzaGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIyIGhvdXJzIGFnbwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj48c3BhbiBpdGVtcHJvcD0icHJvdmlkZXIiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9uZXdzL25zMDAwMDEzOT9yZWZfPXR0X253cl8yIgo+SW5kaWV3aXJlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5ld3NfaXRlbSBvZGQiID4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImhlYWRsaW5lIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L25ld3M/cmVmXz10dF9ud3JfMyNuaTYxMzU5NjYzIgo+4oCYVGhlIE5pZ2h0IE9m4oCZOiBXaHkgSm9obiBUdXJ0dXJyb+KAmXMgSXRjaHkgTGF3eWVyIEdldHMgVW5kZXIgT3VyIFNraW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPjxzbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iZGF0ZVB1Ymxpc2hlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMiBob3VycyBhZ28KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+PHNwYW4gaXRlbXByb3A9InByb3ZpZGVyIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbmV3cy9uczAwMDAzNTM/cmVmXz10dF9ud3JfMyIKPlRob21wc29uIG9uIEhvbGx5d29vZDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VlLW1vcmUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9uZXdzP3JlZl89dHRfbndyX3NtIgo+U2VlIGFsbCAxODU1IHJlbGF0ZWQgYXJ0aWNsZXM8L2E+Jm5ic3A7JnJhcXVvOwogICAgICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fUmVsYXRlZE5ld3NXaWRnZXRSSFNfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJSZWxhdGVkTmV3c1dpZGdldFJIUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJSZWxhdGVkTmV3c1dpZGdldFJIUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgICAgICA8YSBuYW1lPSJzbG90X3JpZ2h0LTUiPjwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJtaW5pLWFydGljbGUiPgogICAgICAgIAogICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5pZih0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKXt1ZXQoJ2JiJywnTmluamFXaWRnZXQnLHt3YjoxfSk7fTwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJhYl93aWRnZXQiPgogICAgICAgIAogICAgCgogICAgPGRpdiBjbGFzcz0iYWJfbmluamEiPgo8c3BhbiBjbGFzcz0id2lkZ2V0X2hlYWRlciI+IDxzcGFuIGNsYXNzPSJvbmVsaW5lIj4gPGEgaHJlZj0iL2NvbWljLWNvbi9mYXZvcml0ZS1jdWx0LXR2LWNoYXJhY3RlcnMvcmcxMjM4NzM1NjE2P3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0zMTQ5Nzk5NzYyJnBmX3JkX3I9MUpSRDZBQTU0Qzk1NDJUUDkwMzkmcGZfcmRfcz1yaWdodC01JnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDAxMTg3MTUmcmVmXz10dF9jY25fY3R2X2hkIiA+IDxoMz5PdXIgRmF2b3JpdGUgQ3VsdCBUViBDaGFyYWN0ZXJzPC9oMz4gPC9hPiA8L3NwYW4+IDwvc3Bhbj4gPGRpdiBjbGFzcz0id2lkZ2V0X2NvbnRlbnQgbm9faW5saW5lX2JsdXJiIj4gPGRpdiBjbGFzcz0id2lkZ2V0X25lc3RlZCI+IDxkaXYgY2xhc3M9Im5pbmphX2ltYWdlX3BhY2siPiA8ZGl2IGNsYXNzPSJuaW5qYV9jZW50ZXIiPiA8ZGl2IGNsYXNzPSJuaW5qYV9pbWFnZSBmaXJzdF9pbWFnZSBsYXN0X2ltYWdlIiBzdHlsZT0id2lkdGg6MzA3cHg7aGVpZ2h0OmF1dG87IiA+IDxkaXYgc3R5bGU9IndpZHRoOjMwN3B4O2hlaWdodDphdXRvO21hcmdpbjowIGF1dG87Ij4gPGRpdiBjbGFzcz0id2lkZ2V0X2ltYWdlIj4gPGRpdiBjbGFzcz0iaW1hZ2UiPiA8YSBocmVmPSIvY29taWMtY29uL2Zhdm9yaXRlLWN1bHQtdHYtY2hhcmFjdGVycy9yZzEyMzg3MzU2MTYvbWVkaWF2aWV3ZXIvcm0zODM0ODEyOTI4P3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0zMTQ5Nzk5NzYyJnBmX3JkX3I9MUpSRDZBQTU0Qzk1NDJUUDkwMzkmcGZfcmRfcz1yaWdodC01JnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDAxMTg3MTUmcmVmXz10dF9jY25fY3R2X2lfMSIgPiA8aW1nIGl0ZW1wcm9wPSJpbWFnZSIgY2xhc3M9InByaV9pbWFnZSIgc3JjPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1USTJNak0wTkRNek5WNUJNbDVCYW5CblhrRnRaVFl3TWpBME5qRXouX0NSMjUsMjcsNDQ4LDMzNl9VWDYxNF9VWTQ2MC5fU1kyMzBfU1gzMDdfQUxfLmpwZyIgLz4gPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxwIGNsYXNzPSJibHVyYiI+QSBwZWFjZS1sb3ZpbmcgZGVtb24sIGFuIGV2aWwtZmlnaHRpbmcgc2FtdXJhaSwgYW5kIGEgbWFzdGVyIHNweSBhcmUgYW1vbmcgb3VyIGZhdm9yaXRlcy4gV2hvIGVsc2UgbWFkZSBvdXIgbGlzdD88L3A+IDxwIGNsYXNzPSJzZWVtb3JlIj48YSBocmVmPSIvY29taWMtY29uL2Zhdm9yaXRlLWN1bHQtdHYtY2hhcmFjdGVycy9yZzEyMzg3MzU2MTY/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTMxNDk3OTk3NjImcGZfcmRfcj0xSlJENkFBNTRDOTU0MlRQOTAzOSZwZl9yZF9zPXJpZ2h0LTUmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MDExODcxNSZyZWZfPXR0X2Njbl9jdHZfc20iIGNsYXNzPSJwb3NpdGlvbl9ib3R0b20gc3VwcGxlbWVudGFsIiA+U2FtcGxlIHNvbWUgY3VsdCBjaGFyYWN0ZXJzPC9hPjwvcD4gICAgPC9kaXY+CiAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KCgoKICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgaWYodHlwZW9mIHVleCA9PT0gJ2Z1bmN0aW9uJyl7dWV4KCdsZCcsJ05pbmphV2lkZ2V0Jyx7d2I6MX0pO30KICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgCgoKCgogICAgICAgIDwvZGl2PgogICAgCgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IG1pZGRsZV9yaHMgLS0+CgkKCgogICAgCiAgICAKICAgIAoKCiAgICAKICAgIAogICAgICAgIDxhIG5hbWU9InNsb3RfcmlnaHQtNyI+PC9hPgogICAgICAgIDxkaXYgY2xhc3M9Im1pbmktYXJ0aWNsZSI+CiAgICAgICAgCiAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmlmKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicpe3VldCgnYmInLCdaZXJnbmV0V2lkZ2V0Jyx7d2I6MX0pO308L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICA8c3BhbiBjbGFzcz0iYWJfd2lkZ2V0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWJfemVyZ25ldCI+CjxzcGFuIGNsYXNzPSJ3aWRnZXRfaGVhZGVyIj4gPHNwYW4gY2xhc3M9Im9uZWxpbmUiPiA8aDM+QXJvdW5kIFRoZSBXZWI8L2gzPiA8c3Bhbj4mbmJzcDt8Jm5ic3A7PC9zcGFuPiA8aDQ+UG93ZXJlZCBieSBaZXJnTmV0PC9oND4gPC9zcGFuPiA8L3NwYW4+IDxkaXYgY2xhc3M9IndpZGdldF9jb250ZW50IG5vX2lubGluZV9ibHVyYiI+IDxkaXYgY2xhc3M9IndpZGdldF9uZXN0ZWQiPiA8aWZyYW1lIGNsYXNzPSJ6ZXJnbmV0LWZyYW1lX19zaWRlYmFyIiBzY3JvbGxpbmc9Im5vIiBzZWFtbGVzcyBzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2h0bWwvemVyZ25ldC0yOTc1NzY3Mzk5Ll9DQjUyMjg2MTgzM18uaHRtbD93aWRnZXRJZD00NzAwOSI+PC9pZnJhbWU+IDwvZGl2PiA8L2Rpdj4gICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NwYW4+CgoKCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgIGlmKHR5cGVvZiB1ZXggPT09ICdmdW5jdGlvbicpe3VleCgnbGQnLCdaZXJnbmV0V2lkZ2V0Jyx7d2I6MX0pO30KICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgCgoKCgogICAgICAgIDwvZGl2PgogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlJlbGF0ZWRMaXN0c1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICAgICAgICA8ZGl2IGNsYXNzPSJtaW5pLWFydGljbGUiPgogICAgICAgICAgICA8ZGl2IGlkPSJyZWxhdGVkTGlzdHNXaWRnZXQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmlnaHRjb3JuZXJsaW5rIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbGlzdC9jcmVhdGU/cmVmXz10dF9ybHMiCj5DcmVhdGUgYSBsaXN0PC9hPiZuYnNwOyZyYXF1bzsKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGgzPlVzZXIgTGlzdHM8L2gzPgogICAgICAgICAgICAgICAgPHA+UmVsYXRlZCBsaXN0cyBmcm9tIElNRGIgdXNlcnM8L3A+CgogICAgPGRpdiBjbGFzcz0ibGlzdC1wcmV2aWV3IGV2ZW4iPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldy1pdGVtLW5hcnJvdyI+CjxhIGhyZWY9Ii9saXN0L2xzMDA5Mzk1NTA5P3JlZl89dHRfcmxzXzEiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJsaXN0IGltYWdlIiB0aXRsZT0ibGlzdCBpbWFnZSJzcmM9Ii9pbWFnZXMvbm9waWN0dXJlL21lZGl1bS9maWxtLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCT0RnMFlqQXpORFF0T0dGa01pMDBZemsyTFRnMU56WXRZVE5qWTJVd1pUTTJaRGRrTDJsdFlXZGxYa0V5WGtGcWNHZGVRWFZ5TVRReE56TXpORElALl9WMV9VWDg2X0NSMCwwLDg2LDg2X0FMXy5qcGciIC8+PC9hPiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdF9uYW1lIj4KICAgICAgICAgICAgPHN0cm9uZz48YSBocmVmPSIvbGlzdC9sczAwOTM5NTUwOT9yZWZfPXR0X3Jsc18xIgo+CkRWRCA4CjwvYT48L3N0cm9uZz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X21ldGEiPgogICAgICAgICAgICBhIGxpc3Qgb2YgNDcgdGl0bGVzCiAgICAgICAgICAgIDxiciAvPmNyZWF0ZWQgMDEmbmJzcDtKdWwmbmJzcDsyMDEyCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXIiPiZuYnNwOzwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXcgb2RkIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXctaXRlbS1uYXJyb3ciPgo8YSBocmVmPSIvbGlzdC9sczA1MDEyNzgzNz9yZWZfPXR0X3Jsc18yIgo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0ibGlzdCBpbWFnZSIgdGl0bGU9Imxpc3QgaW1hZ2Uic3JjPSIvaW1hZ2VzL25vcGljdHVyZS9tZWRpdW0vZmlsbS5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QlpqWTVaalF5TWpNdE1tRXdPQzAwTnpjMkxUbGxZVEl0TW1VMk16SmpOVGcxTmpZMFhrRXlYa0ZxY0dkZVFYVnlOalExTVRNek1EUUAuX1YxX1VYODZfQ1IwLDAsODYsODZfQUxfLmpwZyIgLz48L2E+ICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X25hbWUiPgogICAgICAgICAgICA8c3Ryb25nPjxhIGhyZWY9Ii9saXN0L2xzMDUwMTI3ODM3P3JlZl89dHRfcmxzXzIiCj4KbW92aWVzIEkgYWxyZWFkeSB3YXRjaGVkCjwvYT48L3N0cm9uZz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X21ldGEiPgogICAgICAgICAgICBhIGxpc3Qgb2YgNDggdGl0bGVzCiAgICAgICAgICAgIDxiciAvPmNyZWF0ZWQgMjkmbmJzcDtPY3QmbmJzcDsyMDEyCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXIiPiZuYnNwOzwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXcgZXZlbiI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdC1wcmV2aWV3LWl0ZW0tbmFycm93Ij4KPGEgaHJlZj0iL2xpc3QvbHMwNzkxODAwMTM/cmVmXz10dF9ybHNfMyIKPjxpbWcgaGVpZ2h0PSI4NiIgd2lkdGg9Ijg2IiBhbHQ9Imxpc3QgaW1hZ2UiIHRpdGxlPSJsaXN0IGltYWdlInNyYz0iL2ltYWdlcy9ub3BpY3R1cmUvbWVkaXVtL2ZpbG0ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVGt4TVRBNU9UQXpNbDVCTWw1QmFuQm5Ya0Z0WlRnd05qQTVNRGMzTmpFQC5fVjFfVVg4Nl9DUjAsMCw4Niw4Nl9BTF8uanBnIiAvPjwvYT4gICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RfbmFtZSI+CiAgICAgICAgICAgIDxzdHJvbmc+PGEgaHJlZj0iL2xpc3QvbHMwNzkxODAwMTM/cmVmXz10dF9ybHNfMyIKPgpJTURiIFN0YWZmIFJhbmtzIHRoZSBUb3AgMjUgTW92aWVzIFNpbmNlIDE5OTAKPC9hPjwvc3Ryb25nPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RfbWV0YSI+CiAgICAgICAgICAgIGEgbGlzdCBvZiAyNSB0aXRsZXMKICAgICAgICAgICAgPGJyIC8+Y3JlYXRlZCAyOSZuYnNwO1NlcCZuYnNwOzIwMTUKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhciI+Jm5ic3A7PC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldyBvZGQiPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldy1pdGVtLW5hcnJvdyI+CjxhIGhyZWY9Ii9saXN0L2xzMDM2MjA5MDE2P3JlZl89dHRfcmxzXzQiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJsaXN0IGltYWdlIiB0aXRsZT0ibGlzdCBpbWFnZSJzcmM9Ii9pbWFnZXMvbm9waWN0dXJlL21lZGl1bS9maWxtLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWlRGak1qQmlZekl0TnpVNVlTMDBNamRpTFdKa09Ua3RORFEzTVRFM1pqWTJZVFk1WGtFeVhrRnFjR2RlUVhWeU5EazNOelUyTVRRQC5fVjFfVVg4Nl9DUjAsMCw4Niw4Nl9BTF8uanBnIiAvPjwvYT4gICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RfbmFtZSI+CiAgICAgICAgICAgIDxzdHJvbmc+PGEgaHJlZj0iL2xpc3QvbHMwMzYyMDkwMTY/cmVmXz10dF9ybHNfNCIKPgpGYXZvcml0ZSBjb21lZGllcwo8L2E+PC9zdHJvbmc+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdF9tZXRhIj4KICAgICAgICAgICAgYSBsaXN0IG9mIDMwIHRpdGxlcwogICAgICAgICAgICA8YnIgLz5jcmVhdGVkIDE1Jm5ic3A7TWFyJm5ic3A7MjAxNgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyIj4mbmJzcDs8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0ibGlzdC1wcmV2aWV3IGV2ZW4iPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldy1pdGVtLW5hcnJvdyI+CjxhIGhyZWY9Ii9saXN0L2xzMDYzOTk5NDc2P3JlZl89dHRfcmxzXzUiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJsaXN0IGltYWdlIiB0aXRsZT0ibGlzdCBpbWFnZSJzcmM9Ii9pbWFnZXMvbm9waWN0dXJlL21lZGl1bS9maWxtLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCT1dFeFpUZzRaV1l0T1RReE1pMDBZV1prTFRreFl6Z3RPVGcxTVRVeE56TmlORGN4TDJsdFlXZGxMMmx0WVdkbFhrRXlYa0ZxY0dkZVFYVnlNVFF4TnpNek5ESUAuX1YxX1VYODZfQ1IwLDAsODYsODZfQUxfLmpwZyIgLz48L2E+ICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X25hbWUiPgogICAgICAgICAgICA8c3Ryb25nPjxhIGhyZWY9Ii9saXN0L2xzMDYzOTk5NDc2P3JlZl89dHRfcmxzXzUiCj4KTGllYmxpbmdzZmlsbWUgKHVuc29ydGllcnQpCjwvYT48L3N0cm9uZz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X21ldGEiPgogICAgICAgICAgICBhIGxpc3Qgb2YgMjYgdGl0bGVzCiAgICAgICAgICAgIDxiciAvPmNyZWF0ZWQgMTAmbmJzcDttb250aHMmbmJzcDthZ28KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhciI+Jm5ic3A7PC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlZS1tb3JlIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbGlzdHMvdHQwMTE4NzE1P3JlZl89dHRfcmxzX3NtIgo+U2VlIGFsbCByZWxhdGVkIGxpc3RzPC9hPiZuYnNwOyZyYXF1bzsKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJSZWxhdGVkTGlzdHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiUmVsYXRlZExpc3RzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogICAgICAgIAoKCiAgICAKICAgIAogICAgCgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IGJ0Zl9yaHMxIC0tPgoJCgoKICAgIAogICAgCiAgICAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiQ29ubmVjdFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICAgIDxkaXYgY2xhc3M9Im1pbmktYXJ0aWNsZSI+CiAgICAgICAgPGgzPkNvbm5lY3Qgd2l0aCBJTURiPC9oMz4KICAgICAgICA8ZGl2IGlkPSJmYWNlYm9va1dyYXBwZXIiPgogICAgICAgICAgICA8aWZyYW1lCiAgICAgICAgICAgICAgICBzY3JvbGxpbmc9Im5vIgogICAgICAgICAgICAgICAgZnJhbWVib3JkZXI9IjAiCiAgICAgICAgICAgICAgICBpZD0iZmFjZWJvb2tJZnJhbWUiCiAgICAgICAgICAgICAgICBhbGxvd1RyYW5zcGFyZW5jeT0idHJ1ZSI+PC9pZnJhbWU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGhyPgogICAgICAgIDxpZnJhbWUgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiCiAgICAgICAgICAgIGZyYW1lYm9yZGVyPSIwIgogICAgICAgICAgICByb2xlPSJwcmVzZW50YXRpb24iCiAgICAgICAgICAgIHNjcm9sbGluZz0ibm8iCiAgICAgICAgICAgIGlkPSJ0d2l0dGVySWZyYW1lIj48L2lmcmFtZT4KICAgIDwvZGl2Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIkNvbm5lY3RXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiQ29ubmVjdFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKCiAgCiAgICAgIAogICAgPGRpdiBjbGFzcz0ibWluaS1hcnRpY2xlIj4KICAgICAgICA8ZGl2IGlkPSJyYXRpbmdXaWRnZXQiPgogICAgICAgICAgICA8aDM+U2hhcmUgdGhpcyBSYXRpbmc8L2gzPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgIFRpdGxlOgogICAgICAgICAgICAgICAgPHN0cm9uZz5UaGUgQmlnIExlYm93c2tpPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAoMTk5OCkKICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW1kYlJhdGluZ1BsdWdpbiBpbWRiUmF0aW5nU3R5bGUxIiBkYXRhLXVzZXI9IiIgZGF0YS10aXRsZT0idHQwMTE4NzE1IiBkYXRhLXN0eWxlPSJ0MSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvP3JlZl89dHRfcGxnX3J0Igo+IDxpbWcgYWx0PSJUaGUgQmlnIExlYm93c2tpICgxOTk4KSBvbiBJTURiIgpzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9wbHVnaW5zL2ltZGJfNDZ4MjItMjI2NDQ3MzI1NC5fQ0I1MjI3MzYyMzhfLnBuZyI+CjwvYT4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InJhdGluZyI+OC4yPHNwYW4gY2xhc3M9Im9mVGVuIj4vMTA8L3NwYW4+PC9zcGFuPiAgICAgICAgICAgICAgICAKPGltZyBzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9wbHVnaW5zL2ltZGJfc3Rhcl8yMngyMS0yODg5MTQ3ODU1Ll9DQjUyMjczNjU1MF8ucG5nIiBjbGFzcz0ic3RhciI+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHA+V2FudCB0byBzaGFyZSBJTURiJ3MgcmF0aW5nIG9uIHlvdXIgb3duIHNpdGU/IFVzZSB0aGUgSFRNTCBiZWxvdy48L3A+CiAgICAgICAgICAgIDxkaXYgaWQ9InJhdGluZ1BsdWdpbkhUTUwiIGNsYXNzPSJoaWRkZW4iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVzc2FnZV9ib3ggc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgICAgIFlvdSBtdXN0IGJlIGEgcmVnaXN0ZXJlZCB1c2VyIHRvIHVzZSB0aGUgSU1EYiByYXRpbmcgcGx1Z2luLgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj9yZWZfPXR0X3BsZ19ydCIKY2xhc3M9ImNib3hFbGVtZW50IiByZWw9J2xvZ2luJz5Mb2dpbjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBpZD0icmF0aW5nV2lkZ2V0TGlua3MiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpdGxlUGFnZVNwcml0ZSBhcnJvd3Mgc2hvdyI+PC9zcGFuPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3BsdWdpbnM/dGl0bGVJZD10dDAxMTg3MTUmcmVmXz10dF9wbGdfcnQiCmlkPSJ0b2dnbGVSYXRpbmdQbHVnaW5IVE1MIiBpdGVtcHJvcD0ndXJsJyA+U2hvdyBIVE1MPC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3BsdWdpbnM/dGl0bGVJZD10dDAxMTg3MTUmcmVmXz10dF9wbGdfcnQiCml0ZW1wcm9wPSd1cmwnPlZpZXcgbW9yZSBzdHlsZXM8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgoKICAgIAogICAgCiAgICAKCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZU1haW5EZXRhaWxzUmVsYXRlZFBvbGxzIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVNYWluRGV0YWlsc1JlbGF0ZWRQb2xsc19zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxkaXYgY2xhc3M9Im1pbmktYXJ0aWNsZSBwb2xsLXdpZGdldC1yaHMgIj4KICAgIDxzdHlsZT4KICAgICAgICAubWluaS1hcnRpY2xlLnBvbGwtd2lkZ2V0LXJocyB1bCBsaSB7IG1hcmdpbi1ib3R0b206IDAuNWVtOyBjbGVhcjogbGVmdDsgZm9udC13ZWlnaHQ6IGJvbGQ7fQogICAgICAgIC5taW5pLWFydGljbGUucG9sbC13aWRnZXQtcmhzIHNwYW4geyBtYXJnaW4tYm90dG9tOiAwLjVlbTsgY2xlYXI6IGxlZnQ7fQogICAgICAgIC5taW5pLWFydGljbGUucG9sbC13aWRnZXQtcmhzIGltZyB7IGZsb2F0OiBsZWZ0OyBwYWRkaW5nOiAwIDVweCA1cHggMDsgaGVpZ2h0OiA4NnB4OyB3aWR0aDogODZweDt9CiAgICA8L3N0eWxlPgogICAgPGgzPlVzZXIgUG9sbHM8L2gzPgogICAgPHVsPgogICAgICAgIDxsaT4KPGEgaHJlZj0iL3BvbGwvbFNNdDlRd21Pc2MvP3JlZl89dHRfcG9faTEiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJwb2xsIGltYWdlIiB0aXRsZT0icG9sbCBpbWFnZSJzcmM9Imh0dHA6Ly9pLmltZGIuY29tL2ltYWdlcy9ub3BpY3R1cmUvMTQweDIwOS91bmtub3duLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRreE1UQTVPVEF6TWw1Qk1sNUJhbkJuWGtGdFpUZ3dOakE1TURjM05qRUAuX1YxX1NYODZfQ1IwLDAsODYsODZfLmpwZyIgLz48L2E+ICAgICAgICA8YSBocmVmPSIvcG9sbC9sU010OVF3bU9zYy8/cmVmXz10dF9wb19xMSIKPkJpbGx5J3MgVG9wIDI1IE1vdmllcyBmcm9tIHRoZSBMYXN0IDI1IFllYXJzPC9hPgogICAgICAgIDxsaT4KPGEgaHJlZj0iL3BvbGwvdG1GZVV5eXlwcVEvP3JlZl89dHRfcG9faTIiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJwb2xsIGltYWdlIiB0aXRsZT0icG9sbCBpbWFnZSJzcmM9Imh0dHA6Ly9pLmltZGIuY29tL2ltYWdlcy9ub3BpY3R1cmUvMTQweDIwOS91bmtub3duLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRZNU5qY3dOak15T0Y1Qk1sNUJhbkJuWGtGdFpUY3dNVEk1TkRZMU1nQEAuX1YxX1NYODZfQ1IwLDAsODYsODZfLmpwZyIgLz48L2E+ICAgICAgICA8YSBocmVmPSIvcG9sbC90bUZlVXl5eXBxUS8/cmVmXz10dF9wb19xMiIKPkhlZnR5IEhlcm9lczwvYT4KICAgICAgICA8bGk+CjxhIGhyZWY9Ii9wb2xsL3hiSVEtS0M2Mm1jLz9yZWZfPXR0X3BvX2kzIgo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0icG9sbCBpbWFnZSIgdGl0bGU9InBvbGwgaW1hZ2Uic3JjPSJodHRwOi8vaS5pbWRiLmNvbS9pbWFnZXMvbm9waWN0dXJlLzE0MHgyMDkvdW5rbm93bi5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk9EVTRNalU0TmpJd05sNUJNbDVCYW5CblhrRnRaVGd3TURVMk1qRXlNREVALl9WMV9TWDg2X0NSMCwwLDg2LDg2Xy5qcGciIC8+PC9hPiAgICAgICAgPGEgaHJlZj0iL3BvbGwveGJJUS1LQzYybWMvP3JlZl89dHRfcG9fcTMiCj45MHMgTW92aWUgdG8gVFYgU2VyaWVzPC9hPgogICAgICAgIDxsaT4KPGEgaHJlZj0iL3BvbGwvcnA5MFZ4eDJIcmcvP3JlZl89dHRfcG9faTQiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJwb2xsIGltYWdlIiB0aXRsZT0icG9sbCBpbWFnZSJzcmM9Imh0dHA6Ly9pLmltZGIuY29tL2ltYWdlcy9ub3BpY3R1cmUvMTQweDIwOS91bmtub3duLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRjd09EbG1aRGt0TldSa09DMDBOVEZsTFRreU1qUXRZV1V4TXpaa05ERTRNR1ZtWGtFeVhrRnFjR2RlUVhWeU5USXpPVGs1T0RNQC5fVjFfU1g4Nl9DUjAsMCw4Niw4Nl8uanBnIiAvPjwvYT4gICAgICAgIDxhIGhyZWY9Ii9wb2xsL3JwOTBWeHgySHJnLz9yZWZfPXR0X3BvX3E0Igo+V2hhdCdzIHlvdXIgcmVzb2x1dGlvbiBmb3IgMjAxNT88L2E+CiAgICAgICAgPGxpPgo8YSBocmVmPSIvcG9sbC8wYTNPLUhwdm1HNC8/cmVmXz10dF9wb19pNSIKPjxpbWcgaGVpZ2h0PSI4NiIgd2lkdGg9Ijg2IiBhbHQ9InBvbGwgaW1hZ2UiIHRpdGxlPSJwb2xsIGltYWdlInNyYz0iaHR0cDovL2kuaW1kYi5jb20vaW1hZ2VzL25vcGljdHVyZS8xNDB4MjA5L3Vua25vd24ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJOalExTURBMFlXTXRNRGxpWkMwME4yWmhMV0l3WkRJdE5qaGpOVE16WVRNd01XVTRMMmx0WVdkbFhrRXlYa0ZxY0dkZVFYVnlNVFF4TnpNek5ESUAuX1YxX1NYODZfQ1IwLDAsODYsODZfLmpwZyIgLz48L2E+ICAgICAgICA8YSBocmVmPSIvcG9sbC8wYTNPLUhwdm1HNC8/cmVmXz10dF9wb19xNSIKPlJvbGxpbmcgU3RvbmUncyAzMCBCZXN0IFNwb3J0cyBNb3ZpZXMgb2YgQWxsIFRpbWU8L2E+CiAgICAgICAgPGxpPgo8YSBocmVmPSIvcG9sbC9sd2hIYk9hajg2by8/cmVmXz10dF9wb19pNiIKPjxpbWcgaGVpZ2h0PSI4NiIgd2lkdGg9Ijg2IiBhbHQ9InBvbGwgaW1hZ2UiIHRpdGxlPSJwb2xsIGltYWdlInNyYz0iaHR0cDovL2kuaW1kYi5jb20vaW1hZ2VzL25vcGljdHVyZS8xNDB4MjA5L3Vua25vd24ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJaVFJtTmpRMVpEWXRORGd6TXkwME9HRTBMV0U0TjJZdE5Ua3pOV1E1WkRobE5HSm1MMmx0WVdkbEwybHRZV2RsWGtFeVhrRnFjR2RlUVhWeU5qVTBPVFEwT1RZQC5fVjFfU1g4Nl9DUjAsMCw4Niw4Nl8uanBnIiAvPjwvYT4gICAgICAgIDxhIGhyZWY9Ii9wb2xsL2x3aEhiT2FqODZvLz9yZWZfPXR0X3BvX3E2Igo+SSB3YW50IGEgTEVHTyB2ZXJzaW9uIG9mIC4uLjwvYT4KICAgIDwvdWw+CiAgICA8ZGl2IGNsYXNzPSJzZWUtbW9yZSI+PGEgaHJlZj0iL3BvbGwvP3JlZl89dHRfcG9fc20iCj5TZWUgbW9yZSBwb2xscyAmcmFxdW87PC9hPjwvZGl2Pgo8L2Rpdj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlTWFpbkRldGFpbHNSZWxhdGVkUG9sbHNfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZU1haW5EZXRhaWxzUmVsYXRlZFBvbGxzIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlTWFpbkRldGFpbHNSZWxhdGVkUG9sbHMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgoKICAgIAogICAgCiAgICAKCgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogYm90dG9tX3JocyAtLT4KCQoKCiAgICAKICAgIAogICAgCiAgICAgICAgCgkKCTwhLS0gbm8gY29udGVudCByZWNlaXZlZCBmb3Igc2xvdDogYnRmX3JoczIgLS0+CgkKCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIDwvZGl2PiAKCiAgICA8ZGl2IGlkPSJtYWluX2JvdHRvbSIgY2xhc3M9Im1haW4iPgoKICAgIAogICAgCiAgICAKCgoKICAgIAogICAgCiAgICAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiVGl0bGVBd2FyZHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZUF3YXJkc1dpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICAgIDxkaXYgY2xhc3M9ImFydGljbGUgaGlnaGxpZ2h0ZWQiIGlkPSJ0aXRsZUF3YXJkc1JhbmtzIj4KICAgICAgICAgIDxzdHJvbmc+CjxhIGhyZWY9Ii9jaGFydC90b3A/cmVmXz10dF9hd2QiCj4gVG9wIFJhdGVkIE1vdmllcyAjMTY1CjwvYT4gICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICB8Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlQXdhcmRzU3VtbWFyeVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQXdhcmRzU3VtbWFyeVdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8c3BhbiBpdGVtcHJvcD0iYXdhcmRzIj4KICAgICAgNCB3aW5zICZhbXA7IDE3IG5vbWluYXRpb25zLgogICAgPC9zcGFuPgogICAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvYXdhcmRzP3JlZl89dHRfYXdkIgpjbGFzcz0iYnRuLWZ1bGwiID5TZWUgbW9yZSBhd2FyZHM8L2E+Jm5ic3A7JnJhcXVvOyAgICA8L3NwYW4+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZUF3YXJkc1N1bW1hcnlXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZUF3YXJkc1N1bW1hcnlXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVBd2FyZHNTdW1tYXJ5V2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogICAgICA8L2Rpdj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQXdhcmRzV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVBd2FyZHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVBd2FyZHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgoKICAgIAogICAgCiAgICAKCgoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlTWVkaWFTdHJpcFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlTWVkaWFTdHJpcFdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CgoKICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlTWVkaWFTdHJpcFdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CgogICAgICA8ZGl2IGNsYXNzID0gImFydGljbGUiIGlkPSJ0aXRsZU1lZGlhU3RyaXAiPgogICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhc3RyaXBfY29udGFpbmVyIGNvbWJpbmVkIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNvbWJpbmVkLXBob3RvcyI+CiAgICAgICAgICAgICAgICAgICAgPGgyPlBob3RvczwvaDI+CiAgICA8ZGl2IGNsYXNzPSJtZWRpYXN0cmlwIj4gICAgICAgIAkKICAgICAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L21lZGlhdmlld2VyL3JtMTcyMzQ0ODMyMD9jb250ZXh0PWRlZmF1bHQmcmVmXz10dF9wdl9tZF8xIgppdGVtcHJvcD0ndGh1bWJuYWlsVXJsJz48aW1nIGhlaWdodD0iMTA1IiB3aWR0aD0iMTA1IiBhbHQ9IkpvaG4gR29vZG1hbiBhdCBhbiBldmVudCBmb3IgVGhlIEJpZyBMZWJvd3NraSAoMTk5OCkiIHRpdGxlPSJKb2huIEdvb2RtYW4gYXQgYW4gZXZlbnQgZm9yIFRoZSBCaWcgTGVib3dza2kgKDE5OTgpInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC91bmtub3duLTEzOTQ4NDY4MzYuX0NCNTIyNzM2NTUwXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qSTNNVE0yTlRnNU4xNUJNbDVCYW5CblhrRnRaVGN3TkRFeE56UXpOZ0BALl9WMV9VWDEwNV9DUjAsMCwxMDUsMTA1X0FMXy5qcGciIGl0ZW1wcm9wPSdpbWFnZScgLz48L2E+ICAgICAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L21lZGlhdmlld2VyL3JtMjExNDIyNjE3Nj9jb250ZXh0PWRlZmF1bHQmcmVmXz10dF9wdl9tZF8yIgppdGVtcHJvcD0ndGh1bWJuYWlsVXJsJz48aW1nIGhlaWdodD0iMTA1IiB3aWR0aD0iMTA1IiBhbHQ9IkplZmYgQnJpZGdlcyBhbmQgU2FtIEVsbGlvdHQgaW4gVGhlIEJpZyBMZWJvd3NraSAoMTk5OCkiIHRpdGxlPSJKZWZmIEJyaWRnZXMgYW5kIFNhbSBFbGxpb3R0IGluIFRoZSBCaWcgTGVib3dza2kgKDE5OTgpInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC91bmtub3duLTEzOTQ4NDY4MzYuX0NCNTIyNzM2NTUwXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UUTFNVFF4TXpBMk9WNUJNbDVCYW5CblhrRnRaVGN3TURNMU56STNNZ0BALl9WMV9VWTEwNV9DUjI3LDAsMTA1LDEwNV9BTF8uanBnIiBpdGVtcHJvcD0naW1hZ2UnIC8+PC9hPiAgICAgICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9tZWRpYXZpZXdlci9ybTE3MDY2NzExMDQ/Y29udGV4dD1kZWZhdWx0JnJlZl89dHRfcHZfbWRfMyIKaXRlbXByb3A9J3RodW1ibmFpbFVybCc+PGltZyBoZWlnaHQ9IjEwNSIgd2lkdGg9IjEwNSIgYWx0PSJKZWZmIEJyaWRnZXMgYXQgYW4gZXZlbnQgZm9yIFRoZSBCaWcgTGVib3dza2kgKDE5OTgpIiB0aXRsZT0iSmVmZiBCcmlkZ2VzIGF0IGFuIGV2ZW50IGZvciBUaGUgQmlnIExlYm93c2tpICgxOTk4KSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvdW5rbm93bi0xMzk0ODQ2ODM2Ll9DQjUyMjczNjU1MF8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakE1TkRFeU5UazVObDVCTWw1QmFuQm5Ya0Z0WlRjd05URXhOelF6TmdAQC5fVjFfVVgxMDVfQ1IwLDAsMTA1LDEwNV9BTF8uanBnIiBpdGVtcHJvcD0naW1hZ2UnIC8+PC9hPiAgICAgICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9tZWRpYXZpZXdlci9ybTQzMTYwMjY4OD9jb250ZXh0PWRlZmF1bHQmcmVmXz10dF9wdl9tZF80IgppdGVtcHJvcD0ndGh1bWJuYWlsVXJsJz48aW1nIGhlaWdodD0iMTA1IiB3aWR0aD0iMTA1IiBhbHQ9Ikp1bGlhbm5lIE1vb3JlIGFuZCBKZWZmIEJyaWRnZXMgYXQgYW4gZXZlbnQgZm9yIFRoZSBCaWcgTGVib3dza2kgKDE5OTgpIiB0aXRsZT0iSnVsaWFubmUgTW9vcmUgYW5kIEplZmYgQnJpZGdlcyBhdCBhbiBldmVudCBmb3IgVGhlIEJpZyBMZWJvd3NraSAoMTk5OCkic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL3Vua25vd24tMTM5NDg0NjgzNi5fQ0I1MjI3MzY1NTBfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRjME5USTNNRGMwTlY1Qk1sNUJhbkJuWGtGdFpUY3dNVEV4TnpRek5nQEAuX1YxX1VYMTA1X0NSMCwwLDEwNSwxMDVfQUxfLmpwZyIgaXRlbXByb3A9J2ltYWdlJyAvPjwvYT4gICAgICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvbWVkaWF2aWV3ZXIvcm04MDc5OTUxMzY/Y29udGV4dD1kZWZhdWx0JnJlZl89dHRfcHZfbWRfNSIKaXRlbXByb3A9J3RodW1ibmFpbFVybCc+PGltZyBoZWlnaHQ9IjEwNSIgd2lkdGg9IjEwNSIgYWx0PSJKZWZmIEJyaWRnZXMgYW5kIEpvaG4gR29vZG1hbiBpbiBUaGUgQmlnIExlYm93c2tpICgxOTk4KSIgdGl0bGU9IkplZmYgQnJpZGdlcyBhbmQgSm9obiBHb29kbWFuIGluIFRoZSBCaWcgTGVib3dza2kgKDE5OTgpInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC91bmtub3duLTEzOTQ4NDY4MzYuX0NCNTIyNzM2NTUwXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk5HVm1aVE0xTWpNdFpEa3hNQzAwWm1ZeExXRm1NelV0TXpnNU1EbGhPR1poTnpKakwybHRZV2RsTDJsdFlXZGxYa0V5WGtGcWNHZGVRWFZ5TkRBeE9URXhOVE1ALl9WMV9VWDEwNV9DUjAsMCwxMDUsMTA1X0FMXy5qcGciIGl0ZW1wcm9wPSdpbWFnZScgLz48L2E+ICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbWJpbmVkLXNlZS1tb3JlIHNlZS1tb3JlIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9tZWRpYWluZGV4P3JlZl89dHRfcHZfbWlfc20iCj48c3BhbiBjbGFzcz0idGl0bGVQYWdlU3ByaXRlIHNob3dBbGxWaWRzQW5kUGljcyI+PC9zcGFuPjwvYT4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9tZWRpYWluZGV4P3JlZl89dHRfcHZfbWlfc20iCj4xMzYgcGhvdG9zPC9hPgoKPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L25ld3M/cmVmXz10dF9wdl9ud19zbSIKPjE4NTUgbmV3cyBhcnRpY2xlczwvYT4gJnJhcXVvOyAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlTWVkaWFTdHJpcFdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVNZWRpYVN0cmlwV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVNZWRpYVN0cmlwV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlTWVkaWFTdHJpcFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZVJlY3NXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVJlY3NXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgCiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSIgaWQ9InRpdGxlUmVjcyI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyaWdodGNvcm5lcmxpbmsiPgogICAgICAgICAgICA8YSBocmVmPSIvaGVscC9zaG93X2xlYWY/cGVyc29uYWxyZWNvbW1lbmRhdGlvbnMmcmVmXz10dF9yZWNfbG0iCj5MZWFybiBtb3JlPC9hPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIAogICAgICAgICAgICA8aDIgY2xhc3M9InJlY19oZWFkaW5nX3dyYXBwZXIiPiAgCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icmVjX2hlYWRpbmciIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1Ij5QZW9wbGUgd2hvIGxpa2VkIHRoaXMgYWxzbyBsaWtlZC4uLiZuYnNwOzwvc3Bhbj4KICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY193cmFwcGVyIiBpZD0idGl0bGVfcmVjcyIKICAgICAgICAgICAgICAgIGRhdGEtaXRlbXMtcGVyLXJlcXVlc3Q9IjI0IgogICAgICAgICAgICAgICAgZGF0YS1pdGVtcy1wZXItcGFnZT0iNiIKICAgICAgICAgICAgICAgIGRhdGEtc3BlY3M9InAxM25zaW1zOnR0MDExODcxNSIKICAgICAgICAgICAgICAgIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIj4gICAgICAKICAgICAgICAgICAgICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2NvbnN0X3BpY2tlciI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX3ZpZXciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZ3JhdmUiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfc2xpZGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfcGFnZSI+ICAgICAgICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDExNjI4MiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDExNjI4Mi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IkZhcmdvIiB0aXRsZT0iRmFyZ28ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UZ3hOelkzTXpVeE9WNUJNbDVCYW5CblhrRnRaVGN3TURBME5qTXlOQUBALl9WMV9VWDc2X0NSMCwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1IiBkYXRhLXRjb25zdD0idHQwNDc3MzQ4Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwNDc3MzQ4Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iTm8gQ291bnRyeSBmb3IgT2xkIE1lbiIgdGl0bGU9Ik5vIENvdW50cnkgZm9yIE9sZCBNZW4ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qQTVOamszTWpNNE9WNUJNbDVCYW5CblhrRnRaVGN3TVRjNU1URTFNUUBALl9WMV9VWTExM19DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDEwNTIzNiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDEwNTIzNi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlJlc2Vydm9pciBEb2dzIiB0aXRsZT0iUmVzZXJ2b2lyIERvZ3Mic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QlptRXhObUV3WVdJdFltUXpPUzAwWWpBNUxUazJNamt0WmpFeVpERTFZMlF4TmpBMVhrRXlYa0ZxY0dkZVFYVnlNVFF4TnpNek5ESUAuX1YxX1VYNzZfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAyMDgwOTIiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAyMDgwOTIvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJTbmF0Y2giIHRpdGxlPSJTbmF0Y2gic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UQTJORFl4T0dZdFlqVTFNaTAwWTJRekxUZ3hNVFF0TVdJMU1HSTBaR1E1TW1VNFhrRXlYa0ZxY0dkZVFYVnlORGszTnpVMk1UUUAuX1YxX1VZMTEzX0NSMCwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1IiBkYXRhLXRjb25zdD0idHQwMjY2Njk3Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMjY2Njk3Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iS2lsbCBCaWxsOiBWb2wuIDEiIHRpdGxlPSJLaWxsIEJpbGw6IFZvbC4gMSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX0NCNTIyNzM2NTk2Xy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRVMU5EZzFNemc0TTE1Qk1sNUJhbkJuWGtGdFpUWXdNREV4T1RjMy5fVjFfVVg3Nl9DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MTIwNTQ4OSI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MTIwNTQ4OS8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IkdyYW4gVG9yaW5vIiB0aXRsZT0iR3JhbiBUb3Jpbm8ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UUXlNVGN6TVRBeE1sNUJNbDVCYW5CblhrRnRaVGN3T1RjMU9ERTBNZ0BALl9WMV9VWTExM19DUjIsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfcGFnZSI+ICAgICAgICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDQ2OTQ5NCI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDQ2OTQ5NC8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlRoZXJlIFdpbGwgQmUgQmxvb2QiIHRpdGxlPSJUaGVyZSBXaWxsIEJlIEJsb29kInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9maWxtLTI5Mzk3MDU4My5fQ0I1MjI3MzY1OTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakF4T0RRNE1EVTVOVjVCTWw1QmFuQm5Ya0Z0WlRjd01EVTRNalUxTVFAQC5fVjFfVVkxMTNfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAwOTMwNTgiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAwOTMwNTgvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJGdWxsIE1ldGFsIEphY2tldCIgdGl0bGU9IkZ1bGwgTWV0YWwgSmFja2V0InNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9maWxtLTI5Mzk3MDU4My5fQ0I1MjI3MzY1OTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJOemMyWlRoa09HSXRaR1k1WVMwME1EWXdMVGt5T1RBdE5EUm1aV0l3TUdSaFlUYzBMMmx0WVdkbFhrRXlYa0ZxY0dkZVFYVnlOalUwT1RRME9UWUAuX1YxX1VYNzZfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAxMjA1ODYiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxMjA1ODYvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJBbWVyaWNhbiBIaXN0b3J5IFgiIHRpdGxlPSJBbWVyaWNhbiBIaXN0b3J5IFgic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QlpqQTBNVE00TVRRdE56WTVNQzAwTnpZM0xXSTFaVGd0WXpjeE1qa3lNelU0TURaaVhrRXlYa0ZxY0dkZVFYVnlORFl5TURrNU1UVUAuX1YxX1VZMTEzX0NSMCwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1IiBkYXRhLXRjb25zdD0idHQwMTEwOTEyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTEwOTEyLz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iUHVscCBGaWN0aW9uIiB0aXRsZT0iUHVscCBGaWN0aW9uInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9maWxtLTI5Mzk3MDU4My5fQ0I1MjI3MzY1OTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVGt4TVRBNU9UQXpNbDVCTWw1QmFuQm5Ya0Z0WlRnd05qQTVNRGMzTmpFQC5fVjFfVVkxMTNfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAwOTk2ODUiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAwOTk2ODUvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJHb29kZmVsbGFzIiB0aXRsZT0iR29vZGZlbGxhcyJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX0NCNTIyNzM2NTk2Xy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTlRoak16Y3pNamN0Wm1Jd09DMDBOVFE0TFdKaFpXSXRaRGRoTlRrNVpUZGlNV0ZsWGtFeVhrRnFjR2RlUVhWeU5EWXlNRGs1TVRVQC5fVjFfVVg3Nl9DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDk5Mzg0NiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDk5Mzg0Ni8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlRoZSBXb2xmIG9mIFdhbGwgU3RyZWV0IiB0aXRsZT0iVGhlIFdvbGYgb2YgV2FsbCBTdHJlZXQic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9DQjUyMjczNjU5Nl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qSXhNamd4TlRrME1GNUJNbDVCYW5CblhrRnRaVGd3TmpJeU9UZzJNREVALl9WMV9VWTExM19DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX25hdiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfbmF2X3BhZ2VfbnVtIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmF2X2xlZnQiPiYjOTY2ODsgUHJldiA2PC9hPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uYXZfcmlnaHQiPk5leHQgNiAmIzk2NTg7PC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgCiAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlld3MiPgoKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDExNjI4MiI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAxMTYyODIiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxMTYyODIvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iRmFyZ28iIHRpdGxlPSJGYXJnbyJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX0NCNTIyNzM2NTE2Xy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRneE56WTNNelV4T1Y1Qk1sNUJhbkJuWGtGdFpUY3dNREEwTmpNeU5BQEAuX1YxX1VYMTI4X0NSMCwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDAxMTYyODIiIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSJkYTI5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMTYyODIvP3JlZl89dHRfcmVjX3R0Igo+PGI+RmFyZ288L2I+PC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm9iciI+KDE5OTYpPC9zcGFuPgogICA8L2Rpdj4gIAogICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InJlYy1jZXJ0LWdlbnJlIHJlYy1lbGlwc2lzIj4KICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIENlcnRpZmljYXRlOiAxNgoKICAgICAgICAgICAgICAgICAgICAgQ3JpbWUgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBEcmFtYSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIFRocmlsbGVyICAgICAgICAgIAoKICAgICAgICAKICAgIDwvZGl2PgogICAgICAgICAgICAgCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtcmF0aW5nIj4KICAgICAgICAgICAgICAgCgogIAoKICAKPGRpdiBjbGFzcz0icmF0aW5nIHJhdGluZy1saXN0IiBkYXRhLXN0YXJiYXItY2xhc3M9InJhdGluZy1saXN0IiBkYXRhLWF1dGg9IiIgZGF0YS11c2VyPSIiIGlkPSJ0dDAxMTYyODJ8aW1kYnw4LjF8OC4xfHAxM25zaW1zLXRpdGxlfHR0MDExODcxNXx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOC4xLzEwICg0OTQsNTIwIHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDExMy40cHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44LjE8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQwMTE2MjgyL3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+CkplcnJ5IEx1bmRlZ2FhcmQncyBpbmVwdCBjcmltZSBmYWxscyBhcGFydCBkdWUgdG8gaGlzIGFuZCBoaXMgaGVuY2htZW4ncyBidW5nbGluZyBhbmQgdGhlIHBlcnNpc3RlbnQgcG9saWNlIHdvcmsgb2YgdGhlIHF1aXRlIHByZWduYW50IE1hcmdlIEd1bmRlcnNvbi4gICAgPC9wPgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy1sb3dlciI+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXRlZXRoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgIAogPGRpdiBjbGFzcz0icmVjLWRpcmVjdG9yIHJlYy1lbGxpcHNpcyI+CiAgICAgIDxiPkRpcmVjdG9yczo8L2I+CkpvZWwgQ29lbiwKRXRoYW4gQ29lbiAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCldpbGxpYW0gSC4gTWFjeSwgCkZyYW5jZXMgTWNEb3JtYW5kLCAKU3RldmUgQnVzY2VtaTwvc3Bhbj48L2Rpdj4gCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAKICAgICAgPC9kaXY+CiAgICAgCiAgICAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcnZpZXciIGRhdGEtdGNvbnN0PSJ0dDA0NzczNDgiPgogICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX3Bvc3RlciIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1IiBkYXRhLXRjb25zdD0idHQwNDc3MzQ4Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwNDc3MzQ4Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTkwIiB3aWR0aD0iMTI4IiBhbHQ9Ik5vIENvdW50cnkgZm9yIE9sZCBNZW4iIHRpdGxlPSJObyBDb3VudHJ5IGZvciBPbGQgTWVuInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fQ0I1MjI3MzY1MTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakE1TmprM01qTTRPVjVCTWw1QmFuQm5Ya0Z0WlRjd01UYzVNVEUxTVFAQC5fVjFfVVkxOTBfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDQ3NzM0OCIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9ImRhMjkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDQ3NzM0OC8/cmVmXz10dF9yZWNfdHQiCj48Yj5ObyBDb3VudHJ5IGZvciBPbGQgTWVuPC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigyMDA3KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBDZXJ0aWZpY2F0ZTogMTYKCiAgICAgICAgICAgICAgICAgICAgIENyaW1lICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgRHJhbWEgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBUaHJpbGxlciAgICAgICAgICAKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwNDc3MzQ4fGltZGJ8OC4xfDguMXxwMTNuc2ltcy10aXRsZXx0dDAxMTg3MTV8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguMS8xMCAoNjcwLDIxNCB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMTMuNHB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC4xPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDQ3NzM0OC92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpWaW9sZW5jZSBhbmQgbWF5aGVtIGVuc3VlIGFmdGVyIGEgaHVudGVyIHN0dW1ibGVzIHVwb24gYSBkcnVnIGRlYWwgZ29uZSB3cm9uZyBhbmQgbW9yZSB0aGFuIHR3byBtaWxsaW9uIGRvbGxhcnMgaW4gY2FzaCBuZWFyIHRoZSBSaW8gR3JhbmRlLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3JzOjwvYj4KRXRoYW4gQ29lbiwKSm9lbCBDb2VuICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKVG9tbXkgTGVlIEpvbmVzLCAKSmF2aWVyIEJhcmRlbSwgCkpvc2ggQnJvbGluPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDEwNTIzNiI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAxMDUyMzYiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxMDUyMzYvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iUmVzZXJ2b2lyIERvZ3MiIHRpdGxlPSJSZXNlcnZvaXIgRG9ncyJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX0NCNTIyNzM2NTE2Xy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWm1FeE5tRXdZV0l0WW1Rek9TMDBZakE1TFRrMk1qa3RaakV5WkRFMVkyUXhOakExWGtFeVhrRnFjR2RlUVhWeU1UUXhOek16TkRJQC5fVjFfVVgxMjhfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDEwNTIzNiIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9ImRhMjkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDEwNTIzNi8/cmVmXz10dF9yZWNfdHQiCj48Yj5SZXNlcnZvaXIgRG9nczwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMTk5Mik8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQ2VydGlmaWNhdGU6IDE2CgogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgVGhyaWxsZXIgICAgICAgICAgCgogICAgICAgIAogICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1yYXRpbmciPgogICAgICAgICAgICAgICAKCiAgCgogIAo8ZGl2IGNsYXNzPSJyYXRpbmcgcmF0aW5nLWxpc3QiIGRhdGEtc3RhcmJhci1jbGFzcz0icmF0aW5nLWxpc3QiIGRhdGEtYXV0aD0iIiBkYXRhLXVzZXI9IiIgaWQ9InR0MDEwNTIzNnxpbWRifDguM3w4LjN8cDEzbnNpbXMtdGl0bGV8dHQwMTE4NzE1fHRpdGxlfG1haW4iIGRhdGEtZ2EtaWRlbnRpZmllcj0iIgp0aXRsZT0iVXNlcnMgcmF0ZWQgdGhpcyA4LjMvMTAgKDcyNSw4NTIgdm90ZXMpIC0gY2xpY2sgc3RhcnMgdG8gcmF0ZSIgPgo8c3BhbiBjbGFzcz0icmF0aW5nLWJnIj4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctaW1kYiAiIHN0eWxlPSJ3aWR0aDogMTE2LjJweCI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXN0YXJzIj4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4yPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4zPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj40PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj41PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj42PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj43PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj44PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj45PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xMDwvc3Bhbj48L2E+Cjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1yYXRpbmcgIj48c3BhbiBjbGFzcz0idmFsdWUiPjguMzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDAxMDUyMzYvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KQWZ0ZXIgYSBzaW1wbGUgamV3ZWxyeSBoZWlzdCBnb2VzIHRlcnJpYmx5IHdyb25nLCB0aGUgc3Vydml2aW5nIGNyaW1pbmFscyBiZWdpbiB0byBzdXNwZWN0IHRoYXQgb25lIG9mIHRoZW0gaXMgYSBwb2xpY2UgaW5mb3JtYW50LiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpRdWVudGluIFRhcmFudGlubyAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkhhcnZleSBLZWl0ZWwsIApUaW0gUm90aCwgCk1pY2hhZWwgTWFkc2VuPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDIwODA5MiI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAyMDgwOTIiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAyMDgwOTIvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iU25hdGNoIiB0aXRsZT0iU25hdGNoInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fQ0I1MjI3MzY1MTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVEEyTkRZeE9HWXRZalUxTWkwMFkyUXpMVGd4TVRRdE1XSTFNR0kwWkdRNU1tVTRYa0V5WGtGcWNHZGVRWFZ5TkRrM056VTJNVFFALl9WMV9VWTE5MF9DUjEsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQwMjA4MDkyIiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iZGEyOSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMjA4MDkyLz9yZWZfPXR0X3JlY190dCIKPjxiPlNuYXRjaDwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMjAwMCk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQ2VydGlmaWNhdGU6IDE2CgogICAgICAgICAgICAgICAgICAgICBDb21lZHkgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKCgogICAgICAgIAogICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1yYXRpbmciPgogICAgICAgICAgICAgICAKCiAgCgogIAo8ZGl2IGNsYXNzPSJyYXRpbmcgcmF0aW5nLWxpc3QiIGRhdGEtc3RhcmJhci1jbGFzcz0icmF0aW5nLWxpc3QiIGRhdGEtYXV0aD0iIiBkYXRhLXVzZXI9IiIgaWQ9InR0MDIwODA5MnxpbWRifDguM3w4LjN8cDEzbnNpbXMtdGl0bGV8dHQwMTE4NzE1fHRpdGxlfG1haW4iIGRhdGEtZ2EtaWRlbnRpZmllcj0iIgp0aXRsZT0iVXNlcnMgcmF0ZWQgdGhpcyA4LjMvMTAgKDY0Nyw1MTAgdm90ZXMpIC0gY2xpY2sgc3RhcnMgdG8gcmF0ZSIgPgo8c3BhbiBjbGFzcz0icmF0aW5nLWJnIj4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctaW1kYiAiIHN0eWxlPSJ3aWR0aDogMTE2LjJweCI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXN0YXJzIj4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4yPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4zPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj40PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj41PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj42PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj43PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj44PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj45PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xMDwvc3Bhbj48L2E+Cjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1yYXRpbmcgIj48c3BhbiBjbGFzcz0idmFsdWUiPjguMzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDAyMDgwOTIvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KVW5zY3J1cHVsb3VzIGJveGluZyBwcm9tb3RlcnMsIHZpb2xlbnQgYm9va21ha2VycywgYSBSdXNzaWFuIGdhbmdzdGVyLCBpbmNvbXBldGVudCBhbWF0ZXVyIHJvYmJlcnMsIGFuZCBzdXBwb3NlZGx5IEpld2lzaCBqZXdlbGVycyBmaWdodCB0byB0cmFjayBkb3duIGEgcHJpY2VsZXNzIHN0b2xlbiBkaWFtb25kLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpHdXkgUml0Y2hpZSAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkphc29uIFN0YXRoYW0sIApCcmFkIFBpdHQsIApCZW5pY2lvIERlbCBUb3JvPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDI2NjY5NyI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAyNjY2OTciPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAyNjY2OTcvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iS2lsbCBCaWxsOiBWb2wuIDEiIHRpdGxlPSJLaWxsIEJpbGw6IFZvbC4gMSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX0NCNTIyNzM2NTE2Xy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRVMU5EZzFNemc0TTE1Qk1sNUJhbkJuWGtGdFpUWXdNREV4T1RjMy5fVjFfVVgxMjhfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDI2NjY5NyIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9ImRhMjkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDI2NjY5Ny8/cmVmXz10dF9yZWNfdHQiCj48Yj5LaWxsIEJpbGw6IFZvbC4gMTwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMjAwMyk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQ2VydGlmaWNhdGU6IDE2CgogICAgICAgICAgICAgICAgICAgICBBY3Rpb24gICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIFRocmlsbGVyICAgICAgICAgIAoKICAgICAgICAKICAgIDwvZGl2PgogICAgICAgICAgICAgCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtcmF0aW5nIj4KICAgICAgICAgICAgICAgCgogIAoKICAKPGRpdiBjbGFzcz0icmF0aW5nIHJhdGluZy1saXN0IiBkYXRhLXN0YXJiYXItY2xhc3M9InJhdGluZy1saXN0IiBkYXRhLWF1dGg9IiIgZGF0YS11c2VyPSIiIGlkPSJ0dDAyNjY2OTd8aW1kYnw4LjF8OC4xfHAxM25zaW1zLXRpdGxlfHR0MDExODcxNXx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOC4xLzEwICg3OTcsMDIwIHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDExMy40cHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44LjE8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQwMjY2Njk3L3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+ClRoZSBCcmlkZSB3YWtlbnMgZnJvbSBhIGZvdXIteWVhciBjb21hLiBUaGUgY2hpbGQgc2hlIGNhcnJpZWQgaW4gaGVyIHdvbWIgaXMgZ29uZS4gTm93IHNoZSBtdXN0IHdyZWFrIHZlbmdlYW5jZSBvbiB0aGUgdGVhbSBvZiBhc3Nhc3NpbnMgd2hvIGJldHJheWVkIGhlciAtIGEgdGVhbSBzaGUgd2FzIG9uY2UgcGFydCBvZi4gICAgPC9wPgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy1sb3dlciI+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXRlZXRoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgIAogPGRpdiBjbGFzcz0icmVjLWRpcmVjdG9yIHJlYy1lbGxpcHNpcyI+CiAgICAgIDxiPkRpcmVjdG9yOjwvYj4KUXVlbnRpbiBUYXJhbnRpbm8gIDwvZGl2Pgo8ZGl2IGNsYXNzPSJyZWMtYWN0b3IgcmVjLWVsbGlwc2lzIj4gPHNwYW4+CiAgICA8Yj5TdGFyczo8L2I+IApVbWEgVGh1cm1hbiwgCkRhdmlkIENhcnJhZGluZSwgCkRhcnlsIEhhbm5haDwvc3Bhbj48L2Rpdj4gCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAKICAgICAgPC9kaXY+CiAgICAgCiAgICAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcnZpZXciIGRhdGEtdGNvbnN0PSJ0dDEyMDU0ODkiPgogICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX3Bvc3RlciIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1IiBkYXRhLXRjb25zdD0idHQxMjA1NDg5Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQxMjA1NDg5Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTkwIiB3aWR0aD0iMTI4IiBhbHQ9IkdyYW4gVG9yaW5vIiB0aXRsZT0iR3JhbiBUb3Jpbm8ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9DQjUyMjczNjUxNl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UUXlNVGN6TVRBeE1sNUJNbDVCYW5CblhrRnRaVGN3T1RjMU9ERTBNZ0BALl9WMV9VWTE5MF9DUjMsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQxMjA1NDg5IiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iZGEyOSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMjA1NDg5Lz9yZWZfPXR0X3JlY190dCIKPjxiPkdyYW4gVG9yaW5vPC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigyMDA4KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBDZXJ0aWZpY2F0ZTogMTIKCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQxMjA1NDg5fGltZGJ8OC4yfDguMnxwMTNuc2ltcy10aXRsZXx0dDAxMTg3MTV8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguMi8xMCAoNjAzLDAxMCB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMTQuOHB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC4yPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MTIwNTQ4OS92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpEaXNncnVudGxlZCBLb3JlYW4gV2FyIHZldGVyYW4gV2FsdCBLb3dhbHNraSBzZXRzIG91dCB0byByZWZvcm0gaGlzIG5laWdoYm9yLCBhIEhtb25nIHRlZW5hZ2VyIHdobyB0cmllZCB0byBzdGVhbCBLb3dhbHNraSdzIHByaXplZCBwb3NzZXNzaW9uOiBhIDE5NzIgR3JhbiBUb3Jpbm8uICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+CkNsaW50IEVhc3R3b29kICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKQ2xpbnQgRWFzdHdvb2QsIApCZWUgVmFuZywgCkNocmlzdG9waGVyIENhcmxleTwvc3Bhbj48L2Rpdj4gCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAKICAgICAgPC9kaXY+CiAgICAgCiAgICAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcnZpZXciIGRhdGEtdGNvbnN0PSJ0dDA0Njk0OTQiPgogICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX3Bvc3RlciIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQwMTE4NzE1IiBkYXRhLXRjb25zdD0idHQwNDY5NDk0Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwNDY5NDk0Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTkwIiB3aWR0aD0iMTI4IiBhbHQ9IlRoZXJlIFdpbGwgQmUgQmxvb2QiIHRpdGxlPSJUaGVyZSBXaWxsIEJlIEJsb29kInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fQ0I1MjI3MzY1MTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakF4T0RRNE1EVTVOVjVCTWw1QmFuQm5Ya0Z0WlRjd01EVTRNalUxTVFAQC5fVjFfVVkxOTBfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDQ2OTQ5NCIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9ImRhMjkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDQ2OTQ5NC8/cmVmXz10dF9yZWNfdHQiCj48Yj5UaGVyZSBXaWxsIEJlIEJsb29kPC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigyMDA3KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBDZXJ0aWZpY2F0ZTogMTYKCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgSGlzdG9yeSAgICAgICAgICAKCgogICAgICAgIAogICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1yYXRpbmciPgogICAgICAgICAgICAgICAKCiAgCgogIAo8ZGl2IGNsYXNzPSJyYXRpbmcgcmF0aW5nLWxpc3QiIGRhdGEtc3RhcmJhci1jbGFzcz0icmF0aW5nLWxpc3QiIGRhdGEtYXV0aD0iIiBkYXRhLXVzZXI9IiIgaWQ9InR0MDQ2OTQ5NHxpbWRifDguMXw4LjF8cDEzbnNpbXMtdGl0bGV8dHQwMTE4NzE1fHRpdGxlfG1haW4iIGRhdGEtZ2EtaWRlbnRpZmllcj0iIgp0aXRsZT0iVXNlcnMgcmF0ZWQgdGhpcyA4LjEvMTAgKDQwNywwMzcgdm90ZXMpIC0gY2xpY2sgc3RhcnMgdG8gcmF0ZSIgPgo8c3BhbiBjbGFzcz0icmF0aW5nLWJnIj4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctaW1kYiAiIHN0eWxlPSJ3aWR0aDogMTEzLjRweCI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXN0YXJzIj4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4yPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4zPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj40PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj41PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj42PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj43PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj44PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj45PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xMDwvc3Bhbj48L2E+Cjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1yYXRpbmcgIj48c3BhbiBjbGFzcz0idmFsdWUiPjguMTwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDA0Njk0OTQvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KQSBzdG9yeSBvZiBmYW1pbHksIHJlbGlnaW9uLCBoYXRyZWQsIG9pbCBhbmQgbWFkbmVzcywgZm9jdXNpbmcgb24gYSB0dXJuLW9mLXRoZS1jZW50dXJ5IHByb3NwZWN0b3IgaW4gdGhlIGVhcmx5IGRheXMgb2YgdGhlIGJ1c2luZXNzLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpQYXVsIFRob21hcyBBbmRlcnNvbiAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkRhbmllbCBEYXktTGV3aXMsIApQYXVsIERhbm8sIApDaWFyw6FuIEhpbmRzPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDA5MzA1OCI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAwOTMwNTgiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAwOTMwNTgvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iRnVsbCBNZXRhbCBKYWNrZXQiIHRpdGxlPSJGdWxsIE1ldGFsIEphY2tldCJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX0NCNTIyNzM2NTE2Xy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTnpjMlpUaGtPR0l0WkdZNVlTMDBNRFl3TFRreU9UQXRORFJtWldJd01HUmhZVGMwTDJsdFlXZGxYa0V5WGtGcWNHZGVRWFZ5TmpVME9UUTBPVFlALl9WMV9VWDEyOF9DUjAsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQwMDkzMDU4IiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iZGEyOSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMDkzMDU4Lz9yZWZfPXR0X3JlY190dCIKPjxiPkZ1bGwgTWV0YWwgSmFja2V0PC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigxOTg3KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBDZXJ0aWZpY2F0ZTogMTYKCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgV2FyICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwMDkzMDU4fGltZGJ8OC4zfDguM3xwMTNuc2ltcy10aXRsZXx0dDAxMTg3MTV8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguMy8xMCAoNTMwLDQzMyB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMTYuMnB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC4zPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDA5MzA1OC92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpBIHByYWdtYXRpYyBVLlMuIE1hcmluZSBvYnNlcnZlcyB0aGUgZGVodW1hbml6aW5nIGVmZmVjdHMgdGhlIFZpZXRuYW0gV2FyIGhhcyBvbiBoaXMgZmVsbG93IHJlY3J1aXRzIGZyb20gdGhlaXIgYnJ1dGFsIGJvb3QgY2FtcCB0cmFpbmluZyB0byB0aGUgYmxvb2R5IHN0cmVldCBmaWdodGluZyBpbiBIdWUuICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+ClN0YW5sZXkgS3VicmljayAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCk1hdHRoZXcgTW9kaW5lLCAKUi4gTGVlIEVybWV5LCAKVmluY2VudCBEJ09ub2ZyaW88L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQwMTIwNTg2Ij4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDEyMDU4NiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDEyMDU4Ni8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJBbWVyaWNhbiBIaXN0b3J5IFgiIHRpdGxlPSJBbWVyaWNhbiBIaXN0b3J5IFgic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9DQjUyMjczNjUxNl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QlpqQTBNVE00TVRRdE56WTVNQzAwTnpZM0xXSTFaVGd0WXpjeE1qa3lNelU0TURaaVhrRXlYa0ZxY0dkZVFYVnlORFl5TURrNU1UVUAuX1YxX1VZMTkwX0NSMCwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDAxMjA1ODYiIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSJkYTI5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMjA1ODYvP3JlZl89dHRfcmVjX3R0Igo+PGI+QW1lcmljYW4gSGlzdG9yeSBYPC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigxOTk4KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBDZXJ0aWZpY2F0ZTogMTYKCiAgICAgICAgICAgICAgICAgICAgIENyaW1lICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgRHJhbWEgICAgICAgICAgCgoKICAgICAgICAKICAgIDwvZGl2PgogICAgICAgICAgICAgCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtcmF0aW5nIj4KICAgICAgICAgICAgICAgCgogIAoKICAKPGRpdiBjbGFzcz0icmF0aW5nIHJhdGluZy1saXN0IiBkYXRhLXN0YXJiYXItY2xhc3M9InJhdGluZy1saXN0IiBkYXRhLWF1dGg9IiIgZGF0YS11c2VyPSIiIGlkPSJ0dDAxMjA1ODZ8aW1kYnw4LjV8OC41fHAxM25zaW1zLXRpdGxlfHR0MDExODcxNXx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOC41LzEwICg4NDcsMjA5IHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDExOXB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC41PC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDEyMDU4Ni92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpBIGZvcm1lciBuZW8tbmF6aSBza2luaGVhZCB0cmllcyB0byBwcmV2ZW50IGhpcyB5b3VuZ2VyIGJyb3RoZXIgZnJvbSBnb2luZyBkb3duIHRoZSBzYW1lIHdyb25nIHBhdGggdGhhdCBoZSBkaWQuICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+ClRvbnkgS2F5ZSAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkVkd2FyZCBOb3J0b24sIApFZHdhcmQgRnVybG9uZywgCkJldmVybHkgRCdBbmdlbG88L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQwMTEwOTEyIj4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDExMDkxMiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDExMDkxMi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJQdWxwIEZpY3Rpb24iIHRpdGxlPSJQdWxwIEZpY3Rpb24ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9DQjUyMjczNjUxNl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1Ua3hNVEE1T1RBek1sNUJNbDVCYW5CblhrRnRaVGd3TmpBNU1EYzNOakVALl9WMV9VWDEyOF9DUjAsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQwMTEwOTEyIiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iZGEyOSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTEwOTEyLz9yZWZfPXR0X3JlY190dCIKPjxiPlB1bHAgRmljdGlvbjwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMTk5NCk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQ2VydGlmaWNhdGU6IDE2CgogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwMTEwOTEyfGltZGJ8OC45fDguOXxwMTNuc2ltcy10aXRsZXx0dDAxMTg3MTV8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguOS8xMCAoMSw0MzgsNzM4IHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDEyNC42cHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44Ljk8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQwMTEwOTEyL3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+ClRoZSBsaXZlcyBvZiB0d28gbW9iIGhpdCBtZW4sIGEgYm94ZXIsIGEgZ2FuZ3N0ZXIncyB3aWZlLCBhbmQgYSBwYWlyIG9mIGRpbmVyIGJhbmRpdHMgaW50ZXJ0d2luZSBpbiBmb3VyIHRhbGVzIG9mIHZpb2xlbmNlIGFuZCByZWRlbXB0aW9uLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpRdWVudGluIFRhcmFudGlubyAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkpvaG4gVHJhdm9sdGEsIApVbWEgVGh1cm1hbiwgClNhbXVlbCBMLiBKYWNrc29uPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDA5OTY4NSI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDAxMTg3MTUiIGRhdGEtdGNvbnN0PSJ0dDAwOTk2ODUiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAwOTk2ODUvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iR29vZGZlbGxhcyIgdGl0bGU9Ikdvb2RmZWxsYXMic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9DQjUyMjczNjUxNl8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk5UaGpNemN6TWpjdFptSXdPQzAwTlRRNExXSmhaV0l0WkRkaE5UazVaVGRpTVdGbFhrRXlYa0ZxY0dkZVFYVnlORFl5TURrNU1UVUAuX1YxX1VYMTI4X0NSMCwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDAwOTk2ODUiIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSJkYTI5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAwOTk2ODUvP3JlZl89dHRfcmVjX3R0Igo+PGI+R29vZGZlbGxhczwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMTk5MCk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQ2VydGlmaWNhdGU6IDE2CgogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwMDk5Njg1fGltZGJ8OC43fDguN3xwMTNuc2ltcy10aXRsZXx0dDAxMTg3MTV8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguNy8xMCAoNzkyLDQ3MiB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMjEuOHB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC43PC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDA5OTY4NS92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpUaGUgc3Rvcnkgb2YgSGVucnkgSGlsbCBhbmQgaGlzIGxpZmUgdGhyb3VnaCB0aGUgdGVlbiB5ZWFycyBpbnRvIHRoZSB5ZWFycyBvZiBtYWZpYSwgY292ZXJpbmcgaGlzIHJlbGF0aW9uc2hpcCB3aXRoIHdpZmUgS2FyZW4gSGlsbCBhbmQgaGlzIE1vYiBwYXJ0bmVycyBKaW1teSBDb253YXkgYW5kIFRvbW15IERlVml0dG8gaW4gdGhlIEl0YWxpYW4tQW1lcmljYW4gY3JpbWUgc3luZGljYXRlLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpNYXJ0aW4gU2NvcnNlc2UgIDwvZGl2Pgo8ZGl2IGNsYXNzPSJyZWMtYWN0b3IgcmVjLWVsbGlwc2lzIj4gPHNwYW4+CiAgICA8Yj5TdGFyczo8L2I+IApSb2JlcnQgRGUgTmlybywgClJheSBMaW90dGEsIApKb2UgUGVzY2k8L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQwOTkzODQ2Ij4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MDExODcxNSIgZGF0YS10Y29uc3Q9InR0MDk5Mzg0NiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDk5Mzg0Ni8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJUaGUgV29sZiBvZiBXYWxsIFN0cmVldCIgdGl0bGU9IlRoZSBXb2xmIG9mIFdhbGwgU3RyZWV0InNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fQ0I1MjI3MzY1MTZfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakl4TWpneE5UazBNRjVCTWw1QmFuQm5Ya0Z0WlRnd05qSXlPVGcyTURFQC5fVjFfVVkxOTBfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDk5Mzg0NiIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9ImRhMjkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDk5Mzg0Ni8/cmVmXz10dF9yZWNfdHQiCj48Yj5UaGUgV29sZiBvZiBXYWxsIFN0cmVldDwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMjAxMyk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgQ2VydGlmaWNhdGU6IDE2CgogICAgICAgICAgICAgICAgICAgICBCaW9ncmFwaHkgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBDb21lZHkgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwOTkzODQ2fGltZGJ8OC4yfDguMnxwMTNuc2ltcy10aXRsZXx0dDAxMTg3MTV8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguMi8xMCAoODgwLDg0OSB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMTQuOHB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC4yPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDk5Mzg0Ni92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpCYXNlZCBvbiB0aGUgdHJ1ZSBzdG9yeSBvZiA8YSBocmVmPSIvbmFtZS9ubTAwNjc3ODkiPkpvcmRhbiBCZWxmb3J0PC9hPiwgZnJvbSBoaXMgcmlzZSB0byBhIHdlYWx0aHkgc3RvY2stYnJva2VyIGxpdmluZyB0aGUgaGlnaCBsaWZlIHRvIGhpcyBmYWxsIGludm9sdmluZyBjcmltZSwgY29ycnVwdGlvbiBhbmQgdGhlIGZlZGVyYWwgZ292ZXJubWVudC4gICAgPC9wPgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy1sb3dlciI+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXRlZXRoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgIAogPGRpdiBjbGFzcz0icmVjLWRpcmVjdG9yIHJlYy1lbGxpcHNpcyI+CiAgICAgIDxiPkRpcmVjdG9yOjwvYj4KTWFydGluIFNjb3JzZXNlICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKTGVvbmFyZG8gRGlDYXByaW8sIApKb25haCBIaWxsLCAKTWFyZ290IFJvYmJpZTwvc3Bhbj48L2Rpdj4gCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAKICAgICAgPC9kaXY+CiAgICAgCiAgICAKICAgPC9kaXY+CiAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PiAgCiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVJlY3NXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZVJlY3NXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVSZWNzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiVGl0bGVDYXN0V2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVDYXN0V2lkZ2V0X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KICAgIDxkaXYgY2xhc3M9ImFydGljbGUiIGlkPSJ0aXRsZUNhc3QiPgogICAgPHNwYW4gY2xhc3M9cmlnaHRjb3JuZXJsaW5rID4KICAgICAgICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT1lZGl0JnJlZl89dHRfY2wiCnJlbD0ibG9naW4iPkVkaXQ8L2E+CiAgICA8L3NwYW4+CiAgICAgICAgPGgyPkNhc3Q8L2gyPgogICAgICAgIAogICAgICAgIDx0YWJsZSBjbGFzcz0iY2FzdF9saXN0Ij4gICAgCiAgPHRyPjx0ZCBjb2xzcGFuPSI0IiBjbGFzcz0iY2FzdGxpc3RfbGFiZWwiPkNhc3Qgb3ZlcnZpZXcsIGZpcnN0IGJpbGxlZCBvbmx5OjwvdGQ+PC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwMzEzLz9yZWZfPXR0X2NsX2kxIgo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iSmVmZiBCcmlkZ2VzIiB0aXRsZT0iSmVmZiBCcmlkZ2VzInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX0NCNTIyNzM2MTcxXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk5UVTFOak00TURZek1sNUJNbDVCYW5CblhrRnRaVGN3TWpJd01qTXlNd0BALl9WMV9VWTQ0X0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDMxMy8/cmVmXz10dF9jbF90MSIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkplZmYgQnJpZGdlczwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMDAzNTE4Lz9yZWZfPXR0X2NsX3QxIiA+VGhlIER1ZGU8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDA0MjIvP3JlZl89dHRfY2xfaTIiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJKb2huIEdvb2RtYW4iIHRpdGxlPSJKb2huIEdvb2RtYW4ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fQ0I1MjI3MzYxNzFfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpJMk1USXpPRFExTTE1Qk1sNUJhbkJuWGtGdFpUY3dOakk0TXpjMU9BQEAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwNDIyLz9yZWZfPXR0X2NsX3QyIgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+Sm9obiBHb29kbWFuPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAwMDM1MjEvP3JlZl89dHRfY2xfdDIiID5XYWx0ZXIgU29iY2hhazwvYT4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwMTk0Lz9yZWZfPXR0X2NsX2kzIgo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iSnVsaWFubmUgTW9vcmUiIHRpdGxlPSJKdWxpYW5uZSBNb29yZSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9DQjUyMjczNjE3MV8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVE01TkRJMU1qRTJNbDVCTWw1QmFuQm5Ya0Z0WlRnd05ERTBOemswTURFQC5fVjFfVVgzMl9DUjAsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJhY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDAxOTQvP3JlZl89dHRfY2xfdDMiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5KdWxpYW5uZSBNb29yZTwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMDAzNTE5Lz9yZWZfPXR0X2NsX3QzIiA+TWF1ZGUgTGVib3dza2k8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDAxMTQvP3JlZl89dHRfY2xfaTQiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJTdGV2ZSBCdXNjZW1pIiB0aXRsZT0iU3RldmUgQnVzY2VtaSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9DQjUyMjczNjE3MV8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJPRGMwTlRVM05EQTRNMTVCTWw1QmFuQm5Ya0Z0WlRjd05Ea3hOelF4TkFAQC5fVjFfVVk0NF9DUjAsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJhY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDAxMTQvP3JlZl89dHRfY2xfdDQiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5TdGV2ZSBCdXNjZW1pPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAwMDM1MTcvP3JlZl89dHRfY2xfdDQiID5UaGVvZG9yZSBEb25hbGQgJ0Rvbm55JyBLZXJhYmF0c29zPC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9Im9kZCI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAzOTk2NjMvP3JlZl89dHRfY2xfaTUiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJEYXZpZCBIdWRkbGVzdG9uIiB0aXRsZT0iRGF2aWQgSHVkZGxlc3RvbiJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9DQjUyMjczNjE3MV8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVGs0TkRNd09UVXhNRjVCTWw1QmFuQm5Ya0Z0WlRjd01qRXpNell3T0FAQC5fVjFfVVk0NF9DUjIsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJhY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAzOTk2NjMvP3JlZl89dHRfY2xfdDUiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5EYXZpZCBIdWRkbGVzdG9uPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAwMDM1MjgvP3JlZl89dHRfY2xfdDUiID5UaGUgQmlnIExlYm93c2tpPC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwNDUwLz9yZWZfPXR0X2NsX2k2Igo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iUGhpbGlwIFNleW1vdXIgSG9mZm1hbiIgdGl0bGU9IlBoaWxpcCBTZXltb3VyIEhvZmZtYW4ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fQ0I1MjI3MzYxNzFfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRRME5UQTFOVGczTWw1Qk1sNUJhbkJuWGtGdFpUY3dOemt4TnpneE53QEAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwNDUwLz9yZWZfPXR0X2NsX3Q2IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+UGhpbGlwIFNleW1vdXIgSG9mZm1hbjwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMDAzNTIzLz9yZWZfPXR0X2NsX3Q2IiA+QnJhbmR0PC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9Im9kZCI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDUzNDYvP3JlZl89dHRfY2xfaTciCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJUYXJhIFJlaWQiIHRpdGxlPSJUYXJhIFJlaWQic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fQ0I1MjI3MzYxNzFfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTmprd05EZ3lNek14Tmw1Qk1sNUJhbkJuWGtGdFpUY3dNRFl5TWpjME9RQEAuX1YxX1VZNDRfQ1I0LDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDA1MzQ2Lz9yZWZfPXR0X2NsX3Q3IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+VGFyYSBSZWlkPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAwMDM1MjAvP3JlZl89dHRfY2xfdDciID5CdW5ueSBMZWJvd3NraTwvYT4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJldmVuIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDYwMDY1Ny8/cmVmXz10dF9jbF9pOCIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IlBoaWxpcCBNb29uIiB0aXRsZT0iUGhpbGlwIE1vb24ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fQ0I1MjI3MzYxNzFfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCT1RNd05UazBNakkzTUY1Qk1sNUJhbkJuWGtGdFpUY3dOREEwTURRMU5RQEAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wNjAwNjU3Lz9yZWZfPXR0X2NsX3Q4IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+UGhpbGlwIE1vb248L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICBXb28sIFRyZWVob3JuIFRodWcgCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wNjcxMDMyLz9yZWZfPXR0X2NsX2k5Igo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iTWFyayBQZWxsZWdyaW5vIiB0aXRsZT0iTWFyayBQZWxsZWdyaW5vInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX0NCNTIyNzM2MTcxXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UWTVNRGMwTWpnNE4xNUJNbDVCYW5CblhrRnRaVGN3T1RNeU5UVXlNUUBALl9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDY3MTAzMi8/cmVmXz10dF9jbF90OSIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPk1hcmsgUGVsbGVncmlubzwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMDI4ODMxLz9yZWZfPXR0X2NsX3Q5IiA+QmxvbmQgVHJlZWhvcm4gVGh1ZzwvYT4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJldmVuIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMTc4MC8/cmVmXz10dF9jbF9pMTAiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJQZXRlciBTdG9ybWFyZSIgdGl0bGU9IlBldGVyIFN0b3JtYXJlInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX0NCNTIyNzM2MTcxXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk9UVXlNRFEwTVRFeU5GNUJNbDVCYW5CblhrRnRaVFl3TkRZeE1Ea3ouX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAxNzgwLz9yZWZfPXR0X2NsX3QxMCIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPlBldGVyIFN0b3JtYXJlPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgTmloaWxpc3QgIzEsIFVsaSBLdW5rZWwgLyAgCiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMTYxNDI1Lz9yZWZfPXR0X2NsX3QxMCIgPidLYXJsIEh1bmd1cyc8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0ib2RkIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDI4MTM1OS8/cmVmXz10dF9jbF9pMTEiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJGbGVhIiB0aXRsZT0iRmxlYSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9DQjUyMjczNjE3MV8ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakV6TURVNU5qQXpNMTVCTWw1QmFuQm5Ya0Z0WlRjd09UazJPRE13TWdAQC5fVjFfVVgzMl9DUjAsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJhY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAyODEzNTkvP3JlZl89dHRfY2xfdDExIgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+RmxlYTwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIE5paGlsaXN0ICMyLCBLaWVmZmVyIAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTA5MDEwMjQvP3JlZl89dHRfY2xfaTEyIgo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iVG9yc3RlbiBWb2dlcyIgdGl0bGU9IlRvcnN0ZW4gVm9nZXMic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fQ0I1MjI3MzYxNzFfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpBeE5ERXdPRGM0T1Y1Qk1sNUJhbkJuWGtGdFpUY3dNRFkwT1RnNU9BQEAuX1YxX1VZNDRfQ1I2LDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wOTAxMDI0Lz9yZWZfPXR0X2NsX3QxMiIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPlRvcnN0ZW4gVm9nZXM8L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICBOaWhpbGlzdCAjMywgRnJhbnogCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMzE5NTQxLz9yZWZfPXR0X2NsX2kxMyIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IkppbW1pZSBEYWxlIEdpbG1vcmUiIHRpdGxlPSJKaW1taWUgRGFsZSBHaWxtb3JlInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX0NCNTIyNzM2MTcxXy5wbmciIGNsYXNzPSIiIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDMxOTU0MS8/cmVmXz10dF9jbF90MTMiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5KaW1taWUgRGFsZSBHaWxtb3JlPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAwMDM1MjkvP3JlZl89dHRfY2xfdDEzIiA+U21va2V5PC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wNDQ0OTQwLz9yZWZfPXR0X2NsX2kxNCIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IkphY2sgS2VobGVyIiB0aXRsZT0iSmFjayBLZWhsZXIic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fQ0I1MjI3MzYxNzFfLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRNMU16ZzRPVGsyTVY1Qk1sNUJhbkJuWGtGdFpUWXdNREkwTmpFei5fVjFfVVk0NF9DUjE0LDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wNDQ0OTQwLz9yZWZfPXR0X2NsX3QxNCIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkphY2sgS2VobGVyPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgTWFydHkgCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAxODA2Lz9yZWZfPXR0X2NsX2kxNSIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IkpvaG4gVHVydHVycm8iIHRpdGxlPSJKb2huIFR1cnR1cnJvInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX0NCNTIyNzM2MTcxXy5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk56WXdOamd3TWpNeE1GNUJNbDVCYW5CblhrRnRaVGN3TmpVd09UYzNOUUBALl9WMV9VWTQ0X0NSMiwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMTgwNi8/cmVmXz10dF9jbF90MTUiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5Kb2huIFR1cnR1cnJvPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAwMDM1MjIvP3JlZl89dHRfY2xfdDE1IiA+SmVzdXMgUXVpbnRhbmE8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgICAgICA8ZGl2IGNsYXNzPSJzZWUtbW9yZSI+CiAgICAgICAgICAgIDxhIGhyZWY9ImZ1bGxjcmVkaXRzP3JlZl89dHRfY2xfc20jY2FzdCIKPlNlZSBmdWxsIGNhc3Q8L2E+Jm5ic3A7JnJhcXVvOwogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZUNhc3RXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZUNhc3RXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVDYXN0V2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCgogICAgCiAgICAKICAgIAoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBtYWluZGV0YWlsc19jZW50ZXJfYWQgLS0+CgkKCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZVN0b3J5bGluZVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlU3RvcnlsaW5lV2lkZ2V0X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KICAgIDxkaXYgY2xhc3MgPSAiYXJ0aWNsZSIgaWQ9InRpdGxlU3RvcnlMaW5lIj4KICAgIDxzcGFuIGNsYXNzPXJpZ2h0Y29ybmVybGluayA+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9ZWRpdCZyZWZfPXR0X3N0cnkiCnJlbD0ibG9naW4iPkVkaXQ8L2E+CiAgICA8L3NwYW4+CiAgICAKICAgICAgICA8aDI+U3RvcnlsaW5lPC9oMj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJpbmxpbmUgY2Fud3JhcCIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgPHA+CldoZW4gIlRoZSBEdWRlIiBMZWJvd3NraSBpcyBtaXN0YWtlbiBmb3IgYSBtaWxsaW9uYWlyZSBMZWJvd3NraSwgdHdvIHRodWdzIHVyaW5hdGUgb24gaGlzIHJ1ZyB0byBjb2VyY2UgaGltIGludG8gcGF5aW5nIGEgZGVidCBoZSBrbm93cyBub3RoaW5nIGFib3V0LiBXaGlsZSBhdHRlbXB0aW5nIHRvIGdhaW4gcmVjb21wZW5zZSBmb3IgdGhlIHJ1aW5lZCBydWcgZnJvbSBoaXMgd2VhbHRoeSBjb3VudGVycGFydCwgaGUgYWNjZXB0cyBhIG9uZS10aW1lIGpvYiB3aXRoIGhpZ2ggcGF5LW9mZi4gSGUgZW5saXN0cyB0aGUgaGVscCBvZiBoaXMgYm93bGluZyBidWRkeSwgV2FsdGVyLCBhIGd1bi10b3RpbmcgSmV3aXNoLWNvbnZlcnQgd2l0aCBhbmdlciBpc3N1ZXMuIERlY2VwdGlvbiBsZWFkcyB0byBtb3JlIHRyb3VibGUsIGFuZCBpdCBzb29uIHNlZW1zIHRoYXQgZXZlcnlvbmUgZnJvbSBwb3JuIGVtcGlyZSB0eWNvb25zIHRvIG5paGlsaXN0cyB3YW50IHNvbWV0aGluZyBmcm9tIFRoZSBEdWRlLiAgICAgICAgICAgICAgICA8ZW0gY2xhc3M9Im5vYnIiPldyaXR0ZW4gYnkKPGEgaHJlZj0iL3NlYXJjaC90aXRsZT9wbG90X2F1dGhvcj1KLiUyMExha2Umdmlldz1zaW1wbGUmc29ydD1hbHBoYSZyZWZfPXR0X3N0cnlfcGwiCj5KLiBMYWtlPC9hPjwvZW0+ICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPiAKICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvcGxvdHN1bW1hcnk/cmVmXz10dF9zdHJ5X3BsIgo+UGxvdCBTdW1tYXJ5PC9hPgogICAgPHNwYW4+fDwvc3Bhbj4KICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3N5bm9wc2lzP3JlZl89dHRfc3RyeV9wbCIKPlBsb3QgU3lub3BzaXM8L2E+CiAgICA8L3NwYW4+CiAgICAgICAgPGhyIC8+CiAgICAgICAgPGRpdiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIGNhbndyYXAiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0iaW5saW5lIj5QbG90IEtleXdvcmRzOjwvaDQ+CjxhIGhyZWY9Ii9rZXl3b3JkL3J1Zz9yZWZfPXR0X3N0cnlfa3ciCj4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ia2V5d29yZHMiPnJ1Zzwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CjxhIGhyZWY9Ii9rZXl3b3JkL25paGlsaXNtP3JlZl89dHRfc3RyeV9rdyIKPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+bmloaWxpc208L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj58PC9zcGFuPgo8YSBocmVmPSIva2V5d29yZC93aGl0ZS1ydXNzaWFuP3JlZl89dHRfc3RyeV9rdyIKPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+d2hpdGUgcnVzc2lhbjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CjxhIGhyZWY9Ii9rZXl3b3JkL2RlYXRoP3JlZl89dHRfc3RyeV9rdyIKPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+ZGVhdGg8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj58PC9zcGFuPgo8YSBocmVmPSIva2V5d29yZC9kcnVnP3JlZl89dHRfc3RyeV9rdyIKPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+ZHJ1Zzwvc3Bhbj48L2E+CiAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+Jm5ic3A7PG5vYnI+PGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9rZXl3b3Jkcz9yZWZfPXR0X3N0cnlfa3ciCj5TZWUgQWxsICgzMTMpPC9hPiZuYnNwOyZyYXF1bzs8L25vYnI+CgogICAgICAgIDwvZGl2PiAgICAgIAogICAgICAgIDxociAvPgogICAgICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0iaW5saW5lIj5UYWdsaW5lczo8L2g0PgpIZXIgbGlmZSB3YXMgaW4gdGhlaXIgaGFuZHMuIE5vdyBoZXIgdG9lIGlzIGluIHRoZSBtYWlsLiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS90YWdsaW5lcz9yZWZfPXR0X3N0cnlfdGciCj4gU2VlIG1vcmU8L2E+Jm5ic3A7JnJhcXVvOwogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICAgIDxociAvPgogICAgICAgIDxkaXYgY2xhc3M9InNlZS1tb3JlIGlubGluZSBjYW53cmFwIiBpdGVtcHJvcD0iZ2VucmUiPgogICAgICAgICAgICA8aDQgY2xhc3M9ImlubGluZSI+R2VucmVzOjwvaDQ+CjxhIGhyZWY9Ii9nZW5yZS9Db21lZHk/cmVmXz10dF9zdHJ5X2duciIKPiBDb21lZHk8L2E+Jm5ic3A7PHNwYW4+fDwvc3Bhbj4KPGEgaHJlZj0iL2dlbnJlL0NyaW1lP3JlZl89dHRfc3RyeV9nbnIiCj4gQ3JpbWU8L2E+CiAgICAgICAgPC9kaXY+ICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICA8aHIvPgogICAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgICAgICAgICA8aDQgY2xhc3M9ImlubGluZSI+Q2VydGlmaWNhdGU6PC9oND4KICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImNvbnRlbnRSYXRpbmciPjEyPC9zcGFuPgo8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+ICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSI+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvcGFyZW50YWxndWlkZT9yZWZfPXR0X3N0cnlfcGcjY2VydGlmaWNhdGlvbiIKPiBTZWUgYWxsIGNlcnRpZmljYXRpb25zPC9hPiZuYnNwOyZyYXF1bzsKICAgICAgICAgICAgPC9zcGFuPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgICAgIDxoNCBjbGFzcz0iaW5saW5lIj5QYXJlbnRzIEd1aWRlOjwvaDQ+CiAgICAgICAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSIgaXRlbXByb3A9ImF1ZGllbmNlIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0F1ZGllbmNlIj4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9wYXJlbnRhbGd1aWRlP3JlZl89dHRfc3RyeV9wZyIKaXRlbXByb3A9J3VybCc+IFZpZXcgY29udGVudCBhZHZpc29yeTwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgPC9zcGFuPgogICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlU3RvcnlsaW5lV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVTdG9yeWxpbmVXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVTdG9yeWxpbmVXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgoKICAgIAogICAgCiAgICAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiVGl0bGVEZXRhaWxzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVEZXRhaWxzV2lkZ2V0X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KICAgIAogICAgPGRpdiBjbGFzcyA9ICJhcnRpY2xlIiBpZD0idGl0bGVEZXRhaWxzIj4KICAgIDxzcGFuIGNsYXNzPXJpZ2h0Y29ybmVybGluayA+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9ZWRpdCZyZWZfPXR0X2R0X2R0IgpyZWw9ImxvZ2luIj5FZGl0PC9hPgogICAgPC9zcGFuPgogICAgICAgIDxoMj5EZXRhaWxzPC9oMj4KICAKICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICA8aDQgY2xhc3M9ImlubGluZSI+Q291bnRyeTo8L2g0PgogICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/Y291bnRyeV9vZl9vcmlnaW49dXMmcmVmXz10dF9kdF9kdCIKaXRlbXByb3A9J3VybCc+VVNBPC9hPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KICAgICAgICA8YSBocmVmPSIvc2VhcmNoL3RpdGxlP2NvdW50cnlfb2Zfb3JpZ2luPWdiJnJlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPlVLPC9hPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkxhbmd1YWdlOjwvaDQ+CiAgICAgICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT90aXRsZV90eXBlPWZlYXR1cmUmcHJpbWFyeV9sYW5ndWFnZT1lbiZzb3J0PW1vdmllbWV0ZXIsYXNjJnJlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPkVuZ2xpc2g8L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KICAgICAgICA8YSBocmVmPSIvc2VhcmNoL3RpdGxlP3RpdGxlX3R5cGU9ZmVhdHVyZSZwcmltYXJ5X2xhbmd1YWdlPWRlJnNvcnQ9bW92aWVtZXRlcixhc2MmcmVmXz10dF9kdF9kdCIKaXRlbXByb3A9J3VybCc+R2VybWFuPC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT90aXRsZV90eXBlPWZlYXR1cmUmcHJpbWFyeV9sYW5ndWFnZT1oZSZzb3J0PW1vdmllbWV0ZXIsYXNjJnJlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPkhlYnJldzwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/dGl0bGVfdHlwZT1mZWF0dXJlJnByaW1hcnlfbGFuZ3VhZ2U9ZXMmc29ydD1tb3ZpZW1ldGVyLGFzYyZyZWZfPXR0X2R0X2R0IgppdGVtcHJvcD0ndXJsJz5TcGFuaXNoPC9hPgogICAgPC9kaXY+CiAgCiAgICAKICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICA8aDQgY2xhc3M9ImlubGluZSI+UmVsZWFzZSBEYXRlOjwvaDQ+IDE0IE1heSAxOTk4IChOZXRoZXJsYW5kcykKICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgogICAgICA8YSBocmVmPSJyZWxlYXNlaW5mbz9yZWZfPXR0X2R0X2R0IgppdGVtcHJvcD0ndXJsJz5TZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICA8L3NwYW4+CiAgICA8L2Rpdj4KICAKICAgICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPkFsc28gS25vd24gQXM6PC9oND4gQmlnIExlYm93c2tpCiAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgogICAgICAgIDxhIGhyZWY9InJlbGVhc2VpbmZvP3JlZl89dHRfZHRfZHQjYWthcyIKaXRlbXByb3A9J3VybCc+U2VlIG1vcmU8L2E+Jm5ic3A7JnJhcXVvOwogICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogIAogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgIDxoNCBjbGFzcz0iaW5saW5lIj5GaWxtaW5nIExvY2F0aW9uczo8L2g0PiAKICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/bG9jYXRpb25zPTEwMjMxJTIwQ2hhcmluZyUyMENyb3NzJTIwUm9hZCwlMjBCZXZlcmx5JTIwSGlsbHMsJTIwQ2FsaWZvcm5pYSwlMjBVU0EmcmVmXz10dF9kdF9kdCIKaXRlbXByb3A9J3VybCc+MTAyMzEgQ2hhcmluZyBDcm9zcyBSb2FkLCBCZXZlcmx5IEhpbGxzLCBDYWxpZm9ybmlhLCBVU0E8L2E+CiAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgogICAgICAgIDxhIGhyZWY9ImxvY2F0aW9ucz9yZWZfPXR0X2R0X2R0IgppdGVtcHJvcD0ndXJsJz5TZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogIAogICAgPGhyIC8+IAogICAgPGgzIGNsYXNzPSJzdWJoZWFkaW5nIj5Cb3ggT2ZmaWNlPC9oMz4KICAKICAgICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPkJ1ZGdldDo8L2g0PiAgICAgICAgJDE1LDAwMCwwMDAgICAgICAgIAoKICAgICAgPHNwYW4gY2xhc3M9ImF0dHJpYnV0ZSI+KGVzdGltYXRlZCk8L3NwYW4+CiAgICAgIDwvZGl2PgogIAogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgIDxoNCBjbGFzcz0iaW5saW5lIj5PcGVuaW5nIFdlZWtlbmQ6PC9oND4gICAgICAgICAkNSw1MzMsODQ0ICAgICAgICAKCiAgICAgIChVU0EpCiAgICAgIDxzcGFuIGNsYXNzPSJhdHRyaWJ1dGUiPig2IE1hcmNoIDE5OTgpPC9zcGFuPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkdyb3NzOjwvaDQ+ICAgICAgICAkMTcsNDM5LDE2MyAgICAgICAgCgogICAgICA8c3BhbiBjbGFzcz0iYXR0cmlidXRlIj4oVVNBKTwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9ImF0dHJpYnV0ZSI+KDI5IE1heSAxOTk4KTwvc3Bhbj4KICAgIDwvZGl2PgogIAogIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgogICAgPGEgaHJlZj0iYnVzaW5lc3M/cmVmXz10dF9kdF9idXMiCml0ZW1wcm9wPSd1cmwnPlNlZSBtb3JlPC9hPiZuYnNwOyZyYXF1bzsKICA8L3NwYW4+ICAKICA8aHIgLz4gCiAgPGgzIGNsYXNzPSJzdWJoZWFkaW5nIj5Db21wYW55IENyZWRpdHM8L2gzPgogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgIDxoNCBjbGFzcz0iaW5saW5lIj5Qcm9kdWN0aW9uIENvOjwvaDQ+CiAgICAgICAgPHNwYW4gaXRlbXByb3A9ImNyZWF0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KPGEgaHJlZj0iL2NvbXBhbnkvY28wMDMwNjEyP3JlZl89dHRfZHRfY28iCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPlBvbHlncmFtIEZpbG1lZCBFbnRlcnRhaW5tZW50PC9zcGFuPjwvYT48L3NwYW4+LCAgICAgICAgPHNwYW4gaXRlbXByb3A9ImNyZWF0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KPGEgaHJlZj0iL2NvbXBhbnkvY28wMDU3MzExP3JlZl89dHRfZHRfY28iCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPldvcmtpbmcgVGl0bGUgRmlsbXM8L3NwYW4+PC9hPjwvc3Bhbj4gICAgICA8c3BhbiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIj4KICAgICAgICA8YSBocmVmPSJjb21wYW55Y3JlZGl0cz9yZWZfPXR0X2R0X2NvIgppdGVtcHJvcD0ndXJsJz5TZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+IAogIFNob3cgZGV0YWlsZWQKPGEgaHJlZj0iaHR0cDovL3Byby5pbWRiLmNvbS90aXRsZS90dDAxMTg3MTUvY29tcGFueWNyZWRpdHM/cmY9Y29uc190dF9jb2NyZWRfdHQmcmVmXz1jb25zX3R0X2NvY3JlZF90dCIKaXRlbXByb3A9J3VybCc+Y29tcGFueSBjb250YWN0IGluZm9ybWF0aW9uPC9hPgogIG9uIAogIDxhIGhyZWY9Imh0dHA6Ly9wcm8uaW1kYi5jb20vc2lnbnVwL2luZGV4Lmh0bWw/cmY9Y29uc190dF9jb2NyZWRfc3BsJnJlZl89Y29uc190dF9jb2NyZWRfc3BsIgppdGVtcHJvcD0ndXJsJz5JTURiUHJvPC9hPiZuYnNwOyZyYXF1bzsKICA8L2Rpdj4KICAKCiAgPGhyIC8+CiAgPGgzIGNsYXNzPSJzdWJoZWFkaW5nIj5UZWNobmljYWwgU3BlY3M8L2gzPgogIAogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPlJ1bnRpbWU6PC9oND4gCiAgICAgICAgPHRpbWUgaXRlbXByb3A9ImR1cmF0aW9uIiBkYXRldGltZT0iUFQxMTdNIj4xMTcgbWluPC90aW1lPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPlNvdW5kIE1peDo8L2g0PgogICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/c291bmRfbWl4ZXM9ZHRzJnJlZl89dHRfZHRfc3BlYyIKaXRlbXByb3A9J3VybCc+RFRTPC9hPgo8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+ICAgICAgICA8YSBocmVmPSIvc2VhcmNoL3RpdGxlP3NvdW5kX21peGVzPWRvbGJ5X2RpZ2l0YWwmcmVmXz10dF9kdF9zcGVjIgppdGVtcHJvcD0ndXJsJz5Eb2xieSBEaWdpdGFsPC9hPgo8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+ICAgICAgICA8YSBocmVmPSIvc2VhcmNoL3RpdGxlP3NvdW5kX21peGVzPXNkZHMmcmVmXz10dF9kdF9zcGVjIgppdGVtcHJvcD0ndXJsJz5TRERTPC9hPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkNvbG9yOjwvaDQ+CiAgICAgICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT9jb2xvcnM9Y29sb3ImcmVmXz10dF9kdF9zcGVjIgppdGVtcHJvcD0ndXJsJz5Db2xvcjwvYT4KKFRlY2huaWNvbG9yKSAgICA8L2Rpdj4KICAKICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICA8aDQgY2xhc3M9ImlubGluZSI+QXNwZWN0IFJhdGlvOjwvaDQ+IDEuODUgOiAxCiAgICA8L2Rpdj4KICAKICBTZWUgPGEgaHJlZj0idGVjaG5pY2FsP3JlZl89dHRfZHRfc3BlYyIKaXRlbXByb3A9J3VybCc+ZnVsbCB0ZWNobmljYWwgc3BlY3M8L2E+Jm5ic3A7JnJhcXVvOwogICAgPC9kaXY+CgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVEZXRhaWxzV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVEZXRhaWxzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlRGV0YWlsc1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZURpZFlvdUtub3dXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZURpZFlvdUtub3dXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPGRpdiBpZD0idGl0bGVEaWRZb3VLbm93IiBjbGFzcz0iYXJ0aWNsZSI+CiAgICA8c3BhbiBjbGFzcz1yaWdodGNvcm5lcmxpbmsgPgogICAgICAgICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PWVkaXQmcmVmXz10dF90cnZfdHJ2IgpyZWw9ImxvZ2luIj5FZGl0PC9hPgogICAgPC9zcGFuPgogICAgICAgIDxoMj5EaWQgWW91IEtub3c/PC9oMj4KICAgIDxkaXYgaWQ9InRyaXZpYSIgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgICAgPGg0PlRyaXZpYTwvaDQ+ClRoZSBuYW1lIG9uIHRoZSBEdWRlJ3MgbGFzdCBzaGlydCBpcyAiQXJ0Ii4gICAgICAgIDxhIGhyZWY9InRyaXZpYT9yZWZfPXR0X3Rydl90cnYiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICAmcmFxdW87CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxociAvPgogICAgIDxkaXYgaWQ9Imdvb2ZzIiAgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgICAgPGg0Pkdvb2ZzPC9oND4KSW4gTGVib3dza2kmIzM5O3MgbGltbywgTGVib3dza2kgYW5kIEJyYW5kdCBjb25mcm9udCB0aGUgRHVkZSBhYm91dCBoaXMgZmFpbHVyZSB0byBkZWxpdmVyIHRoZSByYW5zb20gbW9uZXkuIFdoZW4gQnJhbmR0IGhhbmRzIG92ZXIgdGhlIGVudmVsb3BlIHdpdGggdGhlIHRvZSwgdGhlIER1ZGUgaXMgc2VlbiByZWFjaGluZyBmb3IgaXQgd2l0aCBoaXMgcmlnaHQgaGFuZC4gV2hlbiB0aGUgYW5nbGUgY2hhbmdlcywgdGhlIGhhbmQgdGFraW5nIHRoZSBlbnZlbG9wZSBpcyBhIGxlZnQgaGFuZC4gV2hhdCYjMzk7cyBtb3JlLCBpdCBoYXMgYSB3ZWRkaW5nIGJhbmQgb24gdGhlIHJpbmcgZmluZ2VyLiAoQWZ0ZXIgdGhlICZxdW90O3RvaWxldCZxdW90OyBhdHRhY2ssIHRoZSBEdWRlIHNob3dzIGhpcyByaW5nbGVzcyByaW5nIGZpbmdlciBhcyBldmlkZW5jZSB0aGF0IGhlIGlzIG5vdCBtYXJyaWVkLikgICAgICAgIDxhIGhyZWY9InRyaXZpYT90YWI9Z2YmcmVmXz10dF90cnZfZ2YiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICAmcmFxdW87CiAgICA8L2Rpdj4gICAKICAgICAgICAgICAgICAgIDxociAvPgogICAgPGRpdiBpZD0icXVvdGVzIiBjbGFzcz0idGV4dC1ibG9jayI+CiAgICAgICAgPGg0PlF1b3RlczwvaDQ+Cls8c3BhbiBjbGFzcz0iZmluZSI+Zmlyc3QgbGluZXM8L3NwYW4+XQo8YnIgLz48YSBocmVmPSIvbmFtZS9ubTAwMDAzODUvP3JlZl89dHRfdHJ2X3F1Igo+PHNwYW4gY2xhc3M9ImNoYXJhY3RlciI+VGhlIFN0cmFuZ2VyPC9zcGFuPjwvYT46Cls8c3BhbiBjbGFzcz0iZmluZSI+dm9pY2VvdmVyPC9zcGFuPl0KV2F5IG91dCB3ZXN0IHRoZXJlIHdhcyB0aGlzIGZlbGxhLi4uIGZlbGxhIEkgd2FubmEgdGVsbCB5YSBhYm91dC4gRmVsbGEgYnkgdGhlIG5hbWUgb2YgSmVmZiBMZWJvd3NraS4gQXQgbGVhc3QgdGhhdCB3YXMgdGhlIGhhbmRsZSBoaXMgbG92aW5nIHBhcmVudHMgZ2F2ZSBoaW0sIGJ1dCBoZSBuZXZlciBoYWQgbXVjaCB1c2UgZm9yIGl0IGhpbXNlbGYuIE1yLiBMZWJvd3NraSwgaGUgY2FsbGVkIGhpbXNlbGYgIlRoZSBEdWRlIi4gTm93LCAiRHVkZSIgLSB0aGF0J3MgYSBuYW1lIG5vIG9uZSB3b3VsZCBzZWxmLWFwcGx5IHdoZXJlIEkgY29tZSBmcm9tLiBCdXQgdGhlbiB0aGVyZSB3YXMgYSBsb3QgYWJvdXQgdGhlIER1ZGUgdGhhdCBkaWRuJ3QgbWFrZSBhIHdob2xlIGxvdCBvZiBzZW5zZS4gQW5kIGEgbG90IGFib3V0IHdoZXJlIGhlIGxpdmVkLCBsaWtld2lzZS4gQnV0IHRoZW4gYWdhaW4sIG1heWJlIHRoYXQncyB3aHkgSSAuLi4KPGJyIC8+ICAgICAgICAgICAgICAgIAogICAgICAgIDxhIGhyZWY9InRyaXZpYT90YWI9cXQmcmVmXz10dF90cnZfcXUiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICZyYXF1bzsKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGhyIC8+CiAgICAgPGRpdiBpZD0iY3JhenlDcmVkaXRzIiAgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgICAgPGg0PkNyYXp5IENyZWRpdHM8L2g0PgogIEJhYnkgV3JhbmdsZXJzOiBIb3dscy9HaWdnbGVzL01hcm1vdHMgICAgICAgIDxhIGhyZWY9InRyaXZpYT90YWI9Y3omcmVmXz10dF90cnZfY2MiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICAmcmFxdW87CiAgICA8L2Rpdj4gICAKICAgICAgICAgICAgICAgIDxociAvPgogICAgPGRpdiBpZD0iY29ubmVjdGlvbnMiIGNsYXNzPSJ0ZXh0LWJsb2NrIj4KICAgICAgICA8aDQ+Q29ubmVjdGlvbnM8L2g0PgogICAgICAgIFJlZmVyZW5jZWQgaW4gPGEgaHJlZj0iL3RpdGxlL3R0MDQxOTA2Mj9yZWZfPXR0X3Rydl9jbm4iPlBpenphIE1hbiB2cy4gdGhlIER1ZGU8L2E+Jm5ic3A7KDIwMDQpCgoKICAgICAgICA8YSBocmVmPSJ0cml2aWE/dGFiPW1jJnJlZl89dHRfdHJ2X2NubiIKY2xhc3M9Im5vYnIiID5TZWUgbW9yZTwvYT4gJnJhcXVvOwogICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8aHIgLz4KICAgIDxkaXYgaWQ9InNvdW5kdHJhY2tzIiBjbGFzcz0idGV4dC1ibG9jayI+CiAgICAgICAgPGg0PlNvdW5kdHJhY2tzPC9oND4KU3RhbmRpbmcgb24gdGhlIENvcm5lciA8YnIgLz4KV3JpdHRlbiBieSA8YSBocmVmPSIvbmFtZS9ubTAwMDQyMzAvIj5GcmFuayBMb2Vzc2VyPC9hPiA8YnIgLz4KUGVyZm9ybWVkIGJ5IDxhIGhyZWY9Ii9uYW1lL25tMDAwMTUwOS8iPkRlYW4gTWFydGluPC9hPiA8YnIgLz4KUHVibGlzaGVkIGJ5IEZyYW5rIE11c2ljIENvcnAuIChBU0NBUCkgPGJyIC8+CkNvdXJ0ZXN5IG9mIENhcGl0b2wgUmVjb3JkcyA8YnIgLz4KVW5kZXIgbGljZW5zZSBmcm9tIEVNSS1DYXBpdG9sIE11c2ljIFNwZWNpYWwgTWFya2V0cyA8YnIgLz4gICAgICAgIDxhIGhyZWY9InNvdW5kdHJhY2s/cmVmXz10dF90cnZfc25kIgpjbGFzcz0ibm9iciIgPlNlZSBtb3JlPC9hPiAmcmFxdW87CiAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVEaWRZb3VLbm93V2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVEaWRZb3VLbm93V2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlRGlkWW91S25vd1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlRkFRV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVGQVFXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgCiAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlIiBpZD0idGl0bGVGQVEiPgogICAgICAgIDxoMj5GcmVxdWVudGx5IEFza2VkIFF1ZXN0aW9uczwvaDI+CiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZhcSIgPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9kZCI+CiAgICAgICAgICAgICAgICAgICAgPGI+UTo8L2I+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvZmFxP3JlZl89dHRfZmFxXzEjLjIuMS4zMSIKPiBXaGF0J3MgdGhhdCBzb25nIHRoYXQgaXMgaGVhcmQgdGhyb3VnaG91dCB0aGUgbW92aWU/PC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgICAgICAgICAgIDxiPlE6PC9iPgo8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L2ZhcT9yZWZfPXR0X2ZhcV8yIy4yLjEuMzIiCj4gVG8gd2hvbSB3YXMgdGhlIGxpbmUgIkxpZmUgZG9lcyBub3Qgc3RvcCBhbmQgc3RhcnQgYXQgeW91ciBjb252ZW5pZW5jZS4uLiIgZGlyZWN0ZWQ/PC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9kZCI+CiAgICAgICAgICAgICAgICAgICAgPGI+UTo8L2I+CjxhIGhyZWY9Ii90aXRsZS90dDAxMTg3MTUvZmFxP3JlZl89dHRfZmFxXzMjLjIuMS4zNSIKPiBIb3cgbXVjaCBzZXgsIHZpb2xlbmNlLCBhbmQgcHJvZmFuaXR5IGFyZSBpbiB0aGlzIG1vdmllPzwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiID4gICAgICAgIAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9mYXE/cmVmXz10dF9mYXFfc20iCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3BvaWxlcnMiPihTcG9pbGVyIEFsZXJ0ISk8L3NwYW4+PC9zcGFuPiZuYnNwOyZyYXF1bzsKICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVGQVFXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZUZBUVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZUZBUVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZVVzZXJSZXZpZXdzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVVc2VyUmV2aWV3c1dpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlIiBpZD0idGl0bGVVc2VyUmV2aWV3c1RlYXNlciI+CiAgICAgICAgPGgyPlVzZXIgUmV2aWV3czwvaDI+CiAgICAgICAgPGRpdiBjbGFzcz0idXNlci1jb21tZW50cyI+CiAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0icmV2aWV3IiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1JldmlldyI+ICAKICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGl0ZW1wcm9wPSJuYW1lIj5BIGNlbGVicmF0aW9uIG9mIHRoZSB1bHRpbWF0ZSBtYW4sIG5heSwgdGhlIHVsdGltYXRlIGR1ZGU8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0icmV2aWV3UmF0aW5nIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1JhdGluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJ3b3JzdFJhdGluZyIgY29udGVudCA9ICIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0icmF0aW5nVmFsdWUiIGNvbnRlbnQ9IjAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJiZXN0UmF0aW5nIiBjb250ZW50PSIxMCIgLz4KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudC1tZXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgNSBGZWJydWFyeSAxOTk5IHwgYnkgPGEgaHJlZj0iL3VzZXIvdXIwMjA0NTA4Lz9yZWZfPXR0X3VydiIKPjxzcGFuIGl0ZW1wcm9wPSJhdXRob3IiPlN0ZXBoZW4gRy4gV2lsc29uIChzZ3dAZ2FtZ2Vlc2FtLnByZXN0ZWwuY28udWspPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgaXRlbXByb3A9ImRhdGVQdWJsaXNoZWQiIGNvbnRlbnQ9IjE5OTktMDItMDUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChSZW5mcmV3LCBTY290bGFuZCkKICAgICAgICAgICAgICAgICAgICAgICAgJm5kYXNoOyA8YSBocmVmPSIvdXNlci91cjAyMDQ1MDgvY29tbWVudHM/cmVmXz10dF91cnYiCj5TZWUgYWxsIG15IHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgaXRlbXByb3A9InJldmlld0JvZHkiPiBJJ2QgaGVhcmQgYSBsb3Qgb2YgYmFkIHByZXNzIGFib3V0IHRoaXMgbW92aWUuIE5vdCBhcyBnb29kIGFzIEZhcmdvLCB3YXMgYSBtdWNoIHVzZWQgcGhyYXNlLiBJIHdhc24ndCBvdmVybHkgaW1wcmVzc2VkIHdpdGggRmFyZ28sIHRoZSBhdG1vc3BoZXJlIGp1c3QgZGlkbid0IGNsaWNrIGZvciBtZSwgYnV0IGFueXdheSwgdGhhdCBtYWRlIG1lIGEgbGl0dGxlIGFwcHJlaGVuc2l2ZSBhYm91dCB0aGlzLjxiciAvPjxiciAvPkl0J3MgZWFzaWx5IGJldHRlciB0aGFuIEZhcmdvLCBJTUhPLCBhbmQgaXQncyByaWdodCB1cCB0aGVyZSB3aXRoIEJhcnRvbiBGaW5rIG9yIE1pbGxlcidzIENyb3NzaW5nLiBBIHRydWUgY29tZWR5IGNsYXNzaWMgd2l0aCBzbyBtYW55IG1lbW9yYWJsZSBsaW5lcyBhbmQgY2hhcmFjdGVycywgYnV0IGl0J3MgdGhlIG1vdmllJ3MgYXRtb3NwaGVyZSB3aGljaCBpcyBzbyB0cnVseSBqb3lvdXMsIGEgd29uZGVyZnVsIGNlbGVicmF0aW9uIG9mIGJhc2ljYWxseSBkb2luZyBub3RoaW5nLiBBY2hpZXZpbmcgb25lJ3MgZ29hbHMgaXMgaW1wb3J0YW50LCB5ZXMsIGJ1dCBpdCdzIG9rYXkgdG8gc2V0IHRoZW0gbG93LCBpcyB3aGF0IEkgcGVyY2VpdmVkIHRoaXMgbW92aWUgdG8gYmUgc2F5aW5nLiBBcyBsb25nIGFzIG9uZSBpcyBiYXNpY2FsbHkgYSBnb29kIGd1eSwgdGhlbiB0aGF0J3MgZW5vdWdoLiBXZWxsLCB0aGF0J3Mgd2hhdCBpdCBzZWVtZWQgbGlrZSB0byBtZSwgYW5kIGl0IHdhcyBleHByZXNzZWQgc28gYmVhdXRpZnVsbHkgaW4gdGhlIHN0dW5uaW5nIGNhc3Qgb2YgZ3JvdGVzcXVlcywgbG92ZWx5IG11c2ljICggYWx0aG91Z2ggbW9yZSBCdXJ3ZWxsIHdvdWxkIGhhdmUgYmVlbiBuaWNlICksIGFuZCB0aGUgdHJpcHBpZXN0LCBmdW5uaWVzdCwgbW9zdCBhYnN1cmQgZHJlYW0gc2VxdWVuY2VzIHlvdSd2ZSBldmVyIHNlZW4uIEdyZWF0IHN0dWZmLjwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieW4iIGlkPSJ5bmRfNDA2ODM3Ij4KICAgICAgICAgICAgICAgICAgICAxMzkgb2YgMjU0IHBlb3BsZSBmb3VuZCB0aGlzIHJldmlldyBoZWxwZnVsLiZuYnNwOwogICAgICAgICAgICAgICAgICAgIFdhcyB0aGlzIHJldmlldyBoZWxwZnVsIHRvIHlvdT8KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gc21hbGwiIHZhbHVlPSJZZXMiIG5hbWU9InluYl80MDY4MzdfeWVzIiBvbmNsaWNrPSJDUy5UTUQudXNlcl9yZXZpZXdfdm90ZSg0MDY4MzcsICd0dDAxMTg3MTUnLCAneWVzJyk7IiA+WWVzPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIHNtYWxsIiB2YWx1ZT0iTm8iIG5hbWU9InluYl80MDY4Mzdfbm8iIG9uY2xpY2s9IkNTLlRNRC51c2VyX3Jldmlld192b3RlKDQwNjgzNywgJ3R0MDExODcxNScsICdubycpOyIgPk5vPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VlLW1vcmUiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3Jldmlld3MtZW50ZXI/cmVmXz10dF91cnYiCnJlbD0ibG9naW4iPlJldmlldyB0aGlzIHRpdGxlPC9hPgogICAgICAgICAgICAgICAgPHNwYW4+fDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTE4NzE1L3Jldmlld3M/cmVmXz10dF91cnYiCj5TZWUgYWxsIDEsMDU5IHVzZXIgcmV2aWV3czwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVVzZXJSZXZpZXdzV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVVzZXJSZXZpZXdzV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVVc2VyUmV2aWV3c1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZVVzZXJSZXZpZXdzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgCgoKICAgIAogICAgCiAgICAKCiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZUNvbnRyaWJ1dGVXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSBjb250cmlidXRlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyaWdodGNvcm5lcmxpbmsiPgo8YSBocmVmPSIvaGVscC8/YWRkaW5nLyZyZWZfPXR0X2NuX2hscCIKPkdldHRpbmcgU3RhcnRlZDwvYT4KICAgICAgICAgICAgPHNwYW4+fDwvc3Bhbj4KPGEgaHJlZj0iL2N6b25lLz9yZWZfPXR0X2NuX2N6Igo+Q29udHJpYnV0b3IgWm9uZTwvYT4mbmJzcDsmcmFxdW87PC9kaXY+CiAgICAgICAgPGgyPkNvbnRyaWJ1dGUgdG8gVGhpcyBQYWdlPC9oMj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b24tYm94Ij4KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBtZXRob2Q9ImdldCIgYWN0aW9uPSJodHRwczovL2NvbnRyaWJ1dGUuaW1kYi5jb20vdXBkYXRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlZl8iIHZhbHVlPSJ0dF9jbl9lZHQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImVkaXQiIHZhbHVlPSJsZWdhY3kvdGl0bGUvdHQwMTE4NzE1LyIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBwcmltYXJ5IGxhcmdlIiByZWw9ImxvZ2luIiB0eXBlPSJzdWJtaXQiPkVkaXQgcGFnZTwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b24tYm94Ij4KPGEgaHJlZj0iL3RpdGxlL3R0MDExODcxNS9yZXZpZXdzLWVudGVyP3JlZl89dHRfY25fdXJ2IgpjbGFzcz0iYnRuIGxhcmdlIiByZWw9ImxvZ2luIj5Xcml0ZSByZXZpZXc8L2E+ICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgCiAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWJveCI+CiAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvY2hhcmFjdGVyL2NyZWF0ZT9yZWZfPXR0X2NuX2NoIiBhY2NlcHQtY2hhcnNldD0iSVNPLTg4NTktMSI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiB2YWx1ZT0idHQwMTE4NzE1IiBuYW1lPSJ0aXRsZSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLXR4dCI+Q3JlYXRlIGEgY2hhcmFjdGVyIHBhZ2UgZm9yOjwvZGl2PgogICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0iY2hhcmFjdGVyX3NlbGVjdCIgbmFtZT0ibmFtZSIgZGF0YS10Y29uc3Q9InR0MDExODcxNSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IldvbywgVHJlZWhvcm4gVGh1ZyI+V29vLCBUcmVlaG9ybiBUaHVnPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Ik5paGlsaXN0ICMxLCBVbGkgS3Vua2VsIj5OaWhpbGlzdCAjMSwgVWxpIEt1bmtlbDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJOaWhpbGlzdCAjMiwgS2llZmZlciI+TmloaWxpc3QgIzIsIEtpZWZmZXI8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTmloaWxpc3QgIzMsIEZyYW56Ij5OaWhpbGlzdCAjMywgRnJhbno8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTWFydHkiPk1hcnR5PC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gZGlzYWJsZWQ9ImRpc2FibGVkIj4tLS0tLS0tLS0tLTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIuLi4iPm1vcmUuLi48L29wdGlvbj4KICAgICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIHNtYWxsIj5DcmVhdGUgJnJhcXVvOzwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2hlbHAvc2hvd19sZWFmP2NyZWF0ZWNoYXImcmVmXz10dF9jbl9jaGhscCIKY2xhc3M9ImJ0biBzbWFsbCIgPj88L2E+CiAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQ29udHJpYnV0ZVdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgICAgIDxhIG5hbWU9InNsb3RfY2VudGVyLTIwIj48L2E+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSI+CiAgICAgICAgCiAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmlmKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicpe3VldCgnYmInLCdOaW5qYVdpZGdldCcse3diOjF9KTt9PC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAgICAgPHNwYW4gY2xhc3M9ImFiX3dpZGdldCI+CiAgICAgICAgCiAgICAKCiAgICA8ZGl2IGNsYXNzPSJhYl9uaW5qYSI+CjxzcGFuIGNsYXNzPSJ3aWRnZXRfaGVhZGVyIj4gPHNwYW4gY2xhc3M9Im9uZWxpbmUiPiA8YSBocmVmPSIvY29taWMtY29uLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MzE0NTkwNTE4MiZwZl9yZF9yPTFKUkQ2QUE1NEM5NTQyVFA5MDM5JnBmX3JkX3M9Y2VudGVyLTIwJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDAxMTg3MTUmcmVmXz10dF9jY25fYm90cHJvMl9oZCIgPiA8aDM+R2V0IENhdWdodCBVcCBvbiBDb21pYy1Db248L2gzPiA8L2E+IDwvc3Bhbj4gPC9zcGFuPiA8cCBjbGFzcz0iYmx1cmIiPkNhdGNoIHVwIHdpdGggZXZlcnl0aGluZyB5b3UgbWlzc2VkIGF0IENvbWljLUNvbiB3aXRoIElNRGIncyA8YSBocmVmPSIvY29taWMtY29uLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MzE0NTkwNTE4MiZwZl9yZF9yPTFKUkQ2QUE1NEM5NTQyVFA5MDM5JnBmX3JkX3M9Y2VudGVyLTIwJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDAxMTg3MTUmcmVmXz10dF9jY25fYm90cHJvMl9sazEiPjIwMTcgQ29taWMtQ29uIEd1aWRlPC9hPi48L3A+IDxkaXYgY2xhc3M9IndpZGdldF9jb250ZW50IG5vX2lubGluZV9ibHVyYiI+IDxkaXYgY2xhc3M9IndpZGdldF9uZXN0ZWQiPiA8ZGl2IGNsYXNzPSJuaW5qYV9pbWFnZV9wYWNrIj4gPGRpdiBjbGFzcz0ibmluamFfbGVmdCI+IDxkaXYgY2xhc3M9Im5pbmphX2ltYWdlIGZpcnN0X2ltYWdlIiBzdHlsZT0id2lkdGg6MzA3cHg7aGVpZ2h0OmF1dG87IiA+IDxkaXYgc3R5bGU9IndpZHRoOjMwN3B4O2hlaWdodDphdXRvO21hcmdpbjowIGF1dG87Ij4gPGRpdiBjbGFzcz0id2lkZ2V0X2ltYWdlIj4gPGRpdiBjbGFzcz0iaW1hZ2UiPiA8YSBocmVmPSIvbGlzdC9sczA2ODIyMzAzNS92aWRlb3BsYXllci92aTI0MzU5NTQ5Njk/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTMxNDU5MDUxODImcGZfcmRfcj0xSlJENkFBNTRDOTU0MlRQOTAzOSZwZl9yZF9zPWNlbnRlci0yMCZwZl9yZF90PTE1MDIxJnBmX3JkX2k9dHQwMTE4NzE1JnJlZl89dHRfY2NuX2JvdHBybzJfaV8xIiBjbGFzcz0idmlkZW8tbW9kYWwiIGRhdGEtcmVmc3VmZml4PSJ0dF9jY25fYm90cHJvMiIgZGF0YS1yZWY9InR0X2Njbl9ib3Rwcm8yX2lfMSI+IDxpbWcgaXRlbXByb3A9ImltYWdlIiBjbGFzcz0icHJpX2ltYWdlIiB0aXRsZT0iSU1EYiBhdCBTYW4gRGllZ28gQ29taWMtQ29uICgyMDE2LSkiIGFsdD0iSU1EYiBhdCBTYW4gRGllZ28gQ29taWMtQ29uICgyMDE2LSkiIHNyYz0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNekF3TkRFMU16Z3dNbDVCTWw1QmFuQm5Ya0Z0WlRnd09URXpNems1TWpJQC5fQ1IyMDgsMTEsMTMwMCw5NzRfVVg2MTRfVVk0NjAuX1NZMjMwX1NYMzA3X0FMXy5qcGciIC8+IDxpbWcgYWx0PSJJTURiIGF0IFNhbiBEaWVnbyBDb21pYy1Db24gKDIwMTYtKSIgdGl0bGU9IklNRGIgYXQgU2FuIERpZWdvIENvbWljLUNvbiAoMjAxNi0pIiBjbGFzcz0iaW1hZ2Vfb3ZlcmxheSBvdmVybGF5X21vdXNlb3V0IiBzcmM9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9JTURiL2ljb24vcGxheS1idXR0b24uX0NCMzE4NjY3Mzc1Xy5wbmciIGRhdGEtc3JjLXgyPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvSU1EYi9pY29uL3BsYXktYnV0dG9uLl9DQjMxODY2NzM3NV8ucG5nIiAvPiA8aW1nIGFsdD0iSU1EYiBhdCBTYW4gRGllZ28gQ29taWMtQ29uICgyMDE2LSkiIHRpdGxlPSJJTURiIGF0IFNhbiBEaWVnbyBDb21pYy1Db24gKDIwMTYtKSIgY2xhc3M9ImltYWdlX292ZXJsYXkgb3ZlcmxheV9tb3VzZW92ZXIiIHNyYz0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0lNRGIvaWNvbi9wbGF5LWJ1dHRvbi1ob3Zlci5fQ0IzMTg2NjczNzRfLnBuZyIgZGF0YS1zcmMteDI9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9JTURiL2ljb24vcGxheS1idXR0b24taG92ZXIuX0NCMzE4NjY3Mzc0Xy5wbmciIC8+IDwvYT4gPC9kaXY+IDxkaXYgY2xhc3M9IndpZGdldF9jYXB0aW9uIGNhcHRpb25fYmVsb3ciPiA8ZGl2IGNsYXNzPSJwcmltYXJ5Ij4gPGEgaHJlZj0iL2xpc3QvbHMwNjgyMjMwMzUvdmlkZW9wbGF5ZXIvdmkyNDM1OTU0OTY5P3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0zMTQ1OTA1MTgyJnBmX3JkX3I9MUpSRDZBQTU0Qzk1NDJUUDkwMzkmcGZfcmRfcz1jZW50ZXItMjAmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MDExODcxNSZyZWZfPXR0X2Njbl9ib3Rwcm8yX2NhcF9wcmlfMSIgPiA8aT5CbGFjayBQYW50aGVyPC9pPiBDYXN0IE1lbWJlcnMgb24gQmVjb21pbmcgVGhlaXIgQ2hhcmFjdGVycyA8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj48ZGl2IGNsYXNzPSJuaW5qYV9pbWFnZSBuaW5qYV9pbWFnZV9maXhlZF9wYWRkaW5nIHdpZGdldF9wYWRkaW5nIj48L2Rpdj48ZGl2IGNsYXNzPSJuaW5qYV9pbWFnZSBsYXN0X2ltYWdlIiBzdHlsZT0id2lkdGg6MzA3cHg7aGVpZ2h0OmF1dG87IiA+IDxkaXYgc3R5bGU9IndpZHRoOjMwN3B4O2hlaWdodDphdXRvO21hcmdpbjowIGF1dG87Ij4gPGRpdiBjbGFzcz0id2lkZ2V0X2ltYWdlIj4gPGRpdiBjbGFzcz0iaW1hZ2UiPiA8YSBocmVmPSIvbGlzdC9sczA2ODIyMzAzNS92aWRlb3BsYXllci92aTkyNjAwNTUyOT9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MzE0NTkwNTE4MiZwZl9yZF9yPTFKUkQ2QUE1NEM5NTQyVFA5MDM5JnBmX3JkX3M9Y2VudGVyLTIwJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDAxMTg3MTUmcmVmXz10dF9jY25fYm90cHJvMl9pXzIiIGNsYXNzPSJ2aWRlby1tb2RhbCIgZGF0YS1yZWZzdWZmaXg9InR0X2Njbl9ib3Rwcm8yIiBkYXRhLXJlZj0idHRfY2NuX2JvdHBybzJfaV8yIj4gPGltZyBpdGVtcHJvcD0iaW1hZ2UiIGNsYXNzPSJwcmlfaW1hZ2UiIHRpdGxlPSJJTURiIGF0IFNhbiBEaWVnbyBDb21pYy1Db24gKDIwMTYtKSIgYWx0PSJJTURiIGF0IFNhbiBEaWVnbyBDb21pYy1Db24gKDIwMTYtKSIgc3JjPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qQTNNVE14T1RBNU4xNUJNbDVCYW5CblhrRnRaVGd3TXpVME9UZzVNaklALl9DUjM0MCwzNiw2OTIsNTE5X1VYNjE0X1VZNDYwLl9TWTIzMF9TWDMwN19BTF8uanBnIiAvPiA8aW1nIGFsdD0iSU1EYiBhdCBTYW4gRGllZ28gQ29taWMtQ29uICgyMDE2LSkiIHRpdGxlPSJJTURiIGF0IFNhbiBEaWVnbyBDb21pYy1Db24gKDIwMTYtKSIgY2xhc3M9ImltYWdlX292ZXJsYXkgb3ZlcmxheV9tb3VzZW91dCIgc3JjPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvSU1EYi9pY29uL3BsYXktYnV0dG9uLl9DQjMxODY2NzM3NV8ucG5nIiBkYXRhLXNyYy14Mj0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0lNRGIvaWNvbi9wbGF5LWJ1dHRvbi5fQ0IzMTg2NjczNzVfLnBuZyIgLz4gPGltZyBhbHQ9IklNRGIgYXQgU2FuIERpZWdvIENvbWljLUNvbiAoMjAxNi0pIiB0aXRsZT0iSU1EYiBhdCBTYW4gRGllZ28gQ29taWMtQ29uICgyMDE2LSkiIGNsYXNzPSJpbWFnZV9vdmVybGF5IG92ZXJsYXlfbW91c2VvdmVyIiBzcmM9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9JTURiL2ljb24vcGxheS1idXR0b24taG92ZXIuX0NCMzE4NjY3Mzc0Xy5wbmciIGRhdGEtc3JjLXgyPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvSU1EYi9pY29uL3BsYXktYnV0dG9uLWhvdmVyLl9DQjMxODY2NzM3NF8ucG5nIiAvPiA8L2E+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ3aWRnZXRfY2FwdGlvbiBjYXB0aW9uX2JlbG93Ij4gPGRpdiBjbGFzcz0icHJpbWFyeSI+IDxhIGhyZWY9Ii9saXN0L2xzMDY4MjIzMDM1L3ZpZGVvcGxheWVyL3ZpOTI2MDA1NTI5P3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0zMTQ1OTA1MTgyJnBmX3JkX3I9MUpSRDZBQTU0Qzk1NDJUUDkwMzkmcGZfcmRfcz1jZW50ZXItMjAmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MDExODcxNSZyZWZfPXR0X2Njbl9ib3Rwcm8yX2NhcF9wcmlfMiIgPiBDaHJpcyBIZW1zd29ydGggYW5kIFRhaWthIFdhaXRpdGkgQXJlIEV4Y2l0ZWQgQWJvdXQgPGk+VGhvcjogUmFnbmFyb2s8L2k+IDwvYT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPHAgY2xhc3M9InNlZW1vcmUiPjxhIGhyZWY9Ii9jb21pYy1jb24vP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0zMTQ1OTA1MTgyJnBmX3JkX3I9MUpSRDZBQTU0Qzk1NDJUUDkwMzkmcGZfcmRfcz1jZW50ZXItMjAmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MDExODcxNSZyZWZfPXR0X2Njbl9ib3Rwcm8yX3NtIiBjbGFzcz0icG9zaXRpb25fYm90dG9tIHN1cHBsZW1lbnRhbCIgPkJyb3dzZSBPdXIgR3VpZGUgdG8gQ29taWMtQ29uPC9hPjwvcD4gICAgPC9kaXY+CiAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KCgoKICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgaWYodHlwZW9mIHVleCA9PT0gJ2Z1bmN0aW9uJyl7dWV4KCdsZCcsJ05pbmphV2lkZ2V0Jyx7d2I6MX0pO30KICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgCgoKCgogICAgICAgIDwvZGl2PgogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIDwvZGl2PgogICAgPGJyIGNsYXNzPSJjbGVhciIvPgo8L2Rpdj4gCgoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgICAgICAgICAgICAgICAgPGJyIGNsYXNzPSJjbGVhciIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgoKCgoKCgogICAgPGRpdiBpZD0iZm9vdGVyIiBjbGFzcz0iZnQiPgoKICAgICAgICAgICAgPGRpdiBpZD0icnZpLWRpdiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNlbnRseS12aWV3ZWQiPiZuYnNwOzwvZGl2PgogICAgICAgICAgICAgICAgPGJyIGNsYXNzPSJjbGVhciI+CiAgICAgICAgICAgIDwvZGl2PgoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBib3R0b21fYWQgLS0+CgkKCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGZvb3Rlci1ncmlkLXdyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZm9vdGVyLXJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgb3V0c2lkZSI+CiAgICA8aDM+SU1EYiBFdmVyeXdoZXJlPC9oMz4KICAgIDxkaXYgY2xhc3M9ImFwcC1saW5rcyI+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnRfYXBwX2FwcGxlJnRva2VuPUJDWW92endyYmhxWGczLTZ5RDYtMHBGR1ZfWTRXWkJmQU5aTjBwRDdXVG1zclNrZ0UtOHZHVXQyMEVRRlpfZFZoR0FObElhd3Q2b3olMEQlMEFtbjZVSXlLaExUTFNMRFBYenJESTBTeXVybkw3MTlrVllGTTJMaFJiVDVUQUd4bi1JbHh2VlBJTVVPZ2QtM1pIdm9DcXB3alAyODF6JTBEJTBBU1o5N09DaE1OTW80SktZbXhBejJPUnk0UVVIa3MwNjYyNXlvV1RCNzE3TVFpT1pEdy1PUnRvYXJ2Mm1xbHJjQjhKLWRTdFFoZk9CYyUwRCUwQVZKaGVKbEEzRFVFJTBEJTBBJnJlZl89ZnRfYXBwX2FwcGxlIgp0aXRsZT0iR2V0IHRoZSBJTURiIEFwcCBvbiB0aGUgQXBwbGUgQXBwIFN0b3JlIiB0YXJnZXQ9Il9ibGFuayIgaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBhcHBzdG9yZS1hcHBsZSIgPjwvc3Bhbj4KPC9hPgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0X2FwcF9nb29nbGUmdG9rZW49QkNZbHVuY1JhNklBQUN2VGNabDc3UzNlYTdUaDNlQThDUWpOVVNZQnQxSFZrandiUXU3d3FKQWFHQ1FZS1dfam5QdUtsdmVVd1ctOSUwRCUwQVptOEZCakZVaFlNQm9rakkzcXJGM0U3LXppRUtHMGxLVTRSaFR4WkpEYm9ueFFfVThBTVU3Rk9VdnE1S0Ewc2VFY0lWc0h4bENjbS0lMEQlMEF5aWN2MEVaeEV3RTdxYVQwTWpXTHI0dUUwWUVxUnd6SWk0Ui1zWkh2TEQ1cC0xQ2pkYlAwMW1BelRBZDAzQmthQjk2RnFCekhwcTBkJTBEJTBBYXZNdnV4anVoZjglMEQlMEEmcmVmXz1mdF9hcHBfZ29vZ2xlIgp0aXRsZT0iR2V0IHRoZSBJTURiIGFwcCBvbiBHb29nbGUgUGxheSIgdGFyZ2V0PSJfYmxhbmsiIGl0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtZ29vZ2xlIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnRfYXBwX2FtYXpvbiZ0b2tlbj1CQ1luLUh4TFh5Zl9sbTRGU2FtWmNreDZtLWMyNGdHMWpLV1hISWlybjhkeGxrTDJSVTZTcDdJLXFEd2VnTGowWC1FYUtVSU1WX2dfJTBEJTBBTFlkT19zVU1jYzNoVnVDLWs1NWYxaC1NTDI4azlTZFI1cmZXS0tGQmxGcEthRnlMWmRTZURpLVpfUWdnM0xYcmV2MlRXdnV6UmdkNiUwRCUwQVoycVVvRG8tVm54MTI5ZlpLcTZKVXAyYW9rRzhoMzZfMEVhZ29SWVpWY0dyejFPOTVBRHNTdFh5NjhNMmdkMW03WkhSMWMwNUM2b0UlMEQlMEEzLV92Uk9KRThWajZlNHdRWTkzcjQ5QVBta1dadG5FX0I3R0RFZDFuQXVUb1FMa0pRZFRlbEZrbUdhR1N2N1gxVFRUZ0NRMWhwaXp1JTBEJTBBZURHVjNPeUdfN0hWTWpCWk5nX3d1OThzVXQwY0lGZGdpaVRjX2lCQW1ta1hPOTI2SFkyLXhfd0Y0c18zUHVXN3dFSDdjZmJKLU9FcSUwRCUwQWg5YUxRVEtTNVNTbV9nOWU3OWFfZ25tQl9tXzkyUDlxTERReEpvQUpjZlhyYVZldVl3NCUwRCUwQSZyZWZfPWZ0X2FwcF9hbWF6b24iCnRpdGxlPSJHZXQgdGhlIElNRGIgYXBwIG9uIEFtYXpvbiBBcHBzdG9yZSBmb3IgQW5kcm9pZCIgdGFyZ2V0PSJfYmxhbmsiIGl0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtYW1hem9uIiA+PC9zcGFuPgo8L2E+CiAgICA8L2Rpdj4KCiAgICA8cD5GaW5kIHNob3d0aW1lcywgd2F0Y2ggdHJhaWxlcnMsIGJyb3dzZSBwaG90b3MsIHRyYWNrIHlvdXIgV2F0Y2hsaXN0IGFuZCByYXRlIHlvdXIgZmF2b3JpdGUgbW92aWVzIGFuZCBUViBzaG93cyBvbiB5b3VyIHBob25lIG9yIHRhYmxldCE8L3A+CgogICAgPGEgaHJlZj0iaHR0cDovL20uaW1kYi5jb20/cmVmXz1mdF9tZG90IgpjbGFzcz0idG91Y2hsaW5rIiA+SU1EYiBNb2JpbGUgc2l0ZTwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIGNlbnRlciI+CiAgPGRpdiBjbGFzcz0ibGluay1iYXIgaWNvbi1saW5rLWJhciI+CiAgICA8aDM+CiAgICAgIEZvbGxvdyBJTURiIG9uCiAgICAgIDxkaXY+CgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZvbF9mYiZ0b2tlbj1CQ1lwcllQZHBxUGQzTVoyYk9COTV4a0FQSXRJNnpWMi1Cb0pUaklRNVJtM0JMdmtfUFFQVlhLR25UMVhjV01NbnFhVHd2VGt4ckhmJTBEJTBBUTgyVHlhME9rS3g0S0txMXZrTmZjN045U24xMmItZ0lyUGprN1RIbDcybUsyRnpJd3pyVTlWNE45ZU5Ld2E3R0lSOFRKOU5XM29XciUwRCUwQW5VVm4zYjBiVWxOd0VwVDZQdEJETlNUa09odDhNazVvdDlpT19vUlZSRkVXck1EVlc3MTE0aVRnTy1oT240REs5USUwRCUwQSZyZWZfPXR0X2Z0X2ZvbF9mYiIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctZmFjZWJvb2siID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfdHcmdG9rZW49QkNZbk56WHd0bVdQRjF4RTdydXFYQ0V4ZnRQcHpQaUV1cTc4WWhuMFFwWW1fSmNlUk81SkdaNFpTU1JzWS01bkhDNml2SEZJa2VBZiUwRCUwQXlWc3Byd2Q5aTZVOHpJbldsU2dULWs3M19UajVPazFzLTRtcUdwNVR0ZFkzb2ZsSndPa3FESnlFRTBtWF9JZjRmc2lPVmxWUDFFUVklMEQlMEEwVlhoSU8tNHpfRE1BczBVMkpET243azFtSUhsU2pHWlBrVHhOaUFXOGp1V3AzeENoX051TS0xbUhpWks0YnVfb0ElMEQlMEEmcmVmXz10dF9mdF9mb2xfdHciCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBUd2l0dGVyIiB0YXJnZXQ9Il9ibGFuayIgaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctdHdpdHRlciIgPjwvc3Bhbj4KPC9hPgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZvbF9pbnN0JnRva2VuPUJDWW8td2dSWTJGb3RKZXdhbzkzRE1zeEdka3lSN1NVZU1jeks4dDliQ2I2akpISFEtZjE3TUc5clVubVcxZVhtMFdLZDBFRWRYZlclMEQlMEFGUGtIdngydmRNS0NFZlprYWVzQzNrdzVHTlhYRGpXcmt2Zm5KclVtRTJkMnh4RDN0cC1XMnpsYmxWem9ueGJiYlFiZlRaNmRYOFpIJTBEJTBBaHptX01KZWJ1bUZwUm1pVzV1T2VmZmxMNHpRZElHRzd0eG04RDFlMlUtWDNfX0JKdVBLdVhlUGdxQlF5TDNBZEtBJTBEJTBBJnJlZl89dHRfZnRfZm9sX2luc3QiCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBJbnN0YWdyYW0iIHRhcmdldD0iX2JsYW5rIiBpdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9ImRlc2t0b3Atc3ByaXRlIGZvbGxvdy1pbnN0YWdyYW0iID48L3NwYW4+CjwvYT4KICAgICAgPC9kaXY+CiAgICA8L2gzPgogIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgb3V0c2lkZSI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbCBjb2wtNCI+CiAgICAgICAgICAgIDx1bCBjbGFzcz0idW5zdHlsZWQiPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii8/cmVmXz1mdF9obSIKPkhvbWU8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wP3JlZl89ZnRfMjUwIgo+VG9wIFJhdGVkIE1vdmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC8/cmVmXz1mdF9jaHQiCj5Cb3ggT2ZmaWNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlY3Rpb25zL3R2Lz9yZWZfPWZ0X3R2Igo+VFY8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbW92aWVzLWNvbWluZy1zb29uLz9yZWZfPWZ0X2NzIgo+Q29taW5nIFNvb248L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYTJ6P3JlZl89ZnRfc2kiCj5TaXRlIEluZGV4PC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaD9yZWZfPWZ0X3NyIgo+U2VhcmNoPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1pbi10aGVhdGVycy8/cmVmXz1mdF9pbnRoIgo+SW4gVGhlYXRlcnM8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgY29sLTQiPgogICAgICAgICAgICA8dWwgY2xhc3M9InVuc3R5bGVkIj4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaGVscGRlc2svY29udGFjdD9yZWZfPWZ0X2NvbiIKPkNvbnRhY3QgVXM8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc2VjdXJlLmltZGIuY29tL3JlZ2lzdGVyLWltZGIvZm9ybS12Mj9yZWZfPWZ0X3JlZyIKPlJlZ2lzdGVyPC9hPgo8L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzLz9yZWZfPWZ0X253Igo+TmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByZXNzcm9vbS8/cmVmXz1mdF9wciIKPlByZXNzIFJvb208L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYWR2ZXJ0aXNpbmcvP3JlZl89ZnRfYWQiCj5BZHZlcnRpc2luZzwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzP3JlZl89ZnRfamIiCj5Kb2JzPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sIGNvbC00Ij4KICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bnN0eWxlZCI+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3Byby5pbWRiLmNvbS9zaWdudXAvaW5kZXguaHRtbD9yZj1jb25zX2Z0X2htJnJlZl89Y29uc19mdF9obSIKPklNRGJQcm88L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LW1vam8mdG9rZW49QkNZcnFjZ1Y5NGdJOUVEZGpSX0pGdkZScWJ0ZVZRcGt2bU15cWxocHZ6dnZmbWtRdHEzQW8xX19KcHFqS1JlZnV1SXJrd0JiM2J2RCUwRCUwQVdYd20xakxCSnpkaFkxakFnV1lRWXBzRXhtb2hLdzRvb0pTRnBxMk9HNVFNS1lyS0VONzY1cGtOY1pWaUd1aEw5Sm9MMDNVd1JqSXglMEQlMEE0LTkzbEJuaGlYWlFDY3BlMVZPR1FoVHpna2JaNFk5cFlfY3VrRGs5Q25DcTVsN0VDV08wYlRFOUY4aTh1cjJHMUElMEQlMEEmcmVmXz1mdF9ib20iCml0ZW1wcm9wPSd1cmwnPkJveCBPZmZpY2UgTW9qbzwvYT4KPC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LXdhYiZ0b2tlbj1CQ1lzSEZoOFNQRS12UHVCVTZOd3hPRXlteGxxUS1PaDFZQUNYSXFoTUJBbmpGMHZTbTRoVFROdXFuNzZmN2tZMHBqZllXd2lYNWVTJTBEJTBBbVFoQmRTMW94dG9ZeURGeHo1YU1rTmp6dFdnMVVZb1pZQXkyMENkVzF6bXFuNmo3MjBYbjVxYUZ0bV9fMHJLd0NweEdTWmI5ckNTdSUwRCUwQUE3eGRvNEFIVk5zd0ItX3dITkNsRFoxUXhveTdPa0stWmNhc1ZKU3o4RldRTktmQVdhN01MS1lIUXdod29sUktBZyUwRCUwQSZyZWZfPWZ0X3dhYiIKaXRlbXByb3A9J3VybCc+V2l0aG91dGFib3g8L2E+CjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaGVscC9zaG93X2FydGljbGU/Y29uZGl0aW9ucyZyZWZfPWZ0X2NvdSIKPkNvbmRpdGlvbnMgb2YgVXNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByaXZhY3k/cmVmXz1mdF9wdmMiCj5Qcml2YWN5IFBvbGljeTwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtaWJhJnRva2VuPUJDWWhJM1BKeHk3WGFJNldOSmo1NDhKUUFyS0xxb0oyRFFXS2hMWVNMLXV5VWhRdEJrTVhzRHN0TVJlZ3JybWFKSUV0UE5KNDY0YU0lMEQlMEFtYS1zQTJOdzBvcFJSNmJNRzhXUjlHSnFkdXlLVzJWeWI3c3ZoTUVyOWVqZWkwTWNxTkNvNklwS2lteTB2Vy1td2VzUDFVdFUwaUFSJTBEJTBBUWFOM0FIS0RmZ202eFR0ZmF6NHlVMjRWQ0FLV3lOc25NYkR3dGl2cWRoS0RTOU1ndzFtdkJYWTJ6cHpRdFJkU3p0aWZZSzRTTU9IeCUwRCUwQXh0RmctS3pGMExCcUJKOGtoNmlFbkhEdkNtY0gyT25tJTBEJTBBJnJlZl89ZnRfaWJhIgppdGVtcHJvcD0ndXJsJz5JbnRlcmVzdC1CYXNlZCBBZHM8L2E+CjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmdC1jb3B5IGZsb2F0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxhCmhyZWY9Ii9oZWxwL3Nob3dfYXJ0aWNsZT9jb25kaXRpb25zIgo+Q29weXJpZ2h0ICZjb3B5OzwvYT4gMTk5MC0yMDE3CiAgICAgICAgICAgICAgICA8YQpocmVmPSIvaGVscC8iCj5JTURiLmNvbSwgSW5jLjwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICBBbiA8c3BhbiBpZD0iYW1hem9uX2xvZ28iIGNsYXNzPSJmb290ZXJfbG9nbyIgYWxpZ249Im1pZGRsZSI+QW1hem9uLmNvbTwvc3Bhbj4gY29tcGFueS4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgoKCiAgICA8dGFibGUgY2xhc3M9ImZvb3RlciIgaWQ9ImFtYXpvbi1hZmZpbGlhdGVzIj4KICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI4Ij4KICAgICAgICAgICAgICAgIEFtYXpvbiBBZmZpbGlhdGVzCiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1haXYmdG9rZW49QkNZbGpKVTZNeUk4WGNSZldfWURSa25JRTNOZEZKdGUxckFRR0ZJdVIwOWwteGlrX3RwRWQ1Um9MVTNkRmhXTFJ0OHBZTXM4d1ZvVyUwRCUwQUx6RGxSSmVXZmZaVWM4UFQ2SGZ1SHI1Ym9uUlpNNUgtQVNCbUxFQjhXNWpIVjRYY1BvMjdpWXNtSFVjc0xqVndDTXZLcjhkTXNHMDMlMEQlMEFZRHd6VlVBZ2hMRlRvbmdwVGdPcHNaREdfb1p2Q1JiWW9ZUkdDT2R4ZXJPd2RrRHlfZGpycFB0MFdwN1FRUFRwdTh0aWF2UXY2eHVQJTBEJTBBYTkwTDVnUFZXNWclMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPkFtYXpvbiBWaWRlbzwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPldhdGNoIE1vdmllcyAmPGJyPlRWIE9ubGluZTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC90ZD4KCiAgICA8dGQ+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LXBpdiZ0b2tlbj1CQ1lsNHRWYlhGenlmc3d5VzhYdzNrT0ZLTmZhckNjcW9OaXlKUnhlR3UzMFpDcDRaYWFNQ2pVMHNnb0xETTV6cFlPMDB6RFJZUGlJJTBEJTBBNVN6N3ZQUEd3V1FPcUliZVF5RzdUUUZmUXd5MTJMTnpBQ01hSXM4eUN5ZUdFQmdOWG1hVUMxS2RLSFoyZGdsR2hLNEptemJ2bi1YUiUwRCUwQTV0YUswVk11cjRubkh5NFlPNGJJb2t0ak8tQzBGTDkzaVNHSVY1bjNSUnVWWUhKN0h2cS1HVmo0dFQ4TGczdzdEOW56bi1lSkRUNEElMEQlMEFGbVZtWHo0TWk3YyUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+UHJpbWUgVmlkZW88L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5VbmxpbWl0ZWQgU3RyZWFtaW5nPGJyPm9mIE1vdmllcyAmIFRWPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1kZSZ0b2tlbj1CQ1l2bU1tQ3ZhV2VGTGluckZubzZqS3dWTkpMUXV3QVlRd0JfX2ZFY0FZazZhUS1qY0lTWDdoOW1hYlhNUzJUejgzZU1za3dDQmtIJTBEJTBBZEdwVVNxX2d4Yi12eXVSNFlVSlJIODJ1SWNPak9WOXNCeXZXS2FqR0M1aTJQeGhVV3RrTDh4OEZzdDU5VXZSVktEZDc5N1JXYUNHMCUwRCUwQUFuTFhJQjNHbEpMc2xoT3Q4ejVDRlNXaDVTR2FRbkpveEdqTFNhT0txSE5fS3pkZmdlVDlBaFNLXzEzazQxelZjWFhBdVJndXJ2SlglMEQlMEFSUFFIODJEMGs0YyUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEdlcm1hbnk8L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5CdXkgTW92aWVzIG9uPGJyPkRWRCAmIEJsdS1yYXk8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWl0JnRva2VuPUJDWXNLbWVSbGx2RDJVeVBWM3F4U1VhRzVhUmY5amRHSEJvUzZHSDB3TGdHb3RCcWJYV3VFVEw3a2g3MkI0Q1l1RUs0ODR1QjlfRWclMEQlMEFERFlOMXR1X3lpUHB2b0VPWEJIRUNpVGt1d2JEVXlNazNKSlE4N3FILXVnckRwNm9BUTA4Zkk2eGdfT1VreVNhd2xrNWdoVWdtVnRjJTBEJTBBc1MzTTFCTXd3ME9zV0M5b3dEQzZlbk1QR2Q0QWNVNzd3RTN5MlVmdGQyaGFuZnRqeVlkc3Z3dDhMUHQ0VVdWTExBTmIzN1NwT0FmSyUwRCUwQUFQS0lFRnJjdERjJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BbWF6b24gSXRhbHk8L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5CdXkgTW92aWVzIG9uPGJyPkRWRCAmIEJsdS1yYXk8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWZyJnRva2VuPUJDWXUxZlJRT1N5VHlLZV9CZ2JwT25Xak5uMGtUZDBMT2N5Nkd4ODdJc1QwQXFYRDE5ZnF3aTVyczE0MlNWRjc2X1VFLUsxTGtWV3YlMEQlMEFFaklGTG9vSWRwM21iQkRfRTZKaFFjTVlhYjFHemd3RXo1bk1qUVBuX1g5cHVmVFlSbEtWT040VzBCc01xTF9EbkZpN1RXNk9Xd0RhJTBEJTBBNHVZZzAyVmFGWnIzUW1PdTJUWEtVa2RRV0xaMDZ3LU1ZWW5WRHU2emZFTnQ1LXFJNEJMZmpWU0Q3OGl3TTh3bllraUxjMmJFclk2VCUwRCUwQVFfdHJxOEFJTVZzJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BbWF6b24gRnJhbmNlPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllcyBvbjxicj5EVkQgJiBCbHUtcmF5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1pbiZ0b2tlbj1CQ1lxVEh2c1dmenZlSGJhdlRSWm9qZ3dDVFQtUkF4XzFUTGJjclpTV09OM3ZIQU9hWVVFUHpUMEN4THJjeVdQRlB3bWdSdnhsN3d1JTBEJTBBTTlKUHRHLWE3a2hZQnA1ZWc4V2FHb2tHTndYYUJ6SW8wM2gyN1VsVk5JTUsxNktwY29ReDczS2dabnJuSlhJRlViZ1FkdTdCVDZJVSUwRCUwQV9CZTFBd1pZdkZXS2h0cG0tZkZ6THR3QlZ2QjFUM3J4ZzlvN1NKZ00wdkp4ZFgyeHNBdk1JRFUwY0xiVmRMVUpsbGM0MGdDOTdPZXAlMEQlMEF5XzdKSjVxLUJ5a0l3VHZUU2dsTk40VmFRa3dzajlmQyUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEluZGlhPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllIGFuZDxicj5UViBTaG93IERWRHM8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWRwciZ0b2tlbj1CQ1lvTW00SzhvNjNEdTFrMUx4RExDYXBVNWVRQUVvdENHa0cybE9JLVlhaGlRYzVWT2xGeUlvVUQ5a1ZCNmI4Qy1kWUFRU09KNnlZJTBEJTBBQ1ZoY1BENkRrbkVlU1M4WURJdG9nNHF4Mm5XLXRRYl9ZZFh0NnBUcDlTYlRHa2I3X0lqcGVzbWlCOFVJQ0pPVjNVNDFmUHdEN3hSSCUwRCUwQXRIN1hJdm1KdHF5OXNzVHFTSzZjVnFjJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5EUFJldmlldzwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkRpZ2l0YWw8YnI+UGhvdG9ncmFwaHk8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWF1ZCZ0b2tlbj1CQ1lwbHI4TFUwZmgxLURORHpBci15S0tjVTFuRC0xeVZIWDBaT29RNkN1bDZfVWs4X2lvdXBoa18wV3RiSHBqcmUyczcydFRhOUhrJTBEJTBBY3NaenptUDVOMVZFUlFEeFZaQ3hNcWJIM0h5OTU2c1p5UDNsb3dScnI0Y3F0eG9pRzhpVEZwTmY1b2pwTUJEc1BMNkFQY1J4WTBzSSUwRCUwQUV4ckFmSGt1Mmx2dkROcS1YRzJIc2RrJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BdWRpYmxlPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+RG93bmxvYWQ8YnI+QXVkaW8gQm9va3M8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvY29tbW9uLTI0MTExMTk0NDUuX0NCNTA4MDg0MDg0Xy5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2pzL2NvbGxlY3Rpb25zL3RpdGxlLTE1NzA5NjcyNjcuX0NCNTAzOTE4MjkzXy5qcyI+PC9zY3JpcHQ+Cgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgaWQ9ImxvZ2luIj4KKGZ1bmN0aW9uKCl7CiAgICB2YXIgcmVhZHlUaW1lb3V0ID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKHdpbmRvdy5qUXVlcnkgJiYgd2luZG93LmltZGIgJiYgd2luZG93LmltZGIubG9naW5fbGlnaHRib3gpIHsKICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHJlYWR5VGltZW91dCk7CiAgICAgICAgICAgIHdpbmRvdy5pbWRiLmxvZ2luX2xpZ2h0Ym94KCk7CiAgICAgICAgfQogICAgfSwgMTAwKTsKfSkoKTsKPC9zY3JpcHQ+CgogICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICBmdW5jdGlvbiBqUXVlcnlPblJlYWR5KHJlbWFpbmluZ19jb3VudCkgewogICAgICAgICAgICBpZiAod2luZG93LmpRdWVyeSAmJiB0eXBlb2YgJC5mbi53YXRjaGxpc3RSaWJib24gIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgICAgICBqUXVlcnkoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgdmFyIGlzQWR2ZXJ0aXNpbmdUaGVtZWQgPSAhISh3aW5kb3cuY3VzdG9tICYmIHdpbmRvdy5jdXN0b20uZnVsbF9wYWdlICYmIHdpbmRvdy5jdXN0b20uZnVsbF9wYWdlLnRoZW1lKSwKICAgICAgICAgICAgICAgdXJsID0gImh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3dpZGdldHMvbGlrZS5waHA/d2lkdGg9MjgwJnNob3dfZmFjZXM9MSZsYXlvdXQ9c3RhbmRhcmQmaHJlZj1odHRwJTNBJTJGJTJGd3d3LmltZGIuY29tJTJGdGl0bGUlMkZ0dDAxMTg3MTUlMkYmY29sb3JzY2hlbWU9bGlnaHQiLAogICAgICAgICAgICAgICBsaWtlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lmcmFtZV9saWtlJyk7CgogICAgICAgICAgIGlmICghaXNBZHZlcnRpc2luZ1RoZW1lZCAmJiBsaWtlKSB7CiAgICAgICAgICAgICAgbGlrZS5zcmMgPSB1cmw7CiAgICAgICAgICAgICAgbGlrZS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7IAogICAgICAgICAgICAgICAgICBpZiAodWV4KSB7IHVleCgnbGQnLCAnZmFjZWJvb2tfbGlrZV9pZnJhbWUnLCB7d2I6IDF9KTsgfQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgfSBlbHNlIGlmIChpc0FkdmVydGlzaW5nVGhlbWVkKSB7CiAgICAgICAgICAgICAgJCgnLnNvY2lhbF9uZXR3b3JraW5nX2xpa2UnKS5jbG9zZXN0KCcuYXV4LWNvbnRlbnQtd2lkZ2V0LTInKS5oaWRlKCk7CiAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgalF1ZXJ5KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkgewogICAgICAgICAgICB2YXIgZmFjZWJvb2tUaGVtZSA9ICh3aW5kb3cuY3VzdG9tICYmIHdpbmRvdy5jdXN0b20uZnVsbF9wYWdlICYmCiAgICAgICAgICAgICAgICAgICAgd2luZG93LmN1c3RvbS5mdWxsX3BhZ2UudGhlbWUpID8KICAgICAgICAgICAgICAgIHdpbmRvdy5jdXN0b20uZnVsbF9wYWdlLnRoZW1lIDogImxpZ2h0IiwKICAgICAgICAgICAgdXJsID0gIi8vd3d3LmZhY2Vib29rLmNvbS9wbHVnaW5zL2xpa2Vib3gucGhwP2hyZWY9ZmFjZWJvb2suY29tJTJGaW1kYiZ3aWR0aD0zMDAmaGVpZ2h0PTE5MCZjb25uZWN0aW9ucz00JmhlYWRlcj1mYWxzZSZzdHJlYW09ZmFsc2UmY29sb3JzY2hlbWU9IiArIGZhY2Vib29rVGhlbWUsCiAgICAgICAgICAgIGxpa2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmFjZWJvb2tJZnJhbWUnKSwKICAgICAgICAgICAgdHdpdHRlcklmcmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0d2l0dGVySWZyYW1lJyk7CiAgICAgICAgICAgIGlmIChsaWtlKSB7CiAgICAgICAgICAgICAgICBsaWtlLnNyYyA9IHVybDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodHdpdHRlcklmcmFtZSkgewogICAgICAgICAgICAgICAgdHdpdHRlcklmcmFtZS5zcmMgPSAiaHR0cDovL2kubWVkaWEtaW1kYi5jb20vaW1hZ2VzL3NvY2lhbC90d2l0dGVyLmh0bWw/MTAjaW1kYiI7CiAgICAgICAgICAgIH0KICAgICAgICAgfQoKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVtYWluaW5nX2NvdW50ID4gMCkgewogICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsgalF1ZXJ5T25SZWFkeShyZW1haW5pbmdfY291bnQtMSkgfSwgMTAwKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBqUXVlcnlPblJlYWR5KDUwKTsKICAgICAgICA8L3NjcmlwdD4KCgo8ZGl2IGlkPSJzZXJ2ZXJ0aW1lIiB0aW1lPSIxOTAiLz4KCgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIpOwogICAgfQo8L3NjcmlwdD4KCiAgICA8L2JvZHk+CjwvaHRtbD4KCg==
    http_version: 
  recorded_at: Tue, 01 Aug 2017 17:44:57 GMT
recorded_with: VCR 3.0.3
